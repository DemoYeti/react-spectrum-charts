"use strict";(self.webpackChunk_adobe_react_spectrum_charts=self.webpackChunk_adobe_react_spectrum_charts||[]).push([[967],{"./src/alpha/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{R:()=>Donut});var constants=__webpack_require__("./src/constants.ts");const Donut=({children,color=constants.OT,hasDirectLabels=!1,holeRatio=.85,isBoolean=!1,metric=constants.bA,metricLabel,name,segment,startAngle=0})=>null;Donut.displayName="Donut"},"./src/components/Annotation/Annotation.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Y:()=>Annotation});const Annotation=({textKey="annotation",style})=>null;Annotation.displayName="Annotation"},"./src/components/Annotation/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Y:()=>_Annotation__WEBPACK_IMPORTED_MODULE_0__.Y});var _Annotation__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/Annotation/Annotation.tsx")},"./src/components/Axis/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{_:()=>Axis});var constants=__webpack_require__("./src/constants.ts");const Axis=({position,baseline=!1,baselineOffset=0,granularity=constants.HJ,grid=!1,hideDefaultLabels=!1,labelAlign=constants.hg,labelFontWeight=constants.m7,labelFormat,labelOrientation=constants.uv,labels,numberFormat="shortNumber",range,subLabels,ticks=!1,tickMinStep,title})=>null;Axis.displayName="Axis"},"./src/components/Bar/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{y:()=>Bar});var constants=__webpack_require__("./src/constants.ts");const Bar=({dimension=constants.w4,color={value:"categorical-100"},metric=constants.bA,type="stacked",opacity={value:1},lineType={value:"solid"},orientation="vertical",trellisOrientation="horizontal",trellisPadding=constants.Om,paddingRatio=constants.WN,paddingOuter})=>null;Bar.displayName="Bar"},"./src/components/ChartTooltip/ChartTooltip.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{I:()=>ChartTooltip});const ChartTooltip=({children,excludeDataKeys:excludeDataKey})=>null;ChartTooltip.displayName="ChartTooltip"},"./src/components/EmptyState/EmptyState.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{p:()=>EmptyState_EmptyState_EmptyState});__webpack_require__("./node_modules/react/index.js");var dist_import=__webpack_require__("./node_modules/@react-spectrum/layout/dist/import.mjs"),text_dist_import=__webpack_require__("./node_modules/@react-spectrum/text/dist/import.mjs"),GraphBarVertical_module=__webpack_require__("./node_modules/@spectrum-icons/workflow/GraphBarVertical.module.mjs"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),EmptyState=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./src/components/EmptyState/EmptyState.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(EmptyState.A,options);EmptyState.A&&EmptyState.A.locals&&EmptyState.A.locals;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const EmptyState_EmptyState_EmptyState=({height,text})=>(0,jsx_runtime.jsxs)(dist_import.so,{direction:"column",justifyContent:"center",alignItems:"center",height,children:[(0,jsx_runtime.jsx)(GraphBarVertical_module.A,{size:"XXL",UNSAFE_className:"EmptyState-icon"}),Boolean(text)&&(0,jsx_runtime.jsx)(text_dist_import.EY,{UNSAFE_className:"EmptyState-text",children:text})]});EmptyState_EmptyState_EmptyState.displayName="EmptyState",EmptyState_EmptyState_EmptyState.__docgenInfo={description:"",methods:[],displayName:"EmptyState",props:{height:{required:!1,tsType:{name:"number"},description:""},text:{required:!1,tsType:{name:"string"},description:""}}}},"./src/components/ReferenceLine/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{e:()=>ReferenceLine});var constants=__webpack_require__("./src/constants.ts");const ReferenceLine=({value,labelFontWeight=constants.m7})=>null;ReferenceLine.displayName="ReferenceLine"},"./src/constants.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$M:()=>OPACITY_SCALE,AZ:()=>TRENDLINE_VALUE,Bg:()=>LINE_WIDTH_SCALE,Bt:()=>TABLE,H5:()=>FILTERED_TABLE,HJ:()=>DEFAULT_GRANULARITY,IZ:()=>DISCRETE_PADDING,K9:()=>DEFAULT_AXIS_ANNOTATION_COLOR,Lr:()=>DEFAULT_TIME_DIMENSION,Nq:()=>DEFAULT_SYMBOL_SIZE,OT:()=>DEFAULT_COLOR,Om:()=>TRELLIS_PADDING,P3:()=>ANNOTATION_FONT_WEIGHT,R9:()=>DEFAULT_LINE_TYPES,SJ:()=>SYMBOL_SHAPE_SCALE,SR:()=>SYMBOL_PATH_WIDTH_SCALE,Tj:()=>COLOR_SCALE,VQ:()=>LINEAR_COLOR_SCALE,WN:()=>PADDING_RATIO,Xn:()=>DEFAULT_LOCALE,Xz:()=>STACK_ID,ZH:()=>DEFAULT_OPACITY_RULE,Ze:()=>LINE_TYPE_SCALE,Zx:()=>DEFAULT_SYMBOL_STROKE_WIDTH,b3:()=>BACKGROUND_COLOR,bA:()=>DEFAULT_METRIC,eK:()=>ANNOTATION_FONT_SIZE,ec:()=>MS_PER_DAY,gG:()=>HIGHLIGHTED_SERIES,gO:()=>DEFAULT_TITLE_FONT_WEIGHT,gb:()=>DEFAULT_COLOR_SCHEME,hA:()=>DEFAULT_DIMENSION_SCALE_TYPE,hg:()=>DEFAULT_LABEL_ALIGN,i4:()=>MARK_ID,iJ:()=>SYMBOL_SIZE_SCALE,m7:()=>DEFAULT_LABEL_FONT_WEIGHT,mm:()=>LEGEND_TOOLTIP_DELAY,qE:()=>HIGHLIGHTED_ITEM,sk:()=>SELECTED_ITEM,tc:()=>DEFAULT_LINEAR_DIMENSION,uP:()=>LINEAR_PADDING,uW:()=>SELECTED_SERIES,uv:()=>DEFAULT_LABEL_ORIENTATION,ux:()=>HIGHLIGHT_CONTRAST_RATIO,v6:()=>DEFAULT_TRANSFORMED_TIME_DIMENSION,w4:()=>DEFAULT_CATEGORICAL_DIMENSION,y4:()=>SERIES_ID,yA:()=>DEFAULT_AXIS_ANNOTATION_OFFSET,z6:()=>DEFAULT_BACKGROUND_COLOR,zu:()=>CORNER_RADIUS});const ANNOTATION_FONT_SIZE=12,ANNOTATION_FONT_WEIGHT="bold",DEFAULT_AXIS_ANNOTATION_COLOR="gray-600",DEFAULT_AXIS_ANNOTATION_OFFSET=80,DEFAULT_BACKGROUND_COLOR="transparent",DEFAULT_CATEGORICAL_DIMENSION="category",DEFAULT_COLOR="series",DEFAULT_COLOR_SCHEME="light",DEFAULT_DIMENSION_SCALE_TYPE="linear",DEFAULT_GRANULARITY="day",DEFAULT_LABEL_ALIGN="center",DEFAULT_LABEL_FONT_WEIGHT="normal",DEFAULT_LABEL_ORIENTATION="horizontal",DEFAULT_LINE_TYPES=["solid","dashed","dotted","dotDash","longDash","twoDash"],DEFAULT_LINEAR_DIMENSION="x",DEFAULT_LOCALE="en-US",DEFAULT_METRIC="value",DEFAULT_SYMBOL_SIZE=100,DEFAULT_SYMBOL_STROKE_WIDTH=2,DEFAULT_TIME_DIMENSION="datetime",DEFAULT_TRANSFORMED_TIME_DIMENSION=`${DEFAULT_TIME_DIMENSION}0`,DEFAULT_TITLE_FONT_WEIGHT="bold",TABLE="table",FILTERED_TABLE="filteredTable",SERIES_ID="rscSeriesId",MARK_ID="rscMarkId",TRENDLINE_VALUE="rscTrendlineValue",STACK_ID="rscStackId",HIGHLIGHTED_ITEM="highlightedItem",HIGHLIGHTED_SERIES="highlightedSeries",SELECTED_ITEM="selectedItem",SELECTED_SERIES="selectedSeries",COLOR_SCALE="color",LINE_TYPE_SCALE="lineType",LINEAR_COLOR_SCALE="linearColor",LINE_WIDTH_SCALE="lineWidth",OPACITY_SCALE="opacity",SYMBOL_SHAPE_SCALE="symbolShape",SYMBOL_SIZE_SCALE="symbolSize",SYMBOL_PATH_WIDTH_SCALE="symbolPathWidth",DEFAULT_OPACITY_RULE={value:1},CORNER_RADIUS=6,DISCRETE_PADDING=.5,PADDING_RATIO=.4,LINEAR_PADDING=32,TRELLIS_PADDING=.2,HIGHLIGHT_CONTRAST_RATIO=5,LEGEND_TOOLTIP_DELAY=350,BACKGROUND_COLOR="chartBackgroundColor",MS_PER_DAY=864e5},"./src/hooks/useChartProps.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>useChartProps});var storybook_dark_mode__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/storybook-dark-mode/dist/esm/index.js");function useChartProps(props){return{colorScheme:(0,storybook_dark_mode__WEBPACK_IMPORTED_MODULE_0__.D2)()?"dark":"light",...props}}},"./src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Gk:()=>Area,_0:()=>Axis._,bl:()=>AxisAnnotation,yP:()=>Bar.y,t1:()=>Chart_Chart,kZ:()=>ChartPopover,II:()=>ChartTooltip.I,s$:()=>Legend,N1:()=>Line,uz:()=>MetricRange_MetricRange,Xl:()=>Scatter,Yc:()=>ScatterPath,hE:()=>Title,cY:()=>Trendline,$M:()=>TrendlineAnnotation,u0:()=>categorical12,uU:()=>categorical16,JB:()=>categorical6});var Annotation=__webpack_require__("./src/components/Annotation/index.ts"),constants=__webpack_require__("./src/constants.ts");const Area=({children,name,opacity=.8,order,scaleType="time",color=constants.OT,dimension=constants.Lr,metric=constants.bA,metricEnd,metricStart,padding})=>null;Area.displayName="Area";var Axis=__webpack_require__("./src/components/Axis/index.ts");const AxisAnnotation=({dataKey="annotations",color=constants.K9,offset=constants.yA})=>null;AxisAnnotation.displayName="AxisAnnotation";var Bar=__webpack_require__("./src/components/Bar/index.ts");const ChartPopover=({children,width=250})=>null;ChartPopover.displayName="ChartPopover";var ChartTooltip=__webpack_require__("./src/components/ChartTooltip/ChartTooltip.tsx"),EmptyState=__webpack_require__("./src/components/EmptyState/EmptyState.tsx");const Legend=({color,defaultHiddenSeries,descriptions,hiddenEntries,highlight=!1,isToggleable=!1,legendLabels,lineType,lineWidth,onClick,onMouseOut,onMouseOver,opacity,position="bottom",symbolShape,title})=>null;Legend.displayName="Legend";const Line=({name="line0",dimension=constants.Lr,metric=constants.bA,color={value:"categorical-100"},scaleType="time",lineType={value:"solid"},padding})=>null;Line.displayName="Line";const ScatterPath=({color="gray-500",groupBy,pathWidth={value:"M"},opacity=.5})=>null;ScatterPath.displayName="ScatterPath";const MetricRange_MetricRange=({children,color,lineType="dashed",lineWidth="M",rangeOpacity=.2,metricEnd,metricStart,metric=constants.bA,displayOnHover=!1,scaleAxisToFit=!1})=>null;MetricRange_MetricRange.displayName="MetricRange";var ReferenceLine=__webpack_require__("./src/components/ReferenceLine/index.ts");const Title=({text,fontWeight=constants.gO,position="middle",orient="top"})=>null;Title.displayName="Title";const Trendline=({children,color,dimensionExtent,dimensionRange=[null,null],displayOnHover=!1,excludeDataKeys,highlightRawPoint=!1,lineType="dashed",lineWidth="M",method="linear",opacity=1})=>null;Trendline.displayName="Trendline";const TrendlineAnnotation=({badge=!1,dimensionValue="end",numberFormat="",prefix=""})=>null;TrendlineAnnotation.displayName="TrendlineAnnotation";const Scatter=({color=constants.OT,colorScaleType,dimension=constants.tc,children,lineType={value:"solid"},lineWidth={value:0},metric=constants.bA,name,opacity={value:1},size={value:constants.Nq}})=>null;Scatter.displayName="Scatter";var react=__webpack_require__("./node_modules/react/index.js"),dist_import=__webpack_require__("./node_modules/@react-spectrum/layout/dist/import.mjs"),progress_dist_import=__webpack_require__("./node_modules/@react-spectrum/progress/dist/import.mjs"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const LoadingState=props=>(0,jsx_runtime.jsx)(dist_import.so,{direction:"column",justifyContent:"center",alignItems:"center",...props,children:(0,jsx_runtime.jsx)(progress_dist_import.a3,{isIndeterminate:!0,size:"L"})});function useChartImperativeHandle(forwardedRef,props){return(0,react.useImperativeHandle)(forwardedRef,(()=>({copy:()=>copy(props),download:customFileName=>download(props,customFileName),getBase64Png:()=>getBase64Png(props),getSvg:()=>getSvg(props)})))}LoadingState.displayName="LoadingState",LoadingState.__docgenInfo={description:"",methods:[],displayName:"LoadingState",props:{height:{required:!1,tsType:{name:"number"},description:""}}};const copy=({chartView})=>new Promise(((resolve,reject)=>{chartView.current?chartView.current.toImageURL("png").then((async url=>{try{const response=await fetch(url),blob=await response.blob();navigator.clipboard.write([new ClipboardItem({"image/png":blob})]).then((()=>resolve("Chart copied to clipboard")),(()=>reject(new Error("Error occurred while writing to clipboard, copy to clipboard failed"))))}catch(error){reject(new Error("Error occurred while fetching image, copy to clipboard failed"))}}),(()=>reject(new Error("Error occurred while converting image to URL, copy to clipboard failed")))):reject(new Error("There isn't a chart to copy, copy to clipboard failed"))})),download=({chartView,title},customFileName)=>new Promise(((resolve,reject)=>{if(chartView.current){const filename=`${customFileName??title??"chart_export"}.png`;chartView.current.toImageURL("png").then((url=>{const link=document.createElement("a");link.setAttribute("href",url),link.setAttribute("target","_blank"),link.setAttribute("download",filename),link.dispatchEvent(new MouseEvent("click")),resolve(`Chart downloaded as ${filename}`)}),(()=>reject(new Error("Error occurred while converting image to URL, download failed"))))}else reject(new Error("There isn't a chart to download, download failed"))})),getBase64Png=({chartView})=>new Promise(((resolve,reject)=>{chartView.current?chartView.current.toImageURL("png").then((async url=>{try{const response=await fetch(url),blob=await response.blob(),base64Png=await blobToBase64(blob);"string"==typeof base64Png?resolve(base64Png):reject(new Error("Error occurred while converting image to base64, get base64 PNG failed"))}catch(error){reject(new Error("Error occurred while fetching image, get base64 PNG failed"))}}),(()=>reject(new Error("Error occurred while converting image to URL, get base64 PNG failed")))):reject(new Error("There isn't a chart to get the PNG from, get base64 PNG failed"))})),blobToBase64=blob=>new Promise((resolve=>{const reader=new FileReader;reader.onloadend=()=>resolve(reader.result),reader.readAsDataURL(blob)})),getSvg=({chartView})=>new Promise(((resolve,reject)=>{chartView.current?chartView.current.toSVG().then((value=>resolve(value)),(()=>reject(new Error("Error occurred while converting chart to SVG")))):reject(new Error("There isn't a chart to get the SVG from, get SVG failed"))}));const spectrumColors_namespaceObject=JSON.parse('{"light":{"gray-50":"rgb(255, 255, 255)","gray-75":"rgb(253, 253, 253)","gray-100":"rgb(248, 248, 248)","gray-200":"rgb(230, 230, 230)","gray-300":"rgb(213, 213, 213)","gray-400":"rgb(177, 177, 177)","gray-500":"rgb(144, 144, 144)","gray-600":"rgb(109, 109, 109)","gray-700":"rgb(70, 70, 70)","gray-800":"rgb(34, 34, 34)","gray-900":"rgb(0, 0, 0)","blue-100":"rgb(224, 242, 255)","blue-200":"rgb(202, 232, 255)","blue-300":"rgb(181, 222, 255)","blue-400":"rgb(150, 206, 253)","blue-500":"rgb(120, 187, 250)","blue-600":"rgb(89, 167, 246)","blue-700":"rgb(56, 146, 243)","blue-800":"rgb(20, 122, 243)","blue-900":"rgb(2, 101, 220)","blue-1000":"rgb(0, 84, 182)","blue-1100":"rgb(0, 68, 145)","blue-1200":"rgb(0, 53, 113)","blue-1300":"rgb(0, 39, 84)","green-100":"rgb(206, 248, 224)","green-200":"rgb(173, 244, 206)","green-300":"rgb(137, 236, 188)","green-400":"rgb(103, 222, 168)","green-500":"rgb(73, 204, 147)","green-600":"rgb(47, 184, 128)","green-700":"rgb(21, 164, 110)","green-800":"rgb(0, 143, 93)","green-900":"rgb(0, 122, 77)","green-1000":"rgb(0, 101, 62)","green-1100":"rgb(0, 81, 50)","green-1200":"rgb(5, 63, 39)","green-1300":"rgb(10, 46, 29)","orange-100":"rgb(255, 236, 204)","orange-200":"rgb(255, 223, 173)","orange-300":"rgb(253, 210, 145)","orange-400":"rgb(255, 187, 99)","orange-500":"rgb(255, 160, 55)","orange-600":"rgb(246, 133, 17)","orange-700":"rgb(228, 111, 0)","orange-800":"rgb(203, 93, 0)","orange-900":"rgb(177, 76, 0)","orange-1000":"rgb(149, 61, 0)","orange-1100":"rgb(122, 47, 0)","orange-1200":"rgb(97, 35, 0)","orange-1300":"rgb(73, 25, 1)","red-100":"rgb(255, 235, 231)","red-200":"rgb(255, 221, 214)","red-300":"rgb(255, 205, 195)","red-400":"rgb(255, 183, 169)","red-500":"rgb(255, 155, 136)","red-600":"rgb(255, 124, 101)","red-700":"rgb(247, 92, 70)","red-800":"rgb(234, 56, 41)","red-900":"rgb(211, 21, 16)","red-1000":"rgb(180, 0, 0)","red-1100":"rgb(147, 0, 0)","red-1200":"rgb(116, 0, 0)","red-1300":"rgb(89, 0, 0)","celery-100":"rgb(205, 252, 191)","celery-200":"rgb(174, 246, 157)","celery-300":"rgb(150, 238, 133)","celery-400":"rgb(114, 224, 106)","celery-500":"rgb(78, 207, 80)","celery-600":"rgb(39, 187, 54)","celery-700":"rgb(7, 167, 33)","celery-800":"rgb(0, 145, 18)","celery-900":"rgb(0, 124, 15)","celery-1000":"rgb(0, 103, 15)","celery-1100":"rgb(0, 83, 13)","celery-1200":"rgb(0, 64, 10)","celery-1300":"rgb(0, 48, 7)","chartreuse-100":"rgb(219, 252, 110)","chartreuse-200":"rgb(203, 244, 67)","chartreuse-300":"rgb(188, 233, 42)","chartreuse-400":"rgb(170, 216, 22)","chartreuse-500":"rgb(152, 197, 10)","chartreuse-600":"rgb(135, 177, 3)","chartreuse-700":"rgb(118, 156, 0)","chartreuse-800":"rgb(103, 136, 0)","chartreuse-900":"rgb(87, 116, 0)","chartreuse-1000":"rgb(72, 96, 0)","chartreuse-1100":"rgb(58, 77, 0)","chartreuse-1200":"rgb(44, 59, 0)","chartreuse-1300":"rgb(33, 44, 0)","cyan-100":"rgb(197, 248, 255)","cyan-200":"rgb(164, 240, 255)","cyan-300":"rgb(136, 231, 250)","cyan-400":"rgb(96, 216, 243)","cyan-500":"rgb(51, 197, 232)","cyan-600":"rgb(18, 176, 218)","cyan-700":"rgb(1, 156, 200)","cyan-800":"rgb(0, 134, 180)","cyan-900":"rgb(0, 113, 159)","cyan-1000":"rgb(0, 93, 137)","cyan-1100":"rgb(0, 74, 115)","cyan-1200":"rgb(0, 57, 93)","cyan-1300":"rgb(0, 42, 70)","fuchsia-100":"rgb(255, 233, 252)","fuchsia-200":"rgb(255, 218, 250)","fuchsia-300":"rgb(254, 199, 248)","fuchsia-400":"rgb(251, 174, 246)","fuchsia-500":"rgb(245, 146, 243)","fuchsia-600":"rgb(237, 116, 237)","fuchsia-700":"rgb(224, 85, 226)","fuchsia-800":"rgb(205, 58, 206)","fuchsia-900":"rgb(182, 34, 183)","fuchsia-1000":"rgb(157, 3, 158)","fuchsia-1100":"rgb(128, 0, 129)","fuchsia-1200":"rgb(100, 6, 100)","fuchsia-1300":"rgb(71, 14, 70)","indigo-100":"rgb(237, 238, 255)","indigo-200":"rgb(224, 226, 255)","indigo-300":"rgb(211, 213, 255)","indigo-400":"rgb(193, 196, 255)","indigo-500":"rgb(172, 175, 255)","indigo-600":"rgb(149, 153, 255)","indigo-700":"rgb(126, 132, 252)","indigo-800":"rgb(104, 109, 244)","indigo-900":"rgb(82, 88, 228)","indigo-1000":"rgb(64, 70, 202)","indigo-1100":"rgb(50, 54, 168)","indigo-1200":"rgb(38, 41, 134)","indigo-1300":"rgb(27, 30, 100)","magenta-100":"rgb(255, 234, 241)","magenta-200":"rgb(255, 220, 232)","magenta-300":"rgb(255, 202, 221)","magenta-400":"rgb(255, 178, 206)","magenta-500":"rgb(255, 149, 189)","magenta-600":"rgb(250, 119, 170)","magenta-700":"rgb(239, 90, 152)","magenta-800":"rgb(222, 61, 130)","magenta-900":"rgb(200, 34, 105)","magenta-1000":"rgb(173, 9, 85)","magenta-1100":"rgb(142, 0, 69)","magenta-1200":"rgb(112, 0, 55)","magenta-1300":"rgb(84, 3, 42)","purple-100":"rgb(246, 235, 255)","purple-200":"rgb(238, 221, 255)","purple-300":"rgb(230, 208, 255)","purple-400":"rgb(219, 187, 254)","purple-500":"rgb(204, 164, 253)","purple-600":"rgb(189, 139, 252)","purple-700":"rgb(174, 114, 249)","purple-800":"rgb(157, 87, 244)","purple-900":"rgb(137, 61, 231)","purple-1000":"rgb(115, 38, 211)","purple-1100":"rgb(93, 19, 183)","purple-1200":"rgb(71, 12, 148)","purple-1300":"rgb(51, 16, 106)","seafoam-100":"rgb(206, 247, 243)","seafoam-200":"rgb(170, 241, 234)","seafoam-300":"rgb(140, 233, 226)","seafoam-400":"rgb(101, 218, 210)","seafoam-500":"rgb(63, 201, 193)","seafoam-600":"rgb(15, 181, 174)","seafoam-700":"rgb(0, 161, 154)","seafoam-800":"rgb(0, 140, 135)","seafoam-900":"rgb(0, 119, 114)","seafoam-1000":"rgb(0, 99, 95)","seafoam-1100":"rgb(12, 79, 76)","seafoam-1200":"rgb(18, 60, 58)","seafoam-1300":"rgb(18, 44, 43)","yellow-100":"rgb(251, 241, 152)","yellow-200":"rgb(248, 231, 80)","yellow-300":"rgb(248, 217, 4)","yellow-400":"rgb(232, 198, 0)","yellow-500":"rgb(215, 179, 0)","yellow-600":"rgb(196, 159, 0)","yellow-700":"rgb(176, 140, 0)","yellow-800":"rgb(155, 120, 0)","yellow-900":"rgb(133, 102, 0)","yellow-1000":"rgb(112, 83, 0)","yellow-1100":"rgb(91, 67, 0)","yellow-1200":"rgb(72, 51, 0)","yellow-1300":"rgb(54, 37, 0)","static-white":"rgba(255, 255, 255)","static-black":"rgba(0, 0, 0)","static-blue":"rgb(20, 115, 230)","static-gray-50":"rgba(254, 254, 254)","static-gray-75":"rgba(254, 254, 254)","static-gray-100":"rgba(254, 254, 254)","static-gray-200":"rgba(235, 235, 235)","static-gray-300":"rgba(217, 217, 217)","static-gray-400":"rgba(179, 179, 179)","static-gray-500":"rgba(146, 146, 146)","static-gray-600":"rgba(110, 110, 110)","static-gray-700":"rgba(71, 71, 71)","static-gray-800":"rgba(34, 34, 34)","static-gray-900":"rgba(0, 0, 0)","static-red-100":"rgba(255, 242, 240)","static-red-200":"rgba(255, 230, 225)","static-red-300":"rgba(255, 214, 206)","static-red-400":"rgba(255, 191, 178)","static-red-500":"rgba(255, 164, 147)","static-red-600":"rgba(255, 133, 111)","static-red-700":"rgba(250, 100, 78)","static-red-800":"rgba(237, 64, 48)","static-red-900":"rgba(217, 28, 21)","static-red-1000":"rgba(187, 2, 2)","static-red-1100":"rgba(154, 0, 0)","static-red-1200":"rgba(124, 0, 0)","static-red-1300":"rgba(97, 0, 0)","static-red-1400":"rgba(77, 0, 0)","static-orange-100":"rgba(255, 245, 227)","static-orange-200":"rgba(255, 233, 197)","static-orange-300":"rgba(254, 218, 162)","static-orange-400":"rgba(255, 195, 114)","static-orange-500":"rgba(255, 168, 68)","static-orange-600":"rgba(250, 139, 26)","static-orange-700":"rgba(233, 117, 0)","static-orange-800":"rgba(209, 97, 0)","static-orange-900":"rgba(182, 80, 0)","static-orange-1000":"rgba(155, 64, 0)","static-orange-1100":"rgba(128, 50, 0)","static-orange-1200":"rgba(103, 38, 0)","static-orange-1300":"rgba(80, 28, 0)","static-orange-1400":"rgba(62, 21, 1)","static-yellow-100":"rgba(253, 247, 196)","static-yellow-200":"rgba(250, 237, 123)","static-yellow-300":"rgba(250, 224, 23)","static-yellow-400":"rgba(238, 205, 0)","static-yellow-500":"rgba(221, 185, 0)","static-yellow-600":"rgba(201, 164, 0)","static-yellow-700":"rgba(181, 144, 0)","static-yellow-800":"rgba(160, 125, 0)","static-yellow-900":"rgba(138, 106, 0)","static-yellow-1000":"rgba(116, 87, 0)","static-yellow-1100":"rgba(96, 70, 0)","static-yellow-1200":"rgba(77, 54, 0)","static-yellow-1300":"rgba(60, 41, 0)","static-yellow-1400":"rgba(47, 30, 0)","static-chartreuse-100":"rgba(235, 255, 170)","static-chartreuse-200":"rgba(211, 249, 88)","static-chartreuse-300":"rgba(195, 239, 54)","static-chartreuse-400":"rgba(176, 222, 27)","static-chartreuse-500":"rgba(157, 203, 13)","static-chartreuse-600":"rgba(139, 182, 4)","static-chartreuse-700":"rgba(122, 162, 0)","static-chartreuse-800":"rgba(106, 141, 0)","static-chartreuse-900":"rgba(90, 120, 0)","static-chartreuse-1000":"rgba(75, 100, 0)","static-chartreuse-1100":"rgba(61, 81, 0)","static-chartreuse-1200":"rgba(48, 64, 0)","static-chartreuse-1300":"rgba(36, 49, 0)","static-chartreuse-1400":"rgba(28, 37, 0)","static-celery-100":"rgba(226, 253, 218)","static-celery-200":"rgba(192, 250, 176)","static-celery-300":"rgba(164, 243, 146)","static-celery-400":"rgba(126, 229, 114)","static-celery-500":"rgba(87, 212, 86)","static-celery-600":"rgba(48, 193, 61)","static-celery-700":"rgba(15, 172, 38)","static-celery-800":"rgba(0, 150, 20)","static-celery-900":"rgba(0, 128, 15)","static-celery-1000":"rgba(0, 107, 15)","static-celery-1100":"rgba(0, 87, 13)","static-celery-1200":"rgba(0, 69, 11)","static-celery-1300":"rgba(0, 53, 8)","static-celery-1400":"rgba(0, 40, 6)","static-green-100":"rgba(228, 251, 236)","static-green-200":"rgba(195, 247, 218)","static-green-300":"rgba(156, 240, 198)","static-green-400":"rgba(113, 227, 174)","static-green-500":"rgba(80, 209, 153)","static-green-600":"rgba(54, 189, 133)","static-green-700":"rgba(29, 169, 115)","static-green-800":"rgba(0, 148, 97)","static-green-900":"rgba(0, 126, 80)","static-green-1000":"rgba(0, 105, 65)","static-green-1100":"rgba(0, 86, 53)","static-green-1200":"rgba(4, 67, 41)","static-green-1300":"rgba(9, 51, 32)","static-green-1400":"rgba(10, 38, 24)","static-seafoam-100":"rgba(228, 250, 247)","static-seafoam-200":"rgba(191, 245, 239)","static-seafoam-300":"rgba(157, 238, 231)","static-seafoam-400":"rgba(114, 223, 216)","static-seafoam-500":"rgba(75, 206, 199)","static-seafoam-600":"rgba(32, 187, 180)","static-seafoam-700":"rgba(0, 166, 160)","static-seafoam-800":"rgba(0, 145, 139)","static-seafoam-900":"rgba(0, 124, 118)","static-seafoam-1000":"rgba(0, 103, 99)","static-seafoam-1100":"rgba(10, 83, 80)","static-seafoam-1200":"rgba(18, 65, 63)","static-seafoam-1300":"rgba(18, 49, 48)","static-seafoam-1400":"rgba(16, 37, 36)","static-cyan-100":"rgba(221, 251, 255)","static-cyan-200":"rgba(183, 245, 255)","static-cyan-300":"rgba(150, 236, 252)","static-cyan-400":"rgba(107, 221, 245)","static-cyan-500":"rgba(65, 203, 236)","static-cyan-600":"rgba(26, 182, 223)","static-cyan-700":"rgba(4, 161, 205)","static-cyan-800":"rgba(0, 139, 185)","static-cyan-900":"rgba(0, 118, 164)","static-cyan-1000":"rgba(0, 97, 142)","static-cyan-1100":"rgba(0, 78, 120)","static-cyan-1200":"rgba(0, 61, 98)","static-cyan-1300":"rgba(0, 47, 77)","static-cyan-1400":"rgba(0, 36, 59)","static-blue-100":"rgba(237, 248, 255)","static-blue-200":"rgba(214, 238, 255)","static-blue-300":"rgba(193, 228, 255)","static-blue-400":"rgba(161, 212, 253)","static-blue-500":"rgba(130, 193, 251)","static-blue-600":"rgba(98, 173, 247)","static-blue-700":"rgba(66, 151, 244)","static-blue-800":"rgba(27, 127, 245)","static-blue-900":"rgba(4, 105, 227)","static-blue-1000":"rgba(0, 87, 190)","static-blue-1100":"rgba(0, 72, 153)","static-blue-1200":"rgba(0, 57, 120)","static-blue-1300":"rgba(0, 43, 92)","static-blue-1400":"rgba(0, 33, 71)","static-indigo-100":"rgba(245, 245, 254)","static-indigo-200":"rgba(232, 233, 255)","static-indigo-300":"rgba(219, 221, 255)","static-indigo-400":"rgba(200, 202, 255)","static-indigo-500":"rgba(178, 181, 255)","static-indigo-600":"rgba(155, 159, 255)","static-indigo-700":"rgba(132, 137, 253)","static-indigo-800":"rgba(109, 115, 246)","static-indigo-900":"rgba(87, 93, 232)","static-indigo-1000":"rgba(68, 74, 208)","static-indigo-1100":"rgba(53, 58, 176)","static-indigo-1200":"rgba(40, 45, 142)","static-indigo-1300":"rgba(30, 34, 110)","static-indigo-1400":"rgba(23, 26, 85)","static-pruple-100":"rgba(251, 243, 255)","static-pruple-200":"rgba(243, 230, 255)","static-pruple-300":"rgba(235, 216, 255)","static-pruple-400":"rgba(223, 194, 254)","static-pruple-500":"rgba(209, 171, 253)","static-pruple-600":"rgba(194, 146, 252)","static-pruple-700":"rgba(178, 121, 250)","static-pruple-800":"rgba(161, 93, 246)","static-pruple-900":"rgba(142, 67, 234)","static-pruple-1000":"rgba(120, 43, 216)","static-pruple-1100":"rgba(98, 23, 190)","static-pruple-1200":"rgba(77, 13, 157)","static-pruple-1300":"rgba(57, 15, 120)","static-pruple-1400":"rgba(42, 16, 88)","static-fuchsia-100":"rgba(255, 242, 253)","static-fuchsia-200":"rgba(255, 227, 251)","static-fuchsia-300":"rgba(255, 208, 249)","static-fuchsia-400":"rgba(252, 184, 247)","static-fuchsia-500":"rgba(247, 155, 244)","static-fuchsia-600":"rgba(240, 123, 239)","static-fuchsia-700":"rgba(228, 93, 230)","static-fuchsia-800":"rgba(211, 63, 212)","static-fuchsia-900":"rgba(188, 39, 187)","static-fuchsia-1000":"rgba(163, 10, 163)","static-fuchsia-1100":"rgba(135, 0, 136)","static-fuchsia-1200":"rgba(107, 3, 107)","static-fuchsia-1300":"rgba(80, 13, 79)","static-fuchsia-1400":"rgba(60, 14, 58)","static-magenta-100":"rgba(255, 243, 247)","static-magenta-200":"rgba(255, 229, 238)","static-magenta-300":"rgba(255, 211, 227)","static-magenta-400":"rgba(255, 188, 212)","static-magenta-500":"rgba(255, 159, 194)","static-magenta-600":"rgba(253, 127, 175)","static-magenta-700":"rgba(242, 98, 157)","static-magenta-800":"rgba(226, 68, 135)","static-magenta-900":"rgba(205, 40, 111)","static-magenta-1000":"rgba(179, 15, 89)","static-magenta-1100":"rgba(149, 0, 72)","static-magenta-1200":"rgba(119, 0, 58)","static-magenta-1300":"rgba(93, 1, 46)","static-magenta-1400":"rgba(71, 5, 35)","informative":"rgb(20, 122, 243)","negative":"rgb(234, 56, 41)","notice":"rgb(228, 111, 0)","positive":"rgb(21, 164, 110)","divergent-orange-yellow-seafoam-100":"rgb(88, 0, 0)","divergent-orange-yellow-seafoam-200":"rgb(121, 38, 11)","divergent-orange-yellow-seafoam-300":"rgb(156, 69, 17)","divergent-orange-yellow-seafoam-400":"rgb(189, 101, 26)","divergent-orange-yellow-seafoam-500":"rgb(221, 134, 41)","divergent-orange-yellow-seafoam-600":"rgb(245, 173, 82)","divergent-orange-yellow-seafoam-700":"rgb(254, 214, 147)","divergent-orange-yellow-seafoam-800":"rgb(255, 255, 224)","divergent-orange-yellow-seafoam-900":"rgb(187, 228, 209)","divergent-orange-yellow-seafoam-1000":"rgb(118, 199, 190)","divergent-orange-yellow-seafoam-1100":"rgb(62, 168, 166)","divergent-orange-yellow-seafoam-1200":"rgb(32, 130, 136)","divergent-orange-yellow-seafoam-1300":"rgb(7, 103, 105)","divergent-orange-yellow-seafoam-1400":"rgb(0, 73, 75)","divergent-orange-yellow-seafoam-1500":"rgb(0, 44, 45)","divergent-red-yellow-blue-100":"rgb(73, 2, 30)","divergent-red-yellow-blue-200":"rgb(116, 20, 51)","divergent-red-yellow-blue-300":"rgb(163, 41, 72)","divergent-red-yellow-blue-400":"rgb(196, 82, 87)","divergent-red-yellow-blue-500":"rgb(226, 122, 101)","divergent-red-yellow-blue-600":"rgb(239, 168, 133)","divergent-red-yellow-blue-700":"rgb(249, 212, 175)","divergent-red-yellow-blue-800":"rgb(255, 255, 225)","divergent-red-yellow-blue-900":"rgb(189, 226, 208)","divergent-red-yellow-blue-1000":"rgb(139, 192, 196)","divergent-red-yellow-blue-1100":"rgb(90, 159, 184)","divergent-red-yellow-blue-1200":"rgb(60, 123, 166)","divergent-red-yellow-blue-1300":"rgb(32, 89, 148)","divergent-red-yellow-blue-1400":"rgb(24, 57, 112)","divergent-red-yellow-blue-1500":"rgb(17, 27, 76)","divergent-red-blue-100":"rgb(73, 2, 30)","divergent-red-blue-200":"rgb(114, 21, 50)","divergent-red-blue-300":"rgb(158, 43, 70)","divergent-red-blue-400":"rgb(202, 67, 92)","divergent-red-blue-500":"rgb(222, 111, 134)","divergent-red-blue-600":"rgb(236, 155, 176)","divergent-red-blue-700":"rgb(247, 196, 217)","divergent-red-blue-800":"rgb(250, 240, 255)","divergent-red-blue-900":"rgb(199, 209, 241)","divergent-red-blue-1000":"rgb(147, 179, 221)","divergent-red-blue-1100":"rgb(96, 149, 201)","divergent-red-blue-1200":"rgb(51, 118, 177)","divergent-red-blue-1300":"rgb(41, 83, 143)","divergent-red-blue-1400":"rgb(24, 56, 111)","divergent-red-blue-1500":"rgb(12, 27, 75)","sequential-viridis-100":"rgb(253, 231, 37)","sequential-viridis-200":"rgb(210, 226, 27)","sequential-viridis-300":"rgb(165, 219, 54)","sequential-viridis-400":"rgb(122, 209, 81)","sequential-viridis-500":"rgb(84, 197, 104)","sequential-viridis-600":"rgb(53, 183, 121)","sequential-viridis-700":"rgb(34, 168, 132)","sequential-viridis-800":"rgb(31, 152, 139)","sequential-viridis-900":"rgb(35, 136, 142)","sequential-viridis-1000":"rgb(42, 120, 142)","sequential-viridis-1100":"rgb(49, 104, 142)","sequential-viridis-1200":"rgb(57, 86, 140)","sequential-viridis-1300":"rgb(65, 68, 135)","sequential-viridis-1400":"rgb(71, 47, 125)","sequential-viridis-1500":"rgb(72, 26, 108)","sequential-viridis-1600":"rgb(68, 1, 84)","sequential-magma-100":"rgb(252, 253, 191)","sequential-magma-200":"rgb(253, 222, 160)","sequential-magma-300":"rgb(254, 191, 132)","sequential-magma-400":"rgb(254, 159, 109)","sequential-magma-500":"rgb(250, 127, 94)","sequential-magma-600":"rgb(241, 96, 93)","sequential-magma-700":"rgb(222, 73, 104)","sequential-magma-800":"rgb(196, 60, 117)","sequential-magma-900":"rgb(168, 50, 125)","sequential-magma-1000":"rgb(140, 41, 129)","sequential-magma-1100":"rgb(114, 31, 129)","sequential-magma-1200":"rgb(87, 21, 126)","sequential-magma-1300":"rgb(59, 15, 112)","sequential-magma-1400":"rgb(32, 17, 75)","sequential-magma-1500":"rgb(11, 9, 36)","sequential-magma-1600":"rgb(0, 0, 4)","sequential-rose-100":"rgb(255, 244, 222)","sequential-rose-200":"rgb(255, 221, 216)","sequential-rose-300":"rgb(255, 198, 210)","sequential-rose-400":"rgb(252, 175, 203)","sequential-rose-500":"rgb(248, 152, 196)","sequential-rose-600":"rgb(243, 128, 188)","sequential-rose-700":"rgb(137, 103, 180)","sequential-rose-800":"rgb(230, 75, 172)","sequential-rose-900":"rgb(208, 62, 160)","sequential-rose-1000":"rgb(185, 52, 149)","sequential-rose-1100":"rgb(161, 42, 139)","sequential-rose-1200":"rgb(137, 34, 130)","sequential-rose-1300":"rgb(112, 28, 122)","sequential-rose-1400":"rgb(85, 22, 114)","sequential-rose-1500":"rgb(55, 18, 108)","sequential-rose-1600":"rgb(0, 16, 102)","sequential-cerulean-100":"rgb(234, 255, 241)","sequential-cerulean-200":"rgb(201, 241, 228)","sequential-cerulean-300":"rgb(167, 227, 215)","sequential-cerulean-400":"rgb(113, 213, 202)","sequential-cerulean-500":"rgb(108, 197, 192)","sequential-cerulean-600":"rgb(88, 180, 185)","sequential-cerulean-700":"rgb(68, 162, 177)","sequential-cerulean-800":"rgb(48, 145, 170)","sequential-cerulean-900":"rgb(40, 128, 160)","sequential-cerulean-1000":"rgb(36, 110, 150)","sequential-cerulean-1100":"rgb(33, 93, 139)","sequential-cerulean-1200":"rgb(29, 76, 129)","sequential-cerulean-1300":"rgb(28, 59, 119)","sequential-cerulean-1400":"rgb(27, 41, 109)","sequential-cerulean-1500":"rgb(26, 22, 98)","sequential-cerulean-1600":"rgb(24, 0, 85)","sequential-forest-100":"rgb(255, 255, 224)","sequential-forest-200":"rgb(226, 245, 189)","sequential-forest-300":"rgb(197, 234, 153)","sequential-forest-400":"rgb(166, 223, 115)","sequential-forest-500":"rgb(143, 209, 108)","sequential-forest-600":"rgb(121, 195, 101)","sequential-forest-700":"rgb(98, 181, 94)","sequential-forest-800":"rgb(76, 166, 88)","sequential-forest-900":"rgb(59, 151, 82)","sequential-forest-1000":"rgb(49, 136, 79)","sequential-forest-1100":"rgb(40, 121, 76)","sequential-forest-1200":"rgb(30, 106, 72)","sequential-forest-1300":"rgb(21, 91, 69)","sequential-forest-1400":"rgb(14, 77, 65)","sequential-forest-1500":"rgb(7, 63, 62)","sequential-forest-1600":"rgb(0, 49, 58)","categorical-100":"rgb(15, 181, 174)","categorical-200":"rgb(64, 70, 202)","categorical-300":"rgb(246, 133, 17)","categorical-400":"rgb(222, 61, 130)","categorical-500":"rgb(126, 132, 250)","categorical-600":"rgb(114, 224, 106)","categorical-700":"rgb(20, 122, 243)","categorical-800":"rgb(115, 38, 211)","categorical-900":"rgb(232, 198, 0)","categorical-1000":"rgb(203, 93, 0)","categorical-1100":"rgb(0, 143, 93)","categorical-1200":"rgb(188, 233, 49)","categorical-1300":"rgb(90, 169, 250)","categorical-1400":"rgb(192, 56, 204)","categorical-1500":"rgb(245, 107, 183)","categorical-1600":"rgb(255, 226, 46)"},"dark":{"gray-50":"rgb(0, 0, 0)","gray-75":"rgb(14, 14, 14)","gray-100":"rgb(29, 29, 29)","gray-200":"rgb(48, 48, 48)","gray-300":"rgb(75, 75, 75)","gray-400":"rgb(106, 106, 106)","gray-500":"rgb(141, 141, 141)","gray-600":"rgb(176, 176, 176)","gray-700":"rgb(208, 208, 208)","gray-800":"rgb(235, 235, 235)","gray-900":"rgb(255, 255, 255)","blue-100":"rgb(0, 38, 81)","blue-200":"rgb(0, 50, 106)","blue-300":"rgb(0, 64, 135)","blue-400":"rgb(0, 78, 166)","blue-500":"rgb(0, 92, 200)","blue-600":"rgb(6, 108, 231)","blue-700":"rgb(29, 128, 245)","blue-800":"rgb(64, 150, 243)","blue-900":"rgb(94, 170, 247)","blue-1000":"rgb(124, 189, 250)","blue-1100":"rgb(152, 206, 253)","blue-1200":"rgb(179, 222, 254)","blue-1300":"rgb(206, 234, 255)","green-100":"rgb(10, 44, 28)","green-200":"rgb(7, 59, 36)","green-300":"rgb(0, 76, 46)","green-400":"rgb(0, 93, 57)","green-500":"rgb(0, 111, 69)","green-600":"rgb(0, 130, 82)","green-700":"rgb(0, 149, 98)","green-800":"rgb(28, 168, 114)","green-900":"rgb(52, 187, 132)","green-1000":"rgb(75, 205, 149)","green-1100":"rgb(103, 222, 168)","green-1200":"rgb(137, 236, 188)","green-1300":"rgb(177, 244, 209)","orange-100":"rgb(72, 24, 1)","orange-200":"rgb(92, 32, 0)","orange-300":"rgb(115, 43, 0)","orange-400":"rgb(138, 55, 0)","orange-500":"rgb(162, 68, 0)","orange-600":"rgb(186, 82, 0)","orange-700":"rgb(210, 98, 0)","orange-800":"rgb(232, 116, 0)","orange-900":"rgb(249, 137, 23)","orange-1000":"rgb(255, 162, 59)","orange-1100":"rgb(255, 188, 102)","orange-1200":"rgb(253, 210, 145)","orange-1300":"rgb(255, 226, 181)","red-100":"rgb(87, 0, 0)","red-200":"rgb(110, 0, 0)","red-300":"rgb(138, 0, 0)","red-400":"rgb(167, 0, 0)","red-500":"rgb(196, 7, 6)","red-600":"rgb(221, 33, 24)","red-700":"rgb(238, 67, 49)","red-800":"rgb(249, 99, 76)","red-900":"rgb(255, 129, 107)","red-1000":"rgb(255, 158, 140)","red-1100":"rgb(255, 183, 169)","red-1200":"rgb(255, 205, 195)","red-1300":"rgb(255, 223, 217)","celery-100":"rgb(0, 47, 7)","celery-200":"rgb(0, 61, 9)","celery-300":"rgb(0, 77, 12)","celery-400":"rgb(0, 95, 15)","celery-500":"rgb(0, 113, 15)","celery-600":"rgb(0, 132, 15)","celery-700":"rgb(0, 151, 20)","celery-800":"rgb(13, 171, 37)","celery-900":"rgb(45, 191, 58)","celery-1000":"rgb(80, 208, 82)","celery-1100":"rgb(115, 224, 107)","celery-1200":"rgb(147, 237, 131)","celery-1300":"rgb(180, 247, 162)","chartreuse-100":"rgb(32, 43, 0)","chartreuse-200":"rgb(42, 56, 0)","chartreuse-300":"rgb(54, 72, 0)","chartreuse-400":"rgb(66, 88, 0)","chartreuse-500":"rgb(79, 105, 0)","chartreuse-600":"rgb(93, 123, 0)","chartreuse-700":"rgb(107, 142, 0)","chartreuse-800":"rgb(122, 161, 0)","chartreuse-900":"rgb(138, 180, 3)","chartreuse-1000":"rgb(154, 198, 11)","chartreuse-1100":"rgb(170, 216, 22)","chartreuse-1200":"rgb(187, 232, 41)","chartreuse-1300":"rgb(205, 246, 72)","cyan-100":"rgb(0, 41, 68)","cyan-200":"rgb(0, 54, 88)","cyan-300":"rgb(0, 69, 108)","cyan-400":"rgb(0, 86, 128)","cyan-500":"rgb(0, 103, 147)","cyan-600":"rgb(0, 121, 167)","cyan-700":"rgb(0, 140, 186)","cyan-800":"rgb(4, 160, 205)","cyan-900":"rgb(23, 180, 221)","cyan-1000":"rgb(57, 199, 234)","cyan-1100":"rgb(96, 216, 243)","cyan-1200":"rgb(134, 230, 250)","cyan-1300":"rgb(170, 242, 255)","fuchsia-100":"rgb(70, 14, 68)","fuchsia-200":"rgb(93, 9, 92)","fuchsia-300":"rgb(120, 0, 120)","fuchsia-400":"rgb(146, 0, 147)","fuchsia-500":"rgb(169, 19, 170)","fuchsia-600":"rgb(191, 43, 191)","fuchsia-700":"rgb(211, 65, 213)","fuchsia-800":"rgb(228, 91, 229)","fuchsia-900":"rgb(239, 120, 238)","fuchsia-1000":"rgb(246, 149, 243)","fuchsia-1100":"rgb(251, 175, 246)","fuchsia-1200":"rgb(254, 199, 248)","fuchsia-1300":"rgb(255, 220, 250)","indigo-100":"rgb(26, 29, 97)","indigo-200":"rgb(35, 39, 125)","indigo-300":"rgb(46, 50, 158)","indigo-400":"rgb(58, 63, 189)","indigo-500":"rgb(73, 78, 216)","indigo-600":"rgb(90, 96, 235)","indigo-700":"rgb(110, 115, 246)","indigo-800":"rgb(132, 136, 253)","indigo-900":"rgb(153, 157, 255)","indigo-1000":"rgb(174, 177, 255)","indigo-1100":"rgb(194, 196, 255)","indigo-1200":"rgb(212, 213, 255)","indigo-1300":"rgb(227, 228, 255)","magenta-100":"rgb(83, 3, 41)","magenta-200":"rgb(106, 0, 52)","magenta-300":"rgb(133, 0, 65)","magenta-400":"rgb(161, 0, 78)","magenta-500":"rgb(186, 22, 93)","magenta-600":"rgb(209, 43, 114)","magenta-700":"rgb(227, 69, 137)","magenta-800":"rgb(241, 97, 156)","magenta-900":"rgb(252, 124, 173)","magenta-1000":"rgb(255, 152, 191)","magenta-1100":"rgb(255, 179, 207)","magenta-1200":"rgb(255, 202, 221)","magenta-1300":"rgb(255, 221, 233)","purple-100":"rgb(50, 16, 104)","purple-200":"rgb(67, 13, 140)","purple-300":"rgb(86, 16, 173)","purple-400":"rgb(106, 29, 200)","purple-500":"rgb(126, 49, 222)","purple-600":"rgb(145, 70, 236)","purple-700":"rgb(162, 94, 246)","purple-800":"rgb(178, 119, 250)","purple-900":"rgb(192, 143, 252)","purple-1000":"rgb(206, 166, 253)","purple-1100":"rgb(219, 188, 254)","purple-1200":"rgb(230, 207, 255)","purple-1300":"rgb(240, 224, 255)","seafoam-100":"rgb(18, 43, 42)","seafoam-200":"rgb(19, 57, 55)","seafoam-300":"rgb(16, 73, 70)","seafoam-400":"rgb(3, 91, 88)","seafoam-500":"rgb(0, 108, 104)","seafoam-600":"rgb(0, 127, 121)","seafoam-700":"rgb(0, 146, 140)","seafoam-800":"rgb(0, 165, 159)","seafoam-900":"rgb(26, 185, 178)","seafoam-1000":"rgb(66, 202, 195)","seafoam-1100":"rgb(102, 218, 211)","seafoam-1200":"rgb(139, 232, 225)","seafoam-1300":"rgb(179, 242, 237)","yellow-100":"rgb(53, 36, 0)","yellow-200":"rgb(68, 47, 0)","yellow-300":"rgb(86, 62, 0)","yellow-400":"rgb(103, 77, 0)","yellow-500":"rgb(122, 92, 0)","yellow-600":"rgb(141, 108, 0)","yellow-700":"rgb(161, 126, 0)","yellow-800":"rgb(180, 144, 0)","yellow-900":"rgb(199, 162, 0)","yellow-1000":"rgb(216, 181, 0)","yellow-1100":"rgb(233, 199, 0)","yellow-1200":"rgb(247, 216, 4)","yellow-1300":"rgb(249, 233, 97)","static-white":"rgba(255, 255, 255)","static-black":"rgba(0, 0, 0)","static-blue":"rgb(20, 115, 230)","static-gray-50":"rgba(254, 254, 254)","static-gray-75":"rgba(254, 254, 254)","static-gray-100":"rgba(254, 254, 254)","static-gray-200":"rgba(235, 235, 235)","static-gray-300":"rgba(217, 217, 217)","static-gray-400":"rgba(179, 179, 179)","static-gray-500":"rgba(146, 146, 146)","static-gray-600":"rgba(110, 110, 110)","static-gray-700":"rgba(71, 71, 71)","static-gray-800":"rgba(34, 34, 34)","static-gray-900":"rgba(0, 0, 0)","static-red-100":"rgba(255, 242, 240)","static-red-200":"rgba(255, 230, 225)","static-red-300":"rgba(255, 214, 206)","static-red-400":"rgba(255, 191, 178)","static-red-500":"rgba(255, 164, 147)","static-red-600":"rgba(255, 133, 111)","static-red-700":"rgba(250, 100, 78)","static-red-800":"rgba(237, 64, 48)","static-red-900":"rgba(217, 28, 21)","static-red-1000":"rgba(187, 2, 2)","static-red-1100":"rgba(154, 0, 0)","static-red-1200":"rgba(124, 0, 0)","static-red-1300":"rgba(97, 0, 0)","static-red-1400":"rgba(77, 0, 0)","static-orange-100":"rgba(255, 245, 227)","static-orange-200":"rgba(255, 233, 197)","static-orange-300":"rgba(254, 218, 162)","static-orange-400":"rgba(255, 195, 114)","static-orange-500":"rgba(255, 168, 68)","static-orange-600":"rgba(250, 139, 26)","static-orange-700":"rgba(233, 117, 0)","static-orange-800":"rgba(209, 97, 0)","static-orange-900":"rgba(182, 80, 0)","static-orange-1000":"rgba(155, 64, 0)","static-orange-1100":"rgba(128, 50, 0)","static-orange-1200":"rgba(103, 38, 0)","static-orange-1300":"rgba(80, 28, 0)","static-orange-1400":"rgba(62, 21, 1)","static-yellow-100":"rgba(253, 247, 196)","static-yellow-200":"rgba(250, 237, 123)","static-yellow-300":"rgba(250, 224, 23)","static-yellow-400":"rgba(238, 205, 0)","static-yellow-500":"rgba(221, 185, 0)","static-yellow-600":"rgba(201, 164, 0)","static-yellow-700":"rgba(181, 144, 0)","static-yellow-800":"rgba(160, 125, 0)","static-yellow-900":"rgba(138, 106, 0)","static-yellow-1000":"rgba(116, 87, 0)","static-yellow-1100":"rgba(96, 70, 0)","static-yellow-1200":"rgba(77, 54, 0)","static-yellow-1300":"rgba(60, 41, 0)","static-yellow-1400":"rgba(47, 30, 0)","static-chartreuse-100":"rgba(235, 255, 170)","static-chartreuse-200":"rgba(211, 249, 88)","static-chartreuse-300":"rgba(195, 239, 54)","static-chartreuse-400":"rgba(176, 222, 27)","static-chartreuse-500":"rgba(157, 203, 13)","static-chartreuse-600":"rgba(139, 182, 4)","static-chartreuse-700":"rgba(122, 162, 0)","static-chartreuse-800":"rgba(106, 141, 0)","static-chartreuse-900":"rgba(90, 120, 0)","static-chartreuse-1000":"rgba(75, 100, 0)","static-chartreuse-1100":"rgba(61, 81, 0)","static-chartreuse-1200":"rgba(48, 64, 0)","static-chartreuse-1300":"rgba(36, 49, 0)","static-chartreuse-1400":"rgba(28, 37, 0)","static-celery-100":"rgba(226, 253, 218)","static-celery-200":"rgba(192, 250, 176)","static-celery-300":"rgba(164, 243, 146)","static-celery-400":"rgba(126, 229, 114)","static-celery-500":"rgba(87, 212, 86)","static-celery-600":"rgba(48, 193, 61)","static-celery-700":"rgba(15, 172, 38)","static-celery-800":"rgba(0, 150, 20)","static-celery-900":"rgba(0, 128, 15)","static-celery-1000":"rgba(0, 107, 15)","static-celery-1100":"rgba(0, 87, 13)","static-celery-1200":"rgba(0, 69, 11)","static-celery-1300":"rgba(0, 53, 8)","static-celery-1400":"rgba(0, 40, 6)","static-green-100":"rgba(228, 251, 236)","static-green-200":"rgba(195, 247, 218)","static-green-300":"rgba(156, 240, 198)","static-green-400":"rgba(113, 227, 174)","static-green-500":"rgba(80, 209, 153)","static-green-600":"rgba(54, 189, 133)","static-green-700":"rgba(29, 169, 115)","static-green-800":"rgba(0, 148, 97)","static-green-900":"rgba(0, 126, 80)","static-green-1000":"rgba(0, 105, 65)","static-green-1100":"rgba(0, 86, 53)","static-green-1200":"rgba(4, 67, 41)","static-green-1300":"rgba(9, 51, 32)","static-green-1400":"rgba(10, 38, 24)","static-seafoam-100":"rgba(228, 250, 247)","static-seafoam-200":"rgba(191, 245, 239)","static-seafoam-300":"rgba(157, 238, 231)","static-seafoam-400":"rgba(114, 223, 216)","static-seafoam-500":"rgba(75, 206, 199)","static-seafoam-600":"rgba(32, 187, 180)","static-seafoam-700":"rgba(0, 166, 160)","static-seafoam-800":"rgba(0, 145, 139)","static-seafoam-900":"rgba(0, 124, 118)","static-seafoam-1000":"rgba(0, 103, 99)","static-seafoam-1100":"rgba(10, 83, 80)","static-seafoam-1200":"rgba(18, 65, 63)","static-seafoam-1300":"rgba(18, 49, 48)","static-seafoam-1400":"rgba(16, 37, 36)","static-cyan-100":"rgba(221, 251, 255)","static-cyan-200":"rgba(183, 245, 255)","static-cyan-300":"rgba(150, 236, 252)","static-cyan-400":"rgba(107, 221, 245)","static-cyan-500":"rgba(65, 203, 236)","static-cyan-600":"rgba(26, 182, 223)","static-cyan-700":"rgba(4, 161, 205)","static-cyan-800":"rgba(0, 139, 185)","static-cyan-900":"rgba(0, 118, 164)","static-cyan-1000":"rgba(0, 97, 142)","static-cyan-1100":"rgba(0, 78, 120)","static-cyan-1200":"rgba(0, 61, 98)","static-cyan-1300":"rgba(0, 47, 77)","static-cyan-1400":"rgba(0, 36, 59)","static-blue-100":"rgba(237, 248, 255)","static-blue-200":"rgba(214, 238, 255)","static-blue-300":"rgba(193, 228, 255)","static-blue-400":"rgba(161, 212, 253)","static-blue-500":"rgba(130, 193, 251)","static-blue-600":"rgba(98, 173, 247)","static-blue-700":"rgba(66, 151, 244)","static-blue-800":"rgba(27, 127, 245)","static-blue-900":"rgba(4, 105, 227)","static-blue-1000":"rgba(0, 87, 190)","static-blue-1100":"rgba(0, 72, 153)","static-blue-1200":"rgba(0, 57, 120)","static-blue-1300":"rgba(0, 43, 92)","static-blue-1400":"rgba(0, 33, 71)","static-indigo-100":"rgba(245, 245, 254)","static-indigo-200":"rgba(232, 233, 255)","static-indigo-300":"rgba(219, 221, 255)","static-indigo-400":"rgba(200, 202, 255)","static-indigo-500":"rgba(178, 181, 255)","static-indigo-600":"rgba(155, 159, 255)","static-indigo-700":"rgba(132, 137, 253)","static-indigo-800":"rgba(109, 115, 246)","static-indigo-900":"rgba(87, 93, 232)","static-indigo-1000":"rgba(68, 74, 208)","static-indigo-1100":"rgba(53, 58, 176)","static-indigo-1200":"rgba(40, 45, 142)","static-indigo-1300":"rgba(30, 34, 110)","static-indigo-1400":"rgba(23, 26, 85)","static-pruple-100":"rgba(251, 243, 255)","static-pruple-200":"rgba(243, 230, 255)","static-pruple-300":"rgba(235, 216, 255)","static-pruple-400":"rgba(223, 194, 254)","static-pruple-500":"rgba(209, 171, 253)","static-pruple-600":"rgba(194, 146, 252)","static-pruple-700":"rgba(178, 121, 250)","static-pruple-800":"rgba(161, 93, 246)","static-pruple-900":"rgba(142, 67, 234)","static-pruple-1000":"rgba(120, 43, 216)","static-pruple-1100":"rgba(98, 23, 190)","static-pruple-1200":"rgba(77, 13, 157)","static-pruple-1300":"rgba(57, 15, 120)","static-pruple-1400":"rgba(42, 16, 88)","static-fuchsia-100":"rgba(255, 242, 253)","static-fuchsia-200":"rgba(255, 227, 251)","static-fuchsia-300":"rgba(255, 208, 249)","static-fuchsia-400":"rgba(252, 184, 247)","static-fuchsia-500":"rgba(247, 155, 244)","static-fuchsia-600":"rgba(240, 123, 239)","static-fuchsia-700":"rgba(228, 93, 230)","static-fuchsia-800":"rgba(211, 63, 212)","static-fuchsia-900":"rgba(188, 39, 187)","static-fuchsia-1000":"rgba(163, 10, 163)","static-fuchsia-1100":"rgba(135, 0, 136)","static-fuchsia-1200":"rgba(107, 3, 107)","static-fuchsia-1300":"rgba(80, 13, 79)","static-fuchsia-1400":"rgba(60, 14, 58)","static-magenta-100":"rgba(255, 243, 247)","static-magenta-200":"rgba(255, 229, 238)","static-magenta-300":"rgba(255, 211, 227)","static-magenta-400":"rgba(255, 188, 212)","static-magenta-500":"rgba(255, 159, 194)","static-magenta-600":"rgba(253, 127, 175)","static-magenta-700":"rgba(242, 98, 157)","static-magenta-800":"rgba(226, 68, 135)","static-magenta-900":"rgba(205, 40, 111)","static-magenta-1000":"rgba(179, 15, 89)","static-magenta-1100":"rgba(149, 0, 72)","static-magenta-1200":"rgba(119, 0, 58)","static-magenta-1300":"rgba(93, 1, 46)","static-magenta-1400":"rgba(71, 5, 35)","informative":"rgb(114, 183, 249)","negative":"rgb(246, 88, 67)","notice":"rgb(254, 154, 46)","positive":"rgb(43, 180, 125)","divergent-orange-yellow-seafoam-100":"rgb(88, 0, 0)","divergent-orange-yellow-seafoam-200":"rgb(121, 38, 11)","divergent-orange-yellow-seafoam-300":"rgb(156, 69, 17)","divergent-orange-yellow-seafoam-400":"rgb(189, 101, 26)","divergent-orange-yellow-seafoam-500":"rgb(221, 134, 41)","divergent-orange-yellow-seafoam-600":"rgb(245, 173, 82)","divergent-orange-yellow-seafoam-700":"rgb(254, 214, 147)","divergent-orange-yellow-seafoam-800":"rgb(255, 255, 224)","divergent-orange-yellow-seafoam-900":"rgb(187, 228, 209)","divergent-orange-yellow-seafoam-1000":"rgb(118, 199, 190)","divergent-orange-yellow-seafoam-1100":"rgb(62, 168, 166)","divergent-orange-yellow-seafoam-1200":"rgb(32, 130, 136)","divergent-orange-yellow-seafoam-1300":"rgb(7, 103, 105)","divergent-orange-yellow-seafoam-1400":"rgb(0, 73, 75)","divergent-orange-yellow-seafoam-1500":"rgb(0, 44, 45)","divergent-red-yellow-blue-100":"rgb(73, 2, 30)","divergent-red-yellow-blue-200":"rgb(116, 20, 51)","divergent-red-yellow-blue-300":"rgb(163, 41, 72)","divergent-red-yellow-blue-400":"rgb(196, 82, 87)","divergent-red-yellow-blue-500":"rgb(226, 122, 101)","divergent-red-yellow-blue-600":"rgb(239, 168, 133)","divergent-red-yellow-blue-700":"rgb(249, 212, 175)","divergent-red-yellow-blue-800":"rgb(255, 255, 225)","divergent-red-yellow-blue-900":"rgb(189, 226, 208)","divergent-red-yellow-blue-1000":"rgb(139, 192, 196)","divergent-red-yellow-blue-1100":"rgb(90, 159, 184)","divergent-red-yellow-blue-1200":"rgb(60, 123, 166)","divergent-red-yellow-blue-1300":"rgb(32, 89, 148)","divergent-red-yellow-blue-1400":"rgb(24, 57, 112)","divergent-red-yellow-blue-1500":"rgb(17, 27, 76)","divergent-red-blue-100":"rgb(73, 2, 30)","divergent-red-blue-200":"rgb(114, 21, 50)","divergent-red-blue-300":"rgb(158, 43, 70)","divergent-red-blue-400":"rgb(202, 67, 92)","divergent-red-blue-500":"rgb(222, 111, 134)","divergent-red-blue-600":"rgb(236, 155, 176)","divergent-red-blue-700":"rgb(247, 196, 217)","divergent-red-blue-800":"rgb(250, 240, 255)","divergent-red-blue-900":"rgb(199, 209, 241)","divergent-red-blue-1000":"rgb(147, 179, 221)","divergent-red-blue-1100":"rgb(96, 149, 201)","divergent-red-blue-1200":"rgb(51, 118, 177)","divergent-red-blue-1300":"rgb(41, 83, 143)","divergent-red-blue-1400":"rgb(24, 56, 111)","divergent-red-blue-1500":"rgb(12, 27, 75)","sequential-viridis-100":"rgb(253, 231, 37)","sequential-viridis-200":"rgb(210, 226, 27)","sequential-viridis-300":"rgb(165, 219, 54)","sequential-viridis-400":"rgb(122, 209, 81)","sequential-viridis-500":"rgb(84, 197, 104)","sequential-viridis-600":"rgb(53, 183, 121)","sequential-viridis-700":"rgb(34, 168, 132)","sequential-viridis-800":"rgb(31, 152, 139)","sequential-viridis-900":"rgb(35, 136, 142)","sequential-viridis-1000":"rgb(42, 120, 142)","sequential-viridis-1100":"rgb(49, 104, 142)","sequential-viridis-1200":"rgb(57, 86, 140)","sequential-viridis-1300":"rgb(65, 68, 135)","sequential-viridis-1400":"rgb(71, 47, 125)","sequential-viridis-1500":"rgb(72, 26, 108)","sequential-viridis-1600":"rgb(68, 1, 84)","sequential-magma-100":"rgb(252, 253, 191)","sequential-magma-200":"rgb(253, 222, 160)","sequential-magma-300":"rgb(254, 191, 132)","sequential-magma-400":"rgb(254, 159, 109)","sequential-magma-500":"rgb(250, 127, 94)","sequential-magma-600":"rgb(241, 96, 93)","sequential-magma-700":"rgb(222, 73, 104)","sequential-magma-800":"rgb(196, 60, 117)","sequential-magma-900":"rgb(168, 50, 125)","sequential-magma-1000":"rgb(140, 41, 129)","sequential-magma-1100":"rgb(114, 31, 129)","sequential-magma-1200":"rgb(87, 21, 126)","sequential-magma-1300":"rgb(59, 15, 112)","sequential-magma-1400":"rgb(32, 17, 75)","sequential-magma-1500":"rgb(11, 9, 36)","sequential-magma-1600":"rgb(0, 0, 4)","sequential-rose-100":"rgb(255, 244, 222)","sequential-rose-200":"rgb(255, 221, 216)","sequential-rose-300":"rgb(255, 198, 210)","sequential-rose-400":"rgb(252, 175, 203)","sequential-rose-500":"rgb(248, 152, 196)","sequential-rose-600":"rgb(243, 128, 188)","sequential-rose-700":"rgb(137, 103, 180)","sequential-rose-800":"rgb(230, 75, 172)","sequential-rose-900":"rgb(208, 62, 160)","sequential-rose-1000":"rgb(185, 52, 149)","sequential-rose-1100":"rgb(161, 42, 139)","sequential-rose-1200":"rgb(137, 34, 130)","sequential-rose-1300":"rgb(112, 28, 122)","sequential-rose-1400":"rgb(85, 22, 114)","sequential-rose-1500":"rgb(55, 18, 108)","sequential-rose-1600":"rgb(0, 16, 102)","sequential-cerulean-100":"rgb(234, 255, 241)","sequential-cerulean-200":"rgb(201, 241, 228)","sequential-cerulean-300":"rgb(167, 227, 215)","sequential-cerulean-400":"rgb(113, 213, 202)","sequential-cerulean-500":"rgb(108, 197, 192)","sequential-cerulean-600":"rgb(88, 180, 185)","sequential-cerulean-700":"rgb(68, 162, 177)","sequential-cerulean-800":"rgb(48, 145, 170)","sequential-cerulean-900":"rgb(40, 128, 160)","sequential-cerulean-1000":"rgb(36, 110, 150)","sequential-cerulean-1100":"rgb(33, 93, 139)","sequential-cerulean-1200":"rgb(29, 76, 129)","sequential-cerulean-1300":"rgb(28, 59, 119)","sequential-cerulean-1400":"rgb(27, 41, 109)","sequential-cerulean-1500":"rgb(26, 22, 98)","sequential-cerulean-1600":"rgb(24, 0, 85)","sequential-forest-100":"rgb(255, 255, 224)","sequential-forest-200":"rgb(226, 245, 189)","sequential-forest-300":"rgb(197, 234, 153)","sequential-forest-400":"rgb(166, 223, 115)","sequential-forest-500":"rgb(143, 209, 108)","sequential-forest-600":"rgb(121, 195, 101)","sequential-forest-700":"rgb(98, 181, 94)","sequential-forest-800":"rgb(76, 166, 88)","sequential-forest-900":"rgb(59, 151, 82)","sequential-forest-1000":"rgb(49, 136, 79)","sequential-forest-1100":"rgb(40, 121, 76)","sequential-forest-1200":"rgb(30, 106, 72)","sequential-forest-1300":"rgb(21, 91, 69)","sequential-forest-1400":"rgb(14, 77, 65)","sequential-forest-1500":"rgb(7, 63, 62)","sequential-forest-1600":"rgb(0, 49, 58)","categorical-100":"rgb(15, 181, 174)","categorical-200":"rgb(64, 70, 202)","categorical-300":"rgb(246, 133, 17)","categorical-400":"rgb(222, 61, 130)","categorical-500":"rgb(126, 132, 250)","categorical-600":"rgb(114, 224, 106)","categorical-700":"rgb(20, 122, 243)","categorical-800":"rgb(115, 38, 211)","categorical-900":"rgb(232, 198, 0)","categorical-1000":"rgb(203, 93, 0)","categorical-1100":"rgb(0, 143, 93)","categorical-1200":"rgb(188, 233, 49)","categorical-1300":"rgb(90, 169, 250)","categorical-1400":"rgb(192, 56, 204)","categorical-1500":"rgb(245, 107, 183)","categorical-1600":"rgb(255, 226, 46)"}}'),colors=spectrumColors_namespaceObject.light,categorical6=[colors["categorical-100"],colors["categorical-200"],colors["categorical-300"],colors["categorical-400"],colors["categorical-500"],colors["categorical-600"]],categorical12=[...categorical6,colors["categorical-700"],colors["categorical-800"],colors["categorical-900"],colors["categorical-1000"],colors["categorical-1100"],colors["categorical-1200"]],categorical16=[...categorical12,colors["categorical-1300"],colors["categorical-1400"],colors["categorical-1500"],colors["categorical-1600"]],divergingColorPalette_colors=spectrumColors_namespaceObject.light,divergentOrangeYellowSeafoam15=[divergingColorPalette_colors["divergent-orange-yellow-seafoam-100"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-200"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-300"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-400"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-500"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-600"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-700"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-800"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-900"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1000"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1100"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1200"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1300"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1400"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1500"]],divergentOrangeYellowSeafoam9=[divergingColorPalette_colors["divergent-orange-yellow-seafoam-100"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-300"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-500"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-700"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-800"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-900"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1100"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1300"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1500"]],divergentOrangeYellowSeafoam5=[divergingColorPalette_colors["divergent-orange-yellow-seafoam-100"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-500"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-800"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1100"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1500"]],divergentRedYellowBlue15=[divergingColorPalette_colors["divergent-red-yellow-blue-100"],divergingColorPalette_colors["divergent-red-yellow-blue-200"],divergingColorPalette_colors["divergent-red-yellow-blue-300"],divergingColorPalette_colors["divergent-red-yellow-blue-400"],divergingColorPalette_colors["divergent-red-yellow-blue-500"],divergingColorPalette_colors["divergent-red-yellow-blue-600"],divergingColorPalette_colors["divergent-red-yellow-blue-700"],divergingColorPalette_colors["divergent-red-yellow-blue-800"],divergingColorPalette_colors["divergent-red-yellow-blue-900"],divergingColorPalette_colors["divergent-red-yellow-blue-1000"],divergingColorPalette_colors["divergent-red-yellow-blue-1100"],divergingColorPalette_colors["divergent-red-yellow-blue-1200"],divergingColorPalette_colors["divergent-red-yellow-blue-1300"],divergingColorPalette_colors["divergent-red-yellow-blue-1400"],divergingColorPalette_colors["divergent-red-yellow-blue-1500"]],divergentRedYellowBlue9=[divergingColorPalette_colors["divergent-red-yellow-blue-100"],divergingColorPalette_colors["divergent-red-yellow-blue-300"],divergingColorPalette_colors["divergent-red-yellow-blue-500"],divergingColorPalette_colors["divergent-red-yellow-blue-700"],divergingColorPalette_colors["divergent-red-yellow-blue-800"],divergingColorPalette_colors["divergent-red-yellow-blue-900"],divergingColorPalette_colors["divergent-red-yellow-blue-1100"],divergingColorPalette_colors["divergent-red-yellow-blue-1300"],divergingColorPalette_colors["divergent-red-yellow-blue-1500"]],divergentRedYellowBlue5=[divergingColorPalette_colors["divergent-red-yellow-blue-100"],divergingColorPalette_colors["divergent-red-yellow-blue-500"],divergingColorPalette_colors["divergent-red-yellow-blue-800"],divergingColorPalette_colors["divergent-red-yellow-blue-1100"],divergingColorPalette_colors["divergent-red-yellow-blue-1500"]],divergentRedBlue15=[divergingColorPalette_colors["divergent-red-blue-100"],divergingColorPalette_colors["divergent-red-blue-200"],divergingColorPalette_colors["divergent-red-blue-300"],divergingColorPalette_colors["divergent-red-blue-400"],divergingColorPalette_colors["divergent-red-blue-500"],divergingColorPalette_colors["divergent-red-blue-600"],divergingColorPalette_colors["divergent-red-blue-700"],divergingColorPalette_colors["divergent-red-blue-800"],divergingColorPalette_colors["divergent-red-blue-900"],divergingColorPalette_colors["divergent-red-blue-1000"],divergingColorPalette_colors["divergent-red-blue-1100"],divergingColorPalette_colors["divergent-red-blue-1200"],divergingColorPalette_colors["divergent-red-blue-1300"],divergingColorPalette_colors["divergent-red-blue-1400"],divergingColorPalette_colors["divergent-red-blue-1500"]],divergentRedBlue9=[divergingColorPalette_colors["divergent-red-blue-100"],divergingColorPalette_colors["divergent-red-blue-300"],divergingColorPalette_colors["divergent-red-blue-500"],divergingColorPalette_colors["divergent-red-blue-700"],divergingColorPalette_colors["divergent-red-blue-800"],divergingColorPalette_colors["divergent-red-blue-900"],divergingColorPalette_colors["divergent-red-blue-1100"],divergingColorPalette_colors["divergent-red-blue-1300"],divergingColorPalette_colors["divergent-red-blue-1500"]],divergentRedBlue5=[divergingColorPalette_colors["divergent-red-blue-100"],divergingColorPalette_colors["divergent-red-blue-500"],divergingColorPalette_colors["divergent-red-blue-800"],divergingColorPalette_colors["divergent-red-blue-1100"],divergingColorPalette_colors["divergent-red-blue-1500"]],sequentialColorPalette_colors=spectrumColors_namespaceObject.light,sequentialViridis16=[sequentialColorPalette_colors["sequential-viridis-100"],sequentialColorPalette_colors["sequential-viridis-200"],sequentialColorPalette_colors["sequential-viridis-300"],sequentialColorPalette_colors["sequential-viridis-400"],sequentialColorPalette_colors["sequential-viridis-500"],sequentialColorPalette_colors["sequential-viridis-600"],sequentialColorPalette_colors["sequential-viridis-700"],sequentialColorPalette_colors["sequential-viridis-800"],sequentialColorPalette_colors["sequential-viridis-900"],sequentialColorPalette_colors["sequential-viridis-1000"],sequentialColorPalette_colors["sequential-viridis-1100"],sequentialColorPalette_colors["sequential-viridis-1200"],sequentialColorPalette_colors["sequential-viridis-1300"],sequentialColorPalette_colors["sequential-viridis-1400"],sequentialColorPalette_colors["sequential-viridis-1500"],sequentialColorPalette_colors["sequential-viridis-1600"]],sequentialViridis9=[sequentialColorPalette_colors["sequential-viridis-100"],sequentialColorPalette_colors["sequential-viridis-200"],sequentialColorPalette_colors["sequential-viridis-400"],sequentialColorPalette_colors["sequential-viridis-600"],sequentialColorPalette_colors["sequential-viridis-800"],sequentialColorPalette_colors["sequential-viridis-1000"],sequentialColorPalette_colors["sequential-viridis-1200"],sequentialColorPalette_colors["sequential-viridis-1400"],sequentialColorPalette_colors["sequential-viridis-1600"]],sequentialViridis5=[sequentialColorPalette_colors["sequential-viridis-100"],sequentialColorPalette_colors["sequential-viridis-400"],sequentialColorPalette_colors["sequential-viridis-800"],sequentialColorPalette_colors["sequential-viridis-1200"],sequentialColorPalette_colors["sequential-viridis-1600"]],sequentialMagma16=[sequentialColorPalette_colors["sequential-magma-100"],sequentialColorPalette_colors["sequential-magma-200"],sequentialColorPalette_colors["sequential-magma-300"],sequentialColorPalette_colors["sequential-magma-400"],sequentialColorPalette_colors["sequential-magma-500"],sequentialColorPalette_colors["sequential-magma-600"],sequentialColorPalette_colors["sequential-magma-700"],sequentialColorPalette_colors["sequential-magma-800"],sequentialColorPalette_colors["sequential-magma-900"],sequentialColorPalette_colors["sequential-magma-1000"],sequentialColorPalette_colors["sequential-magma-1100"],sequentialColorPalette_colors["sequential-magma-1200"],sequentialColorPalette_colors["sequential-magma-1300"],sequentialColorPalette_colors["sequential-magma-1400"],sequentialColorPalette_colors["sequential-magma-1500"],sequentialColorPalette_colors["sequential-magma-1600"]],sequentialMagma9=[sequentialColorPalette_colors["sequential-magma-100"],sequentialColorPalette_colors["sequential-magma-200"],sequentialColorPalette_colors["sequential-magma-400"],sequentialColorPalette_colors["sequential-magma-600"],sequentialColorPalette_colors["sequential-magma-800"],sequentialColorPalette_colors["sequential-magma-1000"],sequentialColorPalette_colors["sequential-magma-1200"],sequentialColorPalette_colors["sequential-magma-1400"],sequentialColorPalette_colors["sequential-magma-1600"]],sequentialMagma5=[sequentialColorPalette_colors["sequential-magma-400"],sequentialColorPalette_colors["sequential-magma-100"],sequentialColorPalette_colors["sequential-magma-800"],sequentialColorPalette_colors["sequential-magma-1200"],sequentialColorPalette_colors["sequential-magma-1600"]],sequentialRose16=[sequentialColorPalette_colors["sequential-rose-100"],sequentialColorPalette_colors["sequential-rose-200"],sequentialColorPalette_colors["sequential-rose-300"],sequentialColorPalette_colors["sequential-rose-400"],sequentialColorPalette_colors["sequential-rose-500"],sequentialColorPalette_colors["sequential-rose-600"],sequentialColorPalette_colors["sequential-rose-700"],sequentialColorPalette_colors["sequential-rose-800"],sequentialColorPalette_colors["sequential-rose-900"],sequentialColorPalette_colors["sequential-rose-1000"],sequentialColorPalette_colors["sequential-rose-1100"],sequentialColorPalette_colors["sequential-rose-1200"],sequentialColorPalette_colors["sequential-rose-1300"],sequentialColorPalette_colors["sequential-rose-1400"],sequentialColorPalette_colors["sequential-rose-1500"],sequentialColorPalette_colors["sequential-rose-1600"]],sequentialRose9=[sequentialColorPalette_colors["sequential-rose-100"],sequentialColorPalette_colors["sequential-rose-200"],sequentialColorPalette_colors["sequential-rose-400"],sequentialColorPalette_colors["sequential-rose-600"],sequentialColorPalette_colors["sequential-rose-800"],sequentialColorPalette_colors["sequential-rose-1000"],sequentialColorPalette_colors["sequential-rose-1200"],sequentialColorPalette_colors["sequential-rose-1400"],sequentialColorPalette_colors["sequential-rose-1600"]],sequentialRose5=[sequentialColorPalette_colors["sequential-rose-400"],sequentialColorPalette_colors["sequential-rose-100"],sequentialColorPalette_colors["sequential-rose-800"],sequentialColorPalette_colors["sequential-rose-1200"],sequentialColorPalette_colors["sequential-rose-1600"]],sequentialCerulean16=[sequentialColorPalette_colors["sequential-cerulean-100"],sequentialColorPalette_colors["sequential-cerulean-200"],sequentialColorPalette_colors["sequential-cerulean-300"],sequentialColorPalette_colors["sequential-cerulean-400"],sequentialColorPalette_colors["sequential-cerulean-500"],sequentialColorPalette_colors["sequential-cerulean-600"],sequentialColorPalette_colors["sequential-cerulean-700"],sequentialColorPalette_colors["sequential-cerulean-800"],sequentialColorPalette_colors["sequential-cerulean-900"],sequentialColorPalette_colors["sequential-cerulean-1000"],sequentialColorPalette_colors["sequential-cerulean-1100"],sequentialColorPalette_colors["sequential-cerulean-1200"],sequentialColorPalette_colors["sequential-cerulean-1300"],sequentialColorPalette_colors["sequential-cerulean-1400"],sequentialColorPalette_colors["sequential-cerulean-1500"],sequentialColorPalette_colors["sequential-cerulean-1600"]],sequentialCerulean9=[sequentialColorPalette_colors["sequential-cerulean-100"],sequentialColorPalette_colors["sequential-cerulean-200"],sequentialColorPalette_colors["sequential-cerulean-400"],sequentialColorPalette_colors["sequential-cerulean-600"],sequentialColorPalette_colors["sequential-cerulean-800"],sequentialColorPalette_colors["sequential-cerulean-1000"],sequentialColorPalette_colors["sequential-cerulean-1200"],sequentialColorPalette_colors["sequential-cerulean-1400"],sequentialColorPalette_colors["sequential-cerulean-1600"]],sequentialCerulean5=[sequentialColorPalette_colors["sequential-cerulean-400"],sequentialColorPalette_colors["sequential-cerulean-100"],sequentialColorPalette_colors["sequential-cerulean-800"],sequentialColorPalette_colors["sequential-cerulean-1200"],sequentialColorPalette_colors["sequential-cerulean-1600"]],sequentialForest16=[sequentialColorPalette_colors["sequential-forest-100"],sequentialColorPalette_colors["sequential-forest-200"],sequentialColorPalette_colors["sequential-forest-300"],sequentialColorPalette_colors["sequential-forest-400"],sequentialColorPalette_colors["sequential-forest-500"],sequentialColorPalette_colors["sequential-forest-600"],sequentialColorPalette_colors["sequential-forest-700"],sequentialColorPalette_colors["sequential-forest-800"],sequentialColorPalette_colors["sequential-forest-900"],sequentialColorPalette_colors["sequential-forest-1000"],sequentialColorPalette_colors["sequential-forest-1100"],sequentialColorPalette_colors["sequential-forest-1200"],sequentialColorPalette_colors["sequential-forest-1300"],sequentialColorPalette_colors["sequential-forest-1400"],sequentialColorPalette_colors["sequential-forest-1500"],sequentialColorPalette_colors["sequential-forest-1600"]],sequentialForest9=[sequentialColorPalette_colors["sequential-forest-100"],sequentialColorPalette_colors["sequential-forest-200"],sequentialColorPalette_colors["sequential-forest-400"],sequentialColorPalette_colors["sequential-forest-600"],sequentialColorPalette_colors["sequential-forest-800"],sequentialColorPalette_colors["sequential-forest-1000"],sequentialColorPalette_colors["sequential-forest-1200"],sequentialColorPalette_colors["sequential-forest-1400"],sequentialColorPalette_colors["sequential-forest-1600"]],sequentialForest5=[sequentialColorPalette_colors["sequential-forest-400"],sequentialColorPalette_colors["sequential-forest-100"],sequentialColorPalette_colors["sequential-forest-800"],sequentialColorPalette_colors["sequential-forest-1200"],sequentialColorPalette_colors["sequential-forest-1600"]],colorSchemes={categorical6,categorical12,categorical16,divergentOrangeYellowSeafoam5,divergentOrangeYellowSeafoam9,divergentOrangeYellowSeafoam15,divergentRedBlue5,divergentRedBlue9,divergentRedBlue15,divergentRedYellowBlue5,divergentRedYellowBlue9,divergentRedYellowBlue15,sequentialViridis5,sequentialViridis9,sequentialViridis16,sequentialMagma5,sequentialMagma9,sequentialMagma16,sequentialRose5,sequentialRose9,sequentialRose16,sequentialCerulean5,sequentialCerulean9,sequentialCerulean16,sequentialForest5,sequentialForest9,sequentialForest16};var svgPaths=__webpack_require__("./src/svgPaths.ts");const getFacetsFromProps=({color,lineType,opacity,size})=>{let facets=[color,lineType,opacity,size].map((facet=>Array.isArray(facet)?facet[0]:facet)).filter((facet=>"string"==typeof facet));facets=[...new Set(facets)];let secondaryFacets=[color,lineType,opacity].map((facet=>Array.isArray(facet)?facet[1]:void 0)).filter((facet=>"string"==typeof facet));return secondaryFacets=[...new Set(secondaryFacets)],{facets,secondaryFacets}},getFacetsFromScales=(scales=[])=>{const facets=[constants.Tj,constants.Ze,constants.$M,"secondaryColor","secondaryLineType","secondaryOpacity"].reduce(((acc,cur)=>{const scale=scales.find((scale=>scale.name===cur));return scale?.domain&&"fields"in scale.domain&&scale.domain.fields.length?[...acc,scale.domain.fields[0].toString()]:acc}),[]);return[...new Set(facets)]},getColorValue=(color,colorScheme)=>spectrumColors_namespaceObject[colorScheme][color]||color,getStrokeDashFromLineType=lineType=>{if(Array.isArray(lineType))return lineType;switch(lineType){case"dashed":return[7,4];case"dotted":return[2,3];case"dotDash":return[2,3,7,4];case"shortDash":return[3,4];case"longDash":return[11,4];case"twoDash":return[5,2,11,2];default:return[]}},getLineWidthPixelsFromLineWidth=lineWidth=>{if("number"==typeof lineWidth)return lineWidth;switch(lineWidth){case"XS":return 1;case"S":return 1.5;case"L":return 3;case"XL":return 4;default:return 2}},getPathFromSymbolShape=symbolShape=>"rounded-square"===symbolShape?svgPaths.UU:symbolShape,getPathFromIcon=icon=>({date:svgPaths.DX}[icon]||icon),getVegaSymbolSizeFromRscSymbolSize=symbolSize=>Math.pow(getSymbolWidthFromRscSymbolSize(symbolSize),2),getSymbolWidthFromRscSymbolSize=symbolSize=>{if("number"==typeof symbolSize)return symbolSize;switch(symbolSize){case"XS":return 6;case"S":return 8;case"L":return 12;case"XL":return 16;default:return 10}},baseData=[{name:constants.Bt,values:[],transform:[{type:"identifier",as:constants.i4}]},{name:constants.H5,source:constants.Bt}],initializeSpec=(spec={},chartProps={})=>{const{backgroundColor,colorScheme="light",data,description,title}=chartProps;return{...{title:title||void 0,description,autosize:{type:"fit",contains:"padding",resize:!0},data:isVegaData(data)?data:baseData,background:backgroundColor?getColorValue(backgroundColor,colorScheme):void 0},...spec||{}}},isVegaValuesDataset=dataset=>Array.isArray(dataset.values),isVegaData=data=>data?.length&&isVegaValuesDataset(data[0]),getDimensionField=(dimension,scaleType)=>"time"===scaleType?constants.v6:dimension;var alpha=__webpack_require__("./src/alpha/index.ts");function toArray(children){return void 0===children?[]:Array.isArray(children)?children:[children]}const sanitizeMarkChildren=children=>toArray(children).flat().filter((child=>isMarkChildElement(child))),sanitizeAxisChildren=children=>toArray(children).flat().filter((child=>isMarkChildElement(child))),sanitizeAxisAnnotationChildren=children=>toArray(children).flat().filter((child=>isMarkChildElement(child))),sanitizeTrendlineChildren=children=>toArray(children).flat().filter((child=>isMarkChildElement(child))),isChartChildElement=child=>isRscComponent(child),isMarkChildElement=child=>isRscComponent(child),isRscComponent=child=>Boolean(child&&"string"!=typeof child&&"boolean"!=typeof child&&"type"in child&&child.type!==react.Fragment&&"displayName"in child.type);function toCamelCase(str){const words=str.match(/[A-Z]{2,}(?=[A-Z][a-z]+\d*|\b)|[A-Z]?[a-z]+\d*|[A-Z]|\d+/g);return words?words.map(((word,i)=>0===i?word.toLowerCase():word.charAt(0).toUpperCase()+word.slice(1).toLowerCase())).join(""):str}function getElement(element,type){if(element&&"boolean"!=typeof element&&"string"!=typeof element&&"type"in element&&element.type!==react.Fragment){if(element.type===type)return element;if("children"in element.props)for(const child of toArray(element.props.children)){const desiredElement=getElement(child,type);if(desiredElement)return desiredElement}}}const getAllElements=(target,source,elements=[],name="")=>{if(!target||"boolean"==typeof target||"string"==typeof target||!("type"in target)||target.type===react.Fragment)return elements;if(target.type===source)return[...elements,{name,element:target}];if(!("children"in target.props))return elements;const elementCounts=initElementCounts(),desiredElements=[];for(const child of toArray(target.props.children)){const childName=getElementName(child,elementCounts);desiredElements.push(...getAllElements(child,source,elements,[name,childName].filter(Boolean).join("")))}return[...elements,...desiredElements]},getElementName=(element,elementCounts)=>{if(!isRscComponent(element)||!("displayName"in element.type))return"";switch(element.type.displayName){case Area.displayName:return elementCounts.area++,getComponentName(element,`area${elementCounts.area}`);case Axis._.displayName:return elementCounts.axis++,getComponentName(element,`axis${elementCounts.axis}`);case AxisAnnotation.displayName:return elementCounts.axisAnnotation++,getComponentName(element,`Annotation${elementCounts.axisAnnotation}`);case Bar.y.displayName:return elementCounts.bar++,getComponentName(element,`bar${elementCounts.bar}`);case alpha.R.displayName:return elementCounts.donut++,getComponentName(element,`donut${elementCounts.donut}`);case Legend.displayName:return elementCounts.legend++,getComponentName(element,`legend${elementCounts.legend}`);case Line.displayName:return elementCounts.line++,getComponentName(element,`line${elementCounts.line}`);case Scatter.displayName:return elementCounts.scatter++,getComponentName(element,`scatter${elementCounts.scatter}`);case Trendline.displayName:return getComponentName(element,"Trendline");default:return""}},getComponentName=(element,defaultName)=>"object"==typeof element&&"props"in element&&"name"in element.props&&element.props.name?toCamelCase(element.props.name):defaultName,initElementCounts=()=>({area:-1,axis:-1,axisAnnotation:-1,bar:-1,donut:-1,legend:-1,line:-1,scatter:-1});function debugLog(debug,{title="",contents}){if(debug){const rainbow=String.fromCodePoint(127752);console.log(`%c${rainbow} ${title}`,"color: #2780eb",contents)}}const getOnMouseInputCallback=onMouseInput=>(_event,item)=>{item&&isLegendItem(item)&&((item,onLegendMouseInput)=>{const legendItemValue=getLegendItemValue(item);legendItemValue&&onLegendMouseInput?.(legendItemValue)})(item,onMouseInput)},isLegendItem=item=>!!isSceneGroup(item)||isItemSceneItem(item)&&"legend-symbol"===item.mark.role,handleLegendItemClick=(item,hiddenSeries,setHiddenSeries,legendIsToggleable,onLegendClick)=>{const legendItemValue=getLegendItemValue(item);var target,value;void 0!==legendItemValue&&(onLegendClick?.(legendItemValue),legendIsToggleable&&setHiddenSeries((value=legendItemValue,(target=hiddenSeries).includes(value)?target.filter((item=>item!==value)):[...target,value])))},getLegendItemValue=item=>{if(isSceneGroup(item)){const labelItem=item.items.find((mark=>"role"in mark&&"legend-label"===mark.role));if(!isScene(labelItem))return;if(!labelItem.items[0])return;if(!("datum"in labelItem.items[0]))return;return labelItem.items[0].datum.value}if(isItemSceneItem(item))return item.datum.value},isGroupMarkItem=item=>isItemSceneItem(item.datum),isAreaMarkItem=item=>"area"===item?.mark.marktype,getItemForAreaMark=item=>{const pointMark=item?.mark.group.items.find((mark=>mark.name.includes("_anchorPoint")));if(pointMark&&1===pointMark.items.length){const point=pointMark.items[0];if(isItemSceneItem(point))return point}return item},getItemBounds=item=>{if(isItemSceneItem(item)){const groupOffset=getGroupOffset(item);return{x1:item.bounds.x1+groupOffset.x,x2:item.bounds.x2+groupOffset.x,y1:item.bounds.y1+groupOffset.y,y2:item.bounds.y2+groupOffset.y}}return{x1:0,x2:0,y1:0,y2:0}},getItemName=item=>{if(isItemSceneItem(item)){const itemName=item.mark.name;if(!itemName)return;return itemName.split("_")[0]}},getGroupOffset=item=>{if(isItemSceneItem(item)){const{x,y}=getGroupOffset(item.mark.group);return{x:(item.mark.group.x||0)+x,y:(item.mark.group.y||0)+y}}return{x:0,y:0}};function isItemSceneItem(item){return"object"==typeof item&&null!==item&&("bounds"in item&&"datum"in item)}const isSceneGroup=item=>"object"==typeof item&&null!==item&&("context"in item&&"items"in item&&"height"in item&&"width"in item),isScene=item=>"object"==typeof item&&null!==item&&("bounds"in item&&"clip"in item);function useLegend(children){const legend=(0,react.useMemo)((()=>getElement((0,react.createElement)(Chart_Chart,{data:[]},children),Legend)),[children]),[hiddenSeriesState,setHiddenSeries]=(0,react.useState)(legend?.props?.defaultHiddenSeries??[]);if(!legend)return{hiddenSeriesState,setHiddenSeries};const{descriptions,isToggleable,onClick,onMouseOut,onMouseOver}=legend.props;return{hiddenSeriesState,setHiddenSeries,descriptions,isToggleable,onClick,onMouseOut,onMouseOver}}var immer=__webpack_require__("./node_modules/immer/dist/immer.mjs");const hasSignalByName=(signals,name)=>signals.some((signal=>signal.name===name)),getGenericSignal=(name,value=null)=>({name,value}),addHighlightedItemSignalEvents=(signals,markName,datumOrder=1,excludeDataKeys)=>{const highlightedItemSignal=signals.find((signal=>signal.name===constants.qE));if(highlightedItemSignal){void 0===highlightedItemSignal.on&&(highlightedItemSignal.on=[]);const datum=new Array(datumOrder).fill("datum.").join(""),excludeDataKeysCondition=excludeDataKeys?.map((excludeDataKey=>`${datum}${excludeDataKey}`)).join(" || ");highlightedItemSignal.on.push({events:`@${markName}:mouseover`,update:excludeDataKeys?.length?`(${excludeDataKeysCondition}) ? null : ${datum}${constants.i4}`:`${datum}${constants.i4}`},{events:`@${markName}:mouseout`,update:"null"})}},addHighlightedSeriesSignalEvents=(signals,markName,datumOrder=1,excludeDataKeys)=>{const highlightedSeriesSignal=signals.find((signal=>signal.name===constants.gG));if(highlightedSeriesSignal){void 0===highlightedSeriesSignal.on&&(highlightedSeriesSignal.on=[]);const datum=new Array(datumOrder).fill("datum.").join(""),excludeDataKeysCondition=excludeDataKeys?.map((excludeDataKey=>`${datum}${excludeDataKey}`)).join(" || ");highlightedSeriesSignal.on.push({events:`@${markName}:mouseover`,update:excludeDataKeys?.length?`(${excludeDataKeysCondition}) ? null : ${datum}${constants.y4}`:`${datum}${constants.y4}`},{events:`@${markName}:mouseout`,update:"null"})}},getTrellisProperties=({trellisOrientation,name,trellisPadding})=>{const axis="horizontal"===trellisOrientation?"x":"y";return{facetName:`${name}_trellis`,scaleName:`${axis}TrellisBand`,markName:`${axis}TrellisGroup`,rangeScale:"x"===axis?"width":"height",axis,paddingInner:trellisPadding}},isTrellised=props=>Boolean(props.trellis),barUtils_isDodgedAndStacked=({color,lineType,opacity})=>[color,lineType,opacity].some((facet=>Array.isArray(facet)&&2===facet.length)),getDodgedGroupMark=props=>{const{dimension,groupedPadding,orientation,name,paddingRatio}=props,{dimensionScaleKey,dimensionAxis,rangeScale}=getOrientationProperties(orientation);return{name:`${name}_group`,type:"group",from:{facet:{data:isTrellised(props)?getTrellisProperties(props).facetName:constants.H5,name:`${name}_facet`,groupby:dimension}},encode:{enter:{[dimensionAxis]:{scale:dimensionScaleKey,field:dimension}}},signals:[{name:rangeScale,update:`bandwidth("${dimensionScaleKey}")`}],scales:[{name:`${name}_position`,type:"band",range:rangeScale,domain:{data:constants.H5,field:`${name}_dodgeGroup`},paddingInner:groupedPadding??paddingRatio}]}},barUtils_getDodgedDimensionEncodings=props=>{const{dimensionAxis,rangeScale}=getOrientationProperties(props.orientation),scale=`${props.name}_position`;return{[dimensionAxis]:{scale,field:`${props.name}_dodgeGroup`},[rangeScale]:{scale,band:1}}},getMetricEncodings=props=>{const{metric,type}=props,{metricAxis:startKey,metricScaleKey:scaleKey}=getOrientationProperties(props.orientation),endKey=`${startKey}2`;return"stacked"===type||barUtils_isDodgedAndStacked(props)?getStackedMetricEncodings(props):{[startKey]:{scale:scaleKey,value:0},[endKey]:{scale:scaleKey,field:metric}}},getStackedMetricEncodings=props=>{const{metric,orientation}=props,{metricAxis:startKey,metricScaleKey:scaleKey}=getOrientationProperties(props.orientation),endKey=`${startKey}2`,startValue=`datum.${metric}0`,endValue=`datum.${metric}1`;return"vertical"===orientation?{[startKey]:[{test:`${startValue} === 0`,signal:`scale('${scaleKey}', ${startValue})`},{test:`${endValue} > 0`,signal:`max(scale('${scaleKey}', ${startValue}) - 1.5, scale('${scaleKey}', ${endValue}))`},{signal:`min(scale('${scaleKey}', ${startValue}) + 1.5, scale('${scaleKey}', ${endValue}))`}],[endKey]:{scale:scaleKey,field:`${metric}1`}}:{[startKey]:[{test:`${startValue} === 0`,signal:`scale('${scaleKey}', ${startValue})`},{test:`${endValue} > 0`,signal:`min(scale('${scaleKey}', ${startValue}) + 1.5, scale('${scaleKey}', ${endValue}))`},{signal:`max(scale('${scaleKey}', ${startValue}) - 1.5, scale('${scaleKey}', ${endValue}))`}],[endKey]:{scale:scaleKey,field:`${metric}1`}}},getCornerRadiusEncodings=props=>{const{type,lineWidth,metric}=props,value=Math.max(1,constants.zu-getLineWidthPixelsFromLineWidth(lineWidth)/2);let rectEncodeEntry;return rectEncodeEntry="dodged"!==type||barUtils_isDodgedAndStacked(props)?getStackedCornerRadiusEncodings(props):{cornerRadiusTopLeft:[{test:`datum.${metric} > 0`,value},{value:0}],cornerRadiusTopRight:[{test:`datum.${metric} > 0`,value},{value:0}],cornerRadiusBottomLeft:[{test:`datum.${metric} < 0`,value},{value:0}],cornerRadiusBottomRight:[{test:`datum.${metric} < 0`,value},{value:0}]},rotateRectClockwiseIfNeeded(rectEncodeEntry,props)},getStackedCornerRadiusEncodings=({name,metric,lineWidth})=>{const topTestString=`datum.${metric}1 > 0 && data('${name}_stacks')[indexof(pluck(data('${name}_stacks'), '${constants.Xz}'), datum.${constants.Xz})].max_${metric}1 === datum.${metric}1`,bottomTestString=`datum.${metric}1 < 0 && data('${name}_stacks')[indexof(pluck(data('${name}_stacks'), '${constants.Xz}'), datum.${constants.Xz})].min_${metric}1 === datum.${metric}1`,value=Math.max(1,constants.zu-getLineWidthPixelsFromLineWidth(lineWidth)/2);return{cornerRadiusTopLeft:[{test:topTestString,value},{value:0}],cornerRadiusTopRight:[{test:topTestString,value},{value:0}],cornerRadiusBottomLeft:[{test:bottomTestString,value},{value:0}],cornerRadiusBottomRight:[{test:bottomTestString,value},{value:0}]}},rotateRectClockwiseIfNeeded=(rectEncodeEntry,{orientation})=>"vertical"===orientation?rectEncodeEntry:{cornerRadiusTopLeft:rectEncodeEntry.cornerRadiusBottomLeft,cornerRadiusTopRight:rectEncodeEntry.cornerRadiusTopLeft,cornerRadiusBottomLeft:rectEncodeEntry.cornerRadiusBottomRight,cornerRadiusBottomRight:rectEncodeEntry.cornerRadiusTopRight},getAnnotationPositionOffset=({orientation},annotationWidth)=>"vertical"===orientation?"13.5":"value"in annotationWidth?""+(annotationWidth.value/2+2.5):`((${annotationWidth.signal}) / 2 + 2.5)`,getAnnotationMarks=(barProps,localDataTableName,localDimensionScaleKey,localDimensionField)=>{const marks=[],annotation=sanitizeMarkChildren(barProps.children).find((el=>el.type===Annotation.Y));if(annotation?.props.textKey){const{orientation,name}=barProps,{textKey,style}=annotation.props,{metricAxis,dimensionAxis}=getOrientationProperties(orientation),annotationWidth=((textKey,style)=>style?.width?{value:style.width}:{signal:`getLabelWidth(datum.${textKey}, '${constants.P3}', ${constants.eK}) + 10`})(textKey,style),annotationPosition=((props,annotationWidth)=>{const{type,metric,orientation}=props,field="stacked"===type||barUtils_isDodgedAndStacked(props)?`${metric}1`:metric,{metricScaleKey:scaleKey}=getOrientationProperties(orientation),positionOffset=getAnnotationPositionOffset(props,annotationWidth);return"vertical"===orientation?[{test:`datum.${field} < 0`,signal:`max(scale('${scaleKey}', datum.${field}), scale('${scaleKey}', 0) + ${positionOffset})`},{signal:`min(scale('${scaleKey}', datum.${field}), scale('${scaleKey}', 0) - ${positionOffset})`}]:[{test:`datum.${field} < 0`,signal:`min(scale('${scaleKey}', datum.${field}), scale('${scaleKey}', 0) - ${positionOffset})`},{signal:`max(scale('${scaleKey}', datum.${field}), scale('${scaleKey}', 0) + ${positionOffset})`}]})(barProps,annotationWidth);marks.push({name:`${name}_annotationBackground`,type:"rect",from:{data:localDataTableName},interactive:!1,encode:{enter:{align:{value:"center"},baseline:{value:"middle"},[`${dimensionAxis}c`]:{scale:localDimensionScaleKey,field:localDimensionField,band:.5},[`${metricAxis}c`]:annotationPosition,cornerRadius:{value:4},height:{value:22},fill:[{test:`datum.${textKey} && bandwidth('${localDimensionScaleKey}') >= 48`,signal:constants.b3}],width:annotationWidth}}}),marks.push({name:`${name}_annotationText`,type:"text",from:{data:localDataTableName},interactive:!1,encode:{enter:{[dimensionAxis]:{scale:localDimensionScaleKey,field:localDimensionField,band:.5},[metricAxis]:annotationPosition,text:[{test:`bandwidth('${localDimensionScaleKey}') >= 48`,field:textKey}],fontSize:{value:constants.eK},fontWeight:{value:constants.P3},baseline:{value:"middle"},align:{value:"center"}}}})}return marks},getBaseBarEnterEncodings=props=>({...getMetricEncodings(props),...getCornerRadiusEncodings(props)}),getBarEnterEncodings=({children,color,colorScheme,name,opacity})=>({fill:getColorProductionRule(color,colorScheme),fillOpacity:getOpacityProductionRule(opacity),tooltip:getTooltip(children,name)}),getBarUpdateEncodings=props=>({cursor:getCursor(props.children),opacity:getBarOpacity(props),stroke:getStroke(props),strokeDash:getStrokeDash(props),strokeWidth:getStrokeWidth(props)}),getBarOpacity=({children})=>hasInteractiveChildren(children)?hasPopover(children)?[{test:`!${constants.sk} && ${constants.qE} && ${constants.qE} !== datum.${constants.i4}`,...getHighlightOpacityValue(constants.ZH)},{test:`${constants.sk} && ${constants.sk} !== datum.${constants.i4}`,...getHighlightOpacityValue(constants.ZH)},{test:`${constants.sk} && ${constants.sk} === datum.${constants.i4}`,...constants.ZH},constants.ZH]:[{test:`${constants.qE} && ${constants.qE} !== datum.${constants.i4}`,...getHighlightOpacityValue()},constants.ZH]:[constants.ZH],getStroke=({children,color,colorScheme})=>{const defaultProductionRule=getColorProductionRule(color,colorScheme);return hasPopover(children)?[{test:`${constants.sk} && ${constants.sk} === datum.${constants.i4}`,value:getColorValue("static-blue",colorScheme)},defaultProductionRule]:[defaultProductionRule]},getStrokeDash=({children,lineType})=>{const defaultProductionRule=getStrokeDashProductionRule(lineType);return hasPopover(children)?[{test:`${constants.sk} && ${constants.sk} === datum.${constants.i4}`,value:[]},defaultProductionRule]:[defaultProductionRule]},getStrokeWidth=({children,lineWidth})=>{const lineWidthValue=getLineWidthPixelsFromLineWidth(lineWidth),defaultProductionRule={value:lineWidthValue};return hasPopover(children)?[{test:`${constants.sk} && ${constants.sk} === datum.${constants.i4}`,value:Math.max(lineWidthValue,2)},defaultProductionRule]:[defaultProductionRule]},getBarPadding=(paddingRatio,paddingOuter)=>{const paddingInner=paddingRatio;return{paddingInner,paddingOuter:void 0===paddingOuter?constants.IZ-(1-paddingInner)/2:paddingOuter}},getScaleValues=props=>"stacked"===props.type||barUtils_isDodgedAndStacked(props)?[`${props.metric}1`]:[props.metric],getOrientationProperties=orientation=>"vertical"===orientation?{metricAxis:"y",dimensionAxis:"x",metricScaleKey:"yLinear",dimensionScaleKey:"xBand",rangeScale:"width"}:{metricAxis:"x",dimensionAxis:"y",metricScaleKey:"xLinear",dimensionScaleKey:"yBand",rangeScale:"height"},getScaleIndexByType=(scales,type,axis)=>{const name=toCamelCase(`${axis} ${type}`);let index=scales.findIndex((scale=>scale.name===name));return-1===index&&(index=scales.length,scales.push(generateScale(type,axis))),index},getScaleIndexByName=(scales,name,type)=>{let index=scales.findIndex((scale=>scale.name===name));return-1===index&&(index=scales.length,scales.push({name,type})),index},addDomainFields=(0,immer.jM)(((scale,values)=>(values.forEach((value=>{isScaleMultiFieldsRef(scale.domain)?scale.domain.fields.includes(value)||scale.domain.fields.push(value):scale.domain={data:constants.Bt,fields:[value]}})),scale))),addContinuousDimensionScale=(scales,{scaleType,dimension,padding})=>{const index=getScaleIndexByType(scales,scaleType,"x"),fields=[getDimensionField(dimension,scaleType)];scales[index]=addDomainFields(scales[index],fields),void 0!==padding&&(scales[index]=overridePadding(scales[index],padding))},overridePadding=(0,immer.jM)(((scale,padding)=>{"padding"in scale&&(scale.padding=padding),"paddingOuter"in scale&&(scale.paddingOuter=padding)})),addMetricScale=(scales,metricKeys,metricAxis="y")=>{const index=getScaleIndexByType(scales,"linear",metricAxis);scales[index]=addDomainFields(scales[index],metricKeys)},addFieldToFacetScaleDomain=(scales,facetType,facetValue)=>{if("string"==typeof facetValue||Array.isArray(facetValue)&&facetValue.length){const index=getScaleIndexByName(scales,facetType),facetField=Array.isArray(facetValue)?facetValue[0]:facetValue;scales[index]=addDomainFields(scales[index],[facetField])}},generateScale=(type,axis,props)=>({...getDefaultScale(type,axis),...props}),getDefaultScale=(scaleType,axis,chartOrientation="vertical")=>{const isDimensionAxis=axis==={vertical:"x",horizontal:"y"}[chartOrientation],scale={name:toCamelCase(`${axis} ${scaleType}`),type:scaleType,range:"x"===axis?"width":"height",domain:{data:constants.H5,fields:[]},...isDimensionAxis?getPadding(scaleType):{}};if("ordinal"===scale.type){const{name,type,domain}=scale;return{name,type,domain}}return"linear"!==scale.type||isDimensionAxis?scale:{...scale,nice:!0,zero:!0}},getPadding=type=>{switch(type){case"band":const{paddingInner,paddingOuter}=getBarPadding(constants.WN);return{paddingInner,paddingOuter};case"linear":case"time":return{padding:constants.uP};case"point":return{paddingOuter:constants.IZ};default:return{}}},getScaleName=(axis,type)=>toCamelCase(`${axis} ${type}`),getOrdinalScale=(name,range)=>({name,type:"ordinal",range,domain:{data:constants.Bt,fields:[]}}),isScaleMultiFieldsRef=domain=>Boolean(domain&&!Array.isArray(domain)&&"data"in domain&&"fields"in domain);function getCursor(children){if(hasPopover(children))return{value:"pointer"}}function getInteractive(children){return hasInteractiveChildren(children)}function getTooltip(children,name,nestedDatum){if(hasTooltip(children)){const defaultTooltip={signal:`merge(datum${nestedDatum?".datum":""}, {'rscComponentName': '${name}'})`},excludeDataKeys=getTooltipProps(children)?.excludeDataKeys;return excludeDataKeys?.length?[...excludeDataKeys.map((excludeDataKey=>({test:`datum.${excludeDataKey}`,signal:"false"}))),defaultTooltip]:defaultTooltip}}function getTooltipProps(children){return children.find((child=>child.type===ChartTooltip.I))?.props}const getBorderStrokeEncodings=(isStacked,isArea=!1)=>isStacked?{stroke:{signal:constants.b3},strokeWidth:{value:isArea?1.5:1},strokeJoin:{value:"round"}}:{},hasInteractiveChildren=children=>children.some((child=>child.type===ChartTooltip.I||child.type===ChartPopover||child.type===Trendline&&child.props.displayOnHover||child.type===MetricRange_MetricRange&&child.props.displayOnHover)),hasPopover=children=>children.some((child=>child.type===ChartPopover)),hasTooltip=children=>children.some((child=>child.type===ChartTooltip.I)),getColorProductionRule=(color,colorScheme,colorScaleType="ordinal")=>{const colorScaleName="linear"===colorScaleType?constants.VQ:constants.Tj;return Array.isArray(color)?{signal:`scale('colors', datum.${color[0]})[indexof(domain('secondaryColor'), datum.${color[1]})% length(scale('colors', datum.${color[0]}))]`}:"string"==typeof color?{scale:colorScaleName,field:color}:{value:getColorValue(color.value,colorScheme)}},getLineWidthProductionRule=lineWidth=>{if(lineWidth)return Array.isArray(lineWidth)?{signal:`scale('lineWidths', datum.${lineWidth[0]})[indexof(domain('secondaryLineWidth'), datum.${lineWidth[1]})% length(scale('lineWidths', datum.${lineWidth[0]}))]`}:"string"==typeof lineWidth?{scale:constants.Bg,field:lineWidth}:{value:getLineWidthPixelsFromLineWidth(lineWidth.value)}},getOpacityProductionRule=opacity=>Array.isArray(opacity)?{signal:`scale('opacities', datum.${opacity[0]})[indexof(domain('secondaryOpacity'), datum.${opacity[1]})% length(scale('opacities', datum.${opacity[0]}))]`}:"string"==typeof opacity?{signal:`scale('${constants.$M}', datum.${opacity})`}:{value:opacity.value},getSymbolSizeProductionRule=symbolSize=>"string"==typeof symbolSize?{scale:constants.iJ,field:symbolSize}:{value:getVegaSymbolSizeFromRscSymbolSize(symbolSize.value)},getStrokeDashProductionRule=lineType=>Array.isArray(lineType)?{signal:`scale('lineTypes', datum.${lineType[0]})[indexof(domain('secondaryLineType'), datum.${lineType[1]})% length(scale('lineTypes', datum.${lineType[0]}))]`}:"string"==typeof lineType?{scale:constants.Ze,field:lineType}:{value:getStrokeDashFromLineType(lineType.value)},getHighlightOpacityValue=(opacityValue=constants.ZH)=>"signal"in opacityValue?{signal:`${opacityValue.signal} / ${constants.ux}`}:{value:opacityValue.value/constants.ux},getXProductionRule=(scaleType,dimension)=>{const scale=getScaleName("x",scaleType);return"time"===scaleType?{scale,field:constants.v6}:{scale,field:dimension}},getPointsForVoronoi=(dataSource,dimension,metric,name,scaleType)=>({name:`${name}_pointsForVoronoi`,type:"symbol",from:{data:dataSource},interactive:!1,encode:{enter:{y:{scale:"yLinear",field:metric},fill:{value:"transparent"},stroke:{value:"transparent"}},update:{x:getXProductionRule(scaleType,dimension)}}}),getVoronoiPath=(children,dataSource,markName)=>({name:`${markName}_voronoi`,type:"path",from:{data:dataSource},encode:{enter:{fill:{value:"transparent"},stroke:{value:"transparent"},isVoronoi:{value:!0},tooltip:getTooltip(children,markName,!0)},update:{cursor:getCursor(children)}},transform:[{type:"voronoi",x:"datum.x",y:"datum.y",size:[{signal:"max(width, 1)"},{signal:"max(height, 1)"}]}]}),addTimeTransform=(0,immer.jM)(((transforms,dimension)=>{-1===transforms.findIndex((transform=>"timeunit"===transform.type))&&transforms.push({type:"timeunit",field:dimension,units:["year","month","date","hours","minutes"],as:[constants.v6,`${constants.Lr}1`]})})),getTransformSort=order=>{if(order)return{field:order}},getTableData=data=>data.find((d=>d.name===constants.Bt)),getSeriesIdTransform=facets=>{const expr=facets.map((facet=>`datum.${facet}`)).join(' + " | " + ');return{type:"formula",as:constants.y4,expr}},getFilteredTooltipData=children=>{const excludeDataKeys=getTooltipProps(children)?.excludeDataKeys,transform=excludeDataKeys?.map((excludeDataKey=>({type:"filter",expr:`!datum.${excludeDataKey}`})));return{name:`${constants.H5}ForTooltip`,source:constants.H5,transform}},getAreaMark=({name,color,colorScheme,children,metricStart,metricEnd,isStacked,scaleType,dimension,opacity,isMetricRange,parentName,displayOnHover},dataSource=`${name}_facet`)=>({name,type:"area",from:{data:dataSource},interactive:getInteractive(children),encode:{enter:{y:{scale:"yLinear",field:metricStart},y2:{scale:"yLinear",field:metricEnd},fill:getColorProductionRule(color,colorScheme),tooltip:getTooltip(children,name),...getBorderStrokeEncodings(isStacked,!0)},update:{x:getX(scaleType,dimension),cursor:getCursor(children),fillOpacity:getFillOpacity(name,color,opacity,children,isMetricRange,parentName,displayOnHover)}}});function getFillOpacity(name,color,opacity,children,isMetricRange,parentName,displayOnHover){return isMetricRange&&displayOnHover?[{test:`${constants.gG} && ${constants.gG} === datum.${color}`,value:opacity},{test:`${constants.uW} && ${constants.uW} === datum.${color}`,value:opacity},{test:`${constants.gG} && ${constants.gG} === datum.${constants.y4}`,value:opacity},{value:0}]:children.length?children.some((child=>child.type===ChartPopover&&!isMetricRange))?[{test:`!${constants.uW} && ${constants.gG} && ${constants.gG} !== datum.${color}`,value:opacity/constants.ux},{test:`${constants.uW} && ${constants.uW} !== datum.${color}`,value:opacity/constants.ux},{test:`${constants.uW} && ${constants.uW} === datum.${color}`,value:opacity},{value:opacity}]:[{test:`${constants.gG} && ${constants.gG} !== datum.${color}`,value:opacity/constants.ux},{value:opacity}]:[{value:opacity}]}const getX=(scaleType,dimension)=>"time"===scaleType?{scale:"xTime",field:constants.v6}:"linear"===scaleType?{scale:"xLinear",field:dimension}:{scale:"xPoint",field:dimension},addArea=(0,immer.jM)(((spec,{children,color=constants.OT,colorScheme=constants.gb,dimension=constants.Lr,index=0,metric=constants.bA,metricStart,metricEnd,name,opacity=.8,scaleType="time",...props})=>{const areaProps={children:sanitizeMarkChildren(children),color,colorScheme,dimension,index,metric,name:toCamelCase(name||`area${index}`),scaleType,opacity,metricStart,metricEnd,...props};return!metricStart&&!metricEnd||metricStart&&metricEnd||(console.error(`${metricEnd?"metricEnd":"metricStart"} is defined but ${metricEnd?"metricStart":"metricEnd"} is not. Both must be defined in order to use the "start and end" method. Defaulting back to 'metric = ${metric}'`),areaProps.metricEnd=void 0,areaProps.metricStart=void 0),spec.data=addData(spec.data??[],areaProps),spec.signals=addSignals(spec.signals??[],areaProps),spec.scales=setScales(spec.scales??[],areaProps),spec.marks=addAreaMarks(spec.marks??[],areaProps),spec})),addData=(0,immer.jM)(((data,{name,dimension,scaleType,color,metric,metricEnd,metricStart,order,children})=>{if("time"===scaleType){const tableData=getTableData(data);tableData.transform=addTimeTransform(tableData.transform??[],dimension)}if(!metricEnd||!metricStart){const filteredTableData=(data=>data.find((d=>d.name===constants.H5)))(data);filteredTableData.transform=[...filteredTableData.transform??[],{type:"stack",groupby:[dimension],field:metric,sort:getTransformSort(order),as:[`${metric}0`,`${metric}1`]}]}if(children.length){const hoverSignal=`${name}_controlledHoveredId`;data.push({name:`${name}_highlightedDataPoint`,source:constants.H5,transform:[{type:"filter",expr:`${constants.sk} && ${constants.sk} === datum.${constants.i4} || !${constants.sk} && ${hoverSignal} && ${hoverSignal} === datum.${constants.i4}`}]}),children.some((child=>child.type===ChartPopover))&&data.push({name:`${name}_selectedDataSeries`,source:constants.H5,transform:[{type:"filter",expr:`${constants.uW} && ${constants.uW} === datum.${color}`}]})}})),addSignals=(0,immer.jM)(((signals,{children,name})=>{children.length&&(hasSignalByName(signals,`${name}_controlledHoveredId`)||signals.push((name=>({name:`${name}_controlledHoveredId`,value:null,on:[{events:`@${name}:mouseout`,update:"null"}]}))(name)),addHighlightedSeriesSignalEvents(signals,name,1,getTooltipProps(children)?.excludeDataKeys))})),setScales=(0,immer.jM)(((scales,{metric,metricEnd,metricStart,dimension,color,scaleType,padding})=>(addContinuousDimensionScale(scales,{scaleType,dimension,padding}),addFieldToFacetScaleDomain(scales,constants.Tj,color),metricEnd&&metricStart||(metricStart=`${metric}0`,metricEnd=`${metric}1`),addMetricScale(scales,[metricStart,metricEnd]),scales))),addAreaMarks=(0,immer.jM)(((marks,props)=>{const{name,color,colorScheme,metric,dimension,scaleType,opacity,children}=props;let{metricStart,metricEnd}=props,isStacked=!1;return metricEnd&&metricStart||(isStacked=!0,metricStart=`${metric}0`,metricEnd=`${metric}1`),marks.push({name:`${name}_group`,type:"group",from:{facet:{name:`${name}_facet`,data:constants.H5,groupby:color}},marks:[getAreaMark({name,color,colorScheme,children,metricStart,metricEnd,isStacked,dimension,scaleType,opacity}),...getAnchorPointMark(props)]},...getSelectedAreaMarks({children,name,scaleType,color,dimension,metricEnd,metricStart}),...getHoverMarks(props)),marks})),getAnchorPointMark=({children,name,dimension,metric,scaleType})=>children.length?[{name:`${name}_anchorPoint`,type:"symbol",from:{data:`${name}_highlightedDataPoint`},interactive:!1,encode:{enter:{y:{scale:"yLinear",field:`${metric}1`},stroke:{value:"transparent"},fill:{value:"transparent"}},update:{x:getX(scaleType,dimension)}}}]:[],getHoverMarks=({children,name,dimension,metric,color,scaleType})=>children.length?[{name:`${name}_rule`,type:"rule",from:{data:`${name}_highlightedDataPoint`},interactive:!1,encode:{enter:{y:{value:0},y2:{signal:"height"},strokeWidth:{value:1}},update:{x:getX(scaleType,dimension)}}},{name:`${name}_point`,type:"symbol",from:{data:`${name}_highlightedDataPoint`},interactive:!1,encode:{enter:{y:{scale:"yLinear",field:`${metric}1`},stroke:{scale:constants.Tj,field:color},fill:{signal:constants.b3}},update:{x:getX(scaleType,dimension)}}}]:[],getSelectedAreaMarks=({children,name,scaleType,color,dimension,metricEnd,metricStart})=>children.some((child=>child.type===ChartPopover))?[{name:`${name}_selectBorder`,type:"area",from:{data:`${name}_selectedDataSeries`},interactive:!1,encode:{enter:{y:{scale:"yLinear",field:metricStart},y2:{scale:"yLinear",field:metricEnd},fill:{scale:constants.Tj,field:color},stroke:{value:spectrumColors_namespaceObject.light["static-blue"]},strokeWidth:{value:2},strokeJoin:{value:"round"}},update:{x:getX(scaleType,dimension)}}}]:[],getAxisAnnotationDetailData=(name,options,colorScheme)=>({name:`${name}_details`,values:options.map((option=>({...option,color:getColorValue(option.color,colorScheme)})))}),getAxisAnnotationAggregateData=(name,dataKey,color,colorScheme)=>({name:`${name}_aggregate`,source:constants.H5,transform:[{type:"filter",expr:`datum.${dataKey}`},{type:"flatten",fields:[dataKey],as:[`${name}_id`]},{type:"aggregate",groupby:[`${name}_id`],fields:["datetime","datetime"],ops:["min","max"]},{type:"formula",expr:"datum.max_datetime - datum.min_datetime",as:"width"},{type:"formula",expr:"datum.width / 2 + datum.min_datetime",as:"center"},{type:"aggregate",groupby:["center"],fields:["min_datetime","max_datetime","width",dataKey,dataKey],ops:["min","max","max","count","values"],as:["lower","upper","width","number","annotations"]},{type:"formula",expr:`datum.annotations[0].${name}_id`,as:"id"},{type:"lookup",from:`${name}_details`,key:"id",values:["color"],fields:["id"]},{type:"formula",expr:`datum.number > 1 || datum.color == null ? '${getColorValue(color,colorScheme)}' : datum.color`,as:"color"}]}),getAxisAnnotationSummaryData=(name,dataKey,color,colorScheme)=>({name:`${name}_summary`,source:constants.H5,transform:[{type:"filter",expr:`datum.${dataKey}`},{type:"flatten",fields:[dataKey],as:[`${name}_id`]},{type:"aggregate",groupby:[`${name}_id`]},{type:"aggregate",groupby:["center"],fields:[dataKey,dataKey],ops:["count","values"],as:["number","annotations"]},{type:"formula",expr:`datum.annotations[0].${name}_id`,as:"id"},{type:"lookup",from:`${name}_details`,key:"id",values:["color"],fields:["id"]},{type:"formula",expr:`datum.number > 1 || datum.color == null ? '${getColorValue(color,colorScheme)}' : datum.color`,as:"color"}]}),getAxisAnnotationRangeData=name=>({name:`${name}_range`,source:`${name}_aggregate`,transform:[{type:"filter",expr:`${name}_highlighted && datum.center == ${name}_highlighted.center && ${name}_highlighted.width > 0`}]}),getHighlightAxisAnnotationSignal=name=>({name:`${name}_highlighted`,value:null,on:[{events:`@${name}_icon:mouseover`,update:"datum"},{events:`@${name}_icon:mouseout`,update:`${name}_clicked`}]}),getClickAxisAnnotationSignal=name=>({name:`${name}_clicked`,value:{},on:[{events:{markname:`${name}_icon`,type:"mousedown",between:[{type:"mousedown"},{type:"mouseup"}]},update:"datum"},{events:"window:mouseup",update:"{}"}]}),getSelectAxisAnnotationSignal=name=>({name:`${name}_selected`,update:`${name}_clicked.center`}),getAxisAnnotationSummaryMarks=({children,name,offset})=>({name:`${name}_group`,type:"group",from:{data:`${name}_summary`},marks:[{name:`${name}_icon`,type:"path",from:{data:`${name}_summary`},zindex:2,encode:{enter:{stroke:{value:"transparent"},strokeWidth:{value:2},cursor:getCursor(children)},update:{path:{signal:`'${svgPaths.gM}'`},fill:{field:"color"},xc:{signal:"width - 12"},yc:{signal:`height + ${offset}`}}}}]}),getAxisAnnotationSpanMarks=({children,name,offset},scaleName)=>({name:`${name}_group`,type:"group",marks:[{name:`${name}_range`,type:"group",marks:[{type:"rect",from:{data:`${name}_range`},encode:{update:{x:{scale:scaleName,field:"lower",band:.5},y:{signal:`height + ${offset}`},width:{value:2},height:{value:-4},fill:{field:"color"},fillOpacity:{signal:`${name}_selected ? 1.0 : 0.2`}}}},{type:"rect",from:{data:`${name}_range`},encode:{update:{x:{scale:scaleName,field:"lower",band:.5},y:{signal:`height + ${offset}`},x2:{scale:scaleName,field:"upper",band:.5},height:{value:2},fill:{field:"color"},fillOpacity:{signal:`${name}_selected ? 1.0 : 0.2`}}}},{type:"rect",from:{data:`${name}_range`},encode:{update:{x:{scale:scaleName,field:"upper",band:.5},y:{signal:`height + ${offset} + 2`},width:{value:2},height:{value:-6},fill:{field:"color"},fillOpacity:{signal:`${name}_selected ? 1.0 : 0.2`}}}}]},{name:`${name}_icon`,type:"path",from:{data:`${name}_aggregate`},encode:{enter:{stroke:{value:"transparent"},strokeWidth:{value:2},cursor:getCursor(children)},update:{path:{signal:`datum.width > 0 ? '${svgPaths.jc}' : '${svgPaths.gM}'`},fill:{field:"color"},xc:{scale:scaleName,field:"center",band:.5},yc:{signal:`height + ${offset}`},fillOpacity:{signal:`(${name}_selected && ${name}_selected != datum.center) ? 0.0 : 1.0`}}}}]}),getAxisAnnotationsFromChildren=({children,colorScheme,name:axisName,position,scaleType})=>{if("bottom"!==position)return[];return toArray(children).filter((child=>"object"==typeof child&&"type"in child&&child.type===AxisAnnotation)).map(((annotationElement,annotationIndex)=>applyDefaultAxisAnnotationProps(annotationElement.props,annotationIndex,axisName,colorScheme,scaleType)))},applyDefaultAxisAnnotationProps=({children,name,format,offset=constants.yA,color=constants.K9,dataKey="annotations",options=[]},annotationIndex,axisName,colorScheme,scaleType)=>({children:sanitizeAxisAnnotationChildren(children),color,colorScheme,dataKey,name:name??`${axisName}Annotation${annotationIndex}`,offset,options,axisName,format:format??("time"===scaleType?"span":"summary")}),getDefaultAxis=(axisProps,scaleName)=>{const{grid,hideDefaultLabels,labelAlign,labelFontWeight,labelOrientation,position,scaleType,ticks,tickMinStep,title,vegaLabelAlign,vegaLabelBaseline,vegaLabelOffset,vegaLabelPadding}=axisProps;return{scale:scaleName,orient:position,grid,ticks,tickCount:getTickCount(position,grid),tickMinStep:"linear"!==scaleType?void 0:tickMinStep,title,labelAngle:getLabelAngle(labelOrientation),labelFontWeight,labelOffset:getLabelOffset(labelAlign,scaleName,vegaLabelOffset),labelPadding:vegaLabelPadding,labels:!hideDefaultLabels,...getLabelAnchorValues(position,labelOrientation,labelAlign,vegaLabelAlign,vegaLabelBaseline),encode:{labels:{update:{text:getLabelFormat(axisProps,scaleName)}}}}},getScale=(scales,position)=>{const applicableScales=scales.filter((s=>"range"in s&&s.range===getRange(position)));let scale;return scale=applicableScales.length>1?scales.find((s=>s.name.includes("Trellis")))??applicableScales[0]:applicableScales[0],scale||(scale={name:getDefaultScaleNameFromPosition(position),type:"linear",range:getRange(position)},scales.push(scale),scale)},getRange=position=>"left"===position||"right"===position?"height":"width",getOpposingRange=position=>"left"===position||"right"===position?"width":"height",axisUtils_isVerticalAxis=position=>["left","right"].includes(position),getDefaultScaleNameFromPosition=position=>axisUtils_isVerticalAxis(position)?"yLinear":"xLinear",getDefaultOpposingScaleNameFromPosition=position=>axisUtils_isVerticalAxis(position)?"xLinear":"yLinear",getTickCount=(position,grid)=>{if(!grid)return;return{signal:`clamp(ceil(${["top","bottom"].includes(position)?"width":"height"}/100), 2, 10)`}},hasSubLabels=({subLabels,labelOrientation})=>Boolean(subLabels.length&&"horizontal"===labelOrientation),getTimeLabelFormats=granularity=>{switch(granularity){case"minute":return["%-I:%M %p","%b %-d","minute"];case"hour":return["%-I %p","%b %-d","hour"];case"day":default:return["%-d","%b","day"];case"week":return["%-d","%b","week"];case"month":return["%b","%Y","month"];case"quarter":return["Q%q","%Y",{interval:"month",step:3}]}},getControlledLabelAnchorValues=(position,labelOrientaion,labelAlign)=>labelAlign?getLabelAnchor(position,labelOrientaion,labelAlign):{align:void 0,baseline:void 0},getLabelAnchorValues=(position,labelOrientaion,labelAlign,vegaLabelAlign,vegaLabelBaseline)=>{const{align,baseline}=getLabelAnchor(position,labelOrientaion,labelAlign);return{labelAlign:vegaLabelAlign??align,labelBaseline:vegaLabelBaseline??baseline}},getLabelAnchor=(position,labelOrientaion,labelAlign)=>{let align,baseline;if(labelIsParallelToAxis(position,labelOrientaion)){align={start:"left",center:"center",end:"right"}[labelAlign],baseline=["top","left"].includes(position)?"bottom":"top"}else{baseline={start:"top",center:"middle",end:"bottom"}[labelAlign],align=["bottom","left"].includes(position)?"right":"left"}return{align,baseline}},labelIsParallelToAxis=(position,labelOrientaion)=>(["top","bottom"].includes(position)?"horizontal":"vertical")===labelOrientaion,getLabelAngle=labelOrientaion=>"horizontal"===labelOrientaion?0:270,getLabelOffset=(labelAlign,scaleName,vegaLabelOffset)=>{if(void 0!==vegaLabelOffset)return vegaLabelOffset;switch(labelAlign){case"start":return{signal:`bandwidth('${scaleName}') / -2`};case"end":return{signal:`bandwidth('${scaleName}') / 2`};default:return}},getLabelFormat=({labelFormat,labelOrientation,numberFormat,position,truncateLabels},scaleName)=>"percentage"===labelFormat?[{test:"isNumber(datum.value)",signal:"format(datum.value, '~%')"},{signal:"datum.value"}]:"duration"===labelFormat?{signal:"formatTimeDurationLabels(datum)"}:[...getLabelNumberFormat(numberFormat),...truncateLabels&&scaleName.includes("Band")&&labelIsParallelToAxis(position,labelOrientation)?[{signal:'truncateText(datum.value, bandwidth("xBand")/(1- paddingInner), "normal", 14)'}]:[{signal:"datum.value"}]],getLabelNumberFormat=numberFormat=>{const test="isNumber(datum.value)";if("shortNumber"===numberFormat)return[{test:`${test} && abs(datum.value) >= 1000`,signal:"upper(replace(format(datum.value, '.3~s'), /(\\d+)G/, '$1B'))"}];if("shortCurrency"===numberFormat)return[{test:`${test} && abs(datum.value) >= 1000`,signal:"upper(replace(format(datum.value, '$.3~s'), /(\\d+)G/, '$1B'))"},{test,signal:"format(datum.value, '$')"}];const d3FormatSpecifier=(numberFormat=>{switch(numberFormat){case"currency":return"$,.2f";case"standardNumber":return",";default:return numberFormat}})(numberFormat);return[{test,signal:`format(datum.value, '${d3FormatSpecifier}')`}]},getAxisLabelsEncoding=(labelAlign,labelFontWeight,labelKey,labelOrientation,position,signalName)=>({update:{text:[{test:`indexof(pluck(${signalName}, 'value'), datum.value) !== -1`,signal:`${signalName}[indexof(pluck(${signalName}, 'value'), datum.value)].${labelKey}`},{signal:"datum.value"}],fontWeight:[{test:`indexof(pluck(${signalName}, 'value'), datum.value) !== -1 && ${signalName}[indexof(pluck(${signalName}, 'value'), datum.value)].fontWeight`,signal:`${signalName}[indexof(pluck(${signalName}, 'value'), datum.value)].fontWeight`},{value:labelFontWeight}],...getEncodedLabelAnchor(position,signalName,labelOrientation,labelAlign)}}),getEncodedLabelAnchor=(position,signalName,labelOrientation,defaultLabelAlign)=>{const baseTestString=`indexof(pluck(${signalName}, 'value'), datum.value) !== -1 && ${signalName}[indexof(pluck(${signalName}, 'value'), datum.value)]`,baseSignalString=`${signalName}[indexof(pluck(${signalName}, 'value'), datum.value)]`,{align,baseline}=getLabelAnchor(position,labelOrientation,defaultLabelAlign);return{align:[{test:`${baseTestString}.align`,signal:`${baseSignalString}.align`},{value:align}],baseline:[{test:`${baseTestString}.baseline`,signal:`${baseSignalString}.baseline`},{value:baseline}]}},getReferenceLinesFromChildren=children=>toArray(children).filter((child=>"object"==typeof child&&"type"in child&&child.type===ReferenceLine.e)).map((referenceLineElement=>referenceLineElement.props)),scaleTypeSupportsReferenceLines=scaleType=>Boolean(scaleType&&["band","linear","point","time","utc"].includes(scaleType)),getPositionRule=({scaleType},{value,position},scaleName)=>{const signalValue="string"==typeof value?`'${value}'`:value,halfInnerPaddingFormula=`paddingInner * bandwidth('${scaleName}') / (2 * (1 - paddingInner))`;return"band"===scaleType?"before"===position?{signal:`scale('${scaleName}', ${signalValue}) - ${halfInnerPaddingFormula}`}:"after"===position?{signal:`scale('${scaleName}', ${signalValue}) + bandwidth('${scaleName}') + ${halfInnerPaddingFormula}`}:{signal:`scale('${scaleName}', ${signalValue}) + bandwidth('${scaleName}') / 2`}:{scale:scaleName,value}},getOrientation=position=>axisUtils_isVerticalAxis(position)?"y":"x",getReferenceLineRuleMark=({name,position,ticks},referenceLineIndex,positionRule)=>{const startOffset=ticks?9:0;return{name:`${name}_${getOrientation(position)}ReferenceLineRule${referenceLineIndex}`,type:"rule",interactive:!1,encode:{update:{...{top:{x:positionRule,y:{value:-startOffset},y2:{signal:"height"}},bottom:{x:positionRule,y:{value:0},y2:{signal:`height + ${startOffset}`}},left:{x:{value:-startOffset},x2:{signal:"width"},y:positionRule},right:{x:{value:0},x2:{signal:`width + ${startOffset}`},y:positionRule}}[position]}}}},getAdditiveMarkPositionProps=(offset,positionRule,horizontalOffset)=>({top:{x:positionRule,y:{value:-offset}},bottom:{x:positionRule,y:{signal:`height + ${offset}`}},left:{x:{value:-offset},y:{...positionRule,offset:horizontalOffset}},right:{x:{signal:`width + ${offset}`},y:{...positionRule,offset:horizontalOffset}}}),getReferenceLineSymbolMark=({colorScheme,name,position},{icon},referenceLineIndex,positionRule)=>{if(!icon)return[];const orientation=getOrientation(position),positionProps=getAdditiveMarkPositionProps(24,positionRule);return[{name:`${name}_${orientation}ReferenceLineSymbol${referenceLineIndex}`,type:"symbol",encode:{enter:{shape:{value:getPathFromIcon(icon)},size:{value:324},fill:{value:getColorValue("gray-900",colorScheme)}},update:{...positionProps[position]}}}]},getReferenceLineTextMark=({name,position},{label,icon,labelFontWeight},referenceLineIndex,positionRule)=>{if(!label)return[];return[{name:`${name}_${getOrientation(position)}ReferenceLineLabel${referenceLineIndex}`,type:"text",encode:{...getReferenceLineLabelsEncoding(labelFontWeight,label,position,positionRule,icon)}}]},getReferenceLineLabelsEncoding=(labelFontWeight,label,position,positionRule,icon)=>{const VERTICAL_OFFSET=icon?48:26,HORIZONTAL_OFFSET=axisUtils_isVerticalAxis(position)&&icon?24:12,positionProps=getAdditiveMarkPositionProps(VERTICAL_OFFSET,positionRule,HORIZONTAL_OFFSET);return{update:{text:[{value:label}],fontWeight:[{value:labelFontWeight||constants.m7}],...getEncodedLabelBaselineAlign(position),...positionProps[position]}}},getEncodedLabelBaselineAlign=position=>{switch(position){case"top":case"bottom":return{align:{value:"center"}};case"left":case"right":return{baseline:{value:"center"}}}},isTrellisedChart=spec=>/[xy]TrellisGroup/g.test(JSON.stringify(spec)),getTrellisAxisProps=scaleName=>{let trellisAxisProps={};if(scaleName.includes("TrellisBand")){const labelOffsetSignal=`bandwidth('${scaleName}') / -2`,axisType="x"===scaleName[0]?"x":"y";trellisAxisProps={position:"x"===axisType?"top":"left",labelFontWeight:"bold",labelAlign:void 0,title:void 0,vegaLabelAlign:"left",vegaLabelBaseline:"bottom",vegaLabelOffset:"x"===axisType?{signal:labelOffsetSignal}:{signal:`${labelOffsetSignal} - 8`},vegaLabelPadding:"x"===axisType?8:0}}return trellisAxisProps},getTrellisGroupProperties=groupMark=>{const trellisScaleName=`${(groupMark.name??"x")[0]}TrellisBand`,fromFacet=groupMark.from;return{facetGroupBy:fromFacet.facet.groupby,facetName:fromFacet.facet.name,trellisScaleName}},addAxis=(0,immer.jM)(((spec,{baseline=!1,baselineOffset=0,children,colorScheme=constants.gb,granularity=constants.HJ,grid=!1,hideDefaultLabels=!1,index=0,labelAlign=constants.hg,labelFontWeight=constants.m7,labelOrientation=constants.uv,labels=[],numberFormat="shortNumber",position,range,subLabels=[],ticks=!1,...props})=>{const scale=getScale(spec.scales??[],position),{name:scaleName,type:scaleType}=scale,opposingScaleType=((scales,position)=>{let scale=scales.find((s=>"range"in s&&s.range===getOpposingRange(position)));return scale||(scale={name:getDefaultOpposingScaleNameFromPosition(position),type:"linear",range:getOpposingRange(position)},scales.push(scale)),scale.type})(spec.scales??[],position),axisProps={baseline,baselineOffset,children:sanitizeAxisChildren(children),colorScheme,granularity,grid,hideDefaultLabels,index,labelAlign,labelFontWeight,labelOrientation,labels,name:`axis${index}`,numberFormat,position,range,subLabels,ticks,scaleType:scaleType??"linear",...props};return spec.data=addAxisData(spec.data??[],{...axisProps,scaleType:scaleType??"linear"}),spec.signals=addAxisSignals(spec.signals??[],axisProps),!range||"linear"!==scaleType&&"time"!==scaleType||(scale.domain=range),spec.axes=addAxes(spec.axes??[],{...axisProps,scaleName,opposingScaleType,grid:axisProps.grid&&!isTrellisedChart(spec)}),spec.marks=addAxesMarks(spec.marks??[],{...axisProps,scaleName,opposingScaleType}),spec})),addAxisData=(0,immer.jM)(((data,props)=>{getAxisAnnotationsFromChildren(props).forEach((annotationProps=>{((data,{name,dataKey,color,colorScheme,options,format})=>{data.push(getAxisAnnotationDetailData(name,options,colorScheme)),"summary"===format?data.push(getAxisAnnotationSummaryData(name,dataKey,color,colorScheme)):data.push(getAxisAnnotationAggregateData(name,dataKey,color,colorScheme),getAxisAnnotationRangeData(name))})(data,annotationProps)}))})),addAxisSignals=(0,immer.jM)(((signals,props)=>{const{name,labels,position,subLabels,labelOrientation}=props;labels?.length&&signals.push(getGenericSignal(`${name}_labels`,getLabelSignalValue(labels,position,labelOrientation))),hasSubLabels(props)&&signals.push(getGenericSignal(`${name}_subLabels`,subLabels.map((label=>({...label,...getControlledLabelAnchorValues(position,labelOrientation,label.align)})))));getAxisAnnotationsFromChildren(props).forEach((annotationProps=>{((signals,{name,format})=>{"span"===format&&signals.push(getHighlightAxisAnnotationSignal(name),getClickAxisAnnotationSignal(name),getSelectAxisAnnotationSignal(name))})(signals,annotationProps)}))})),getLabelSignalValue=(labels,position,labelOrientation)=>labels.map((label=>{if("object"==typeof label)return{...label,...getControlledLabelAnchorValues(position,labelOrientation,label.align)}})).filter(Boolean),addAxes=(0,immer.jM)(((axes,{scaleName,opposingScaleType,...axisProps})=>{const newAxes=[];axisProps={...axisProps,...getTrellisAxisProps(scaleName)};const{baseline,labelAlign,labelFontWeight,labelFormat,labelOrientation,name,position}=axisProps;if("time"===labelFormat)newAxes.push(...((scaleName,{granularity,grid,labelAlign,labelFontWeight,labelOrientation,position,ticks,title,vegaLabelAlign,vegaLabelBaseline})=>{const[secondaryFormat,primaryFormat,tickGranularity]=getTimeLabelFormats(granularity);return[{scale:scaleName,orient:position,grid,ticks,tickCount:scaleName.includes("Time")?tickGranularity:void 0,title,format:secondaryFormat,formatType:"time",labelAngle:getLabelAngle(labelOrientation),labelSeparation:12,...getLabelAnchorValues(position,labelOrientation,labelAlign,vegaLabelAlign,vegaLabelBaseline)},{scale:scaleName,orient:position,format:primaryFormat,tickCount:scaleName.includes("Time")?tickGranularity:void 0,formatType:"time",labelOverlap:"greedy",labelFontWeight,labelAngle:getLabelAngle(labelOrientation),...getLabelAnchorValues(position,labelOrientation,labelAlign,vegaLabelAlign,vegaLabelBaseline),encode:{labels:{enter:{dy:{value:(ticks?28:20)*("top"===position?-1:1)}},update:{text:{signal:"formatPrimaryTimeLabels(datum)"}}}}}]})(scaleName,axisProps));else{const axis=getDefaultAxis(axisProps,scaleName);if(axisProps.labels.length){const labels=axisProps.labels,signalName=`${name}_labels`;axis.values=labels.map((label=>(label=>"object"==typeof label?label.value:label)(label))),axis.encode={labels:getAxisLabelsEncoding(labelAlign,labelFontWeight,"label",labelOrientation,position,signalName)}}hasSubLabels(axisProps)&&(axis.titlePadding=24,newAxes.push(((axisProps,scaleName)=>{const{labelAlign,labelFontWeight,labelOrientation,name,position,ticks}=axisProps,signalName=`${name}_subLabels`,subLabelValues=axisProps.subLabels.map((label=>label.value));let subLabelAxis=getDefaultAxis(axisProps,scaleName);return subLabelAxis={...subLabelAxis,domain:!1,domainWidth:void 0,grid:!1,labelPadding:ticks?32:24,ticks:!1,title:void 0,values:subLabelValues.length?subLabelValues:void 0,encode:{labels:{...getAxisLabelsEncoding(labelAlign,labelFontWeight,"subLabel",labelOrientation,position,signalName)}}},subLabelAxis})(axisProps,scaleName))),newAxes.unshift(axis)}if("linear"!==opposingScaleType&&(newAxes[0]=function setAxisBaseline(axis,baseline=!1){return{...axis,domain:baseline,domainWidth:2}}(newAxes[0],baseline)),scaleTypeSupportsReferenceLines(axisProps.scaleType)){getReferenceLinesFromChildren(axisProps.children).forEach((referenceLineProps=>{const{label:referenceLineLabel,icon,value,position:linePosition}=referenceLineProps,text=newAxes[0].encode?.labels?.update?.text;!icon&&!referenceLineLabel||!text||!Array.isArray(text)||linePosition&&"center"!==linePosition||text.unshift({test:`abs(scale('${scaleName}', ${value}) - scale('${scaleName}', datum.value)) < 30`,value:""})}))}getAxisAnnotationsFromChildren(axisProps).forEach((annotationProps=>{((axes,{offset},scaleName)=>{axes.push({scale:scaleName,orient:"bottom",values:[],offset})})(newAxes,annotationProps,scaleName)})),axes.push(...newAxes)})),addAxesMarks=(0,immer.jM)(((marks,props)=>{const{baseline,baselineOffset,children,opposingScaleType,position,scaleName,scaleType}=props;if(scaleTypeSupportsReferenceLines(scaleType)){getReferenceLinesFromChildren(children).forEach(((referenceLineProps,referenceLineIndex)=>{const referenceLineMarks=((axisProps,referenceLineProps,referenceLineIndex,scaleName)=>{const positionRule=getPositionRule(axisProps,referenceLineProps,scaleName);return[getReferenceLineRuleMark(axisProps,referenceLineIndex,positionRule),...getReferenceLineSymbolMark(axisProps,referenceLineProps,referenceLineIndex,positionRule),...getReferenceLineTextMark(axisProps,referenceLineProps,referenceLineIndex,positionRule)]})(props,referenceLineProps,referenceLineIndex,scaleName);marks.push(...referenceLineMarks)}))}const trellisGroupMark=marks.find((mark=>mark.name?.includes("Trellis"))),isTrellised=Boolean(trellisGroupMark);baseline&&"linear"===opposingScaleType&&function addBaseline(marks,baselineOffset,position,trellisGroupMark){const baselineRule=((baselineOffset,position)=>{const orientation=axisUtils_isVerticalAxis(position)?"y":"x";return{name:`${orientation}Baseline`,type:"rule",interactive:!1,encode:{update:{...{x:{x:{value:0},x2:{signal:"width"},y:{scale:"yLinear",value:baselineOffset}},y:{x:{scale:"xLinear",value:baselineOffset},y:{value:0},y2:{signal:"height"}}}[orientation]}}}})(baselineOffset,position);trellisGroupMark&&"marks"in trellisGroupMark?0===baselineOffset?trellisGroupMark.marks?.push(baselineRule):trellisGroupMark.marks?.unshift(baselineRule):0===baselineOffset?marks.push(baselineRule):marks.unshift(baselineRule)}(marks,baselineOffset,position,trellisGroupMark),isTrellised&&function addAxesToTrellisGroup(props,trellisGroupMark,scaleName){const trellisOrientation=trellisGroupMark.name?.startsWith("x")?"horizontal":"vertical",axisOrientation="bottom"===props.position||"top"===props.position?"horizontal":"vertical",hideDefaultLabels=props.hideDefaultLabels||trellisOrientation!==axisOrientation;let scaleType=props.scaleType;if(trellisOrientation===axisOrientation){const scale=getScale(trellisGroupMark.scales??[],props.position);scaleName=scale.name,scaleType=scale.type??"linear"}else props.title=void 0;let newAxes=addAxes([],{...props,hideDefaultLabels,scaleName,scaleType});newAxes=((axes,trellisGroupMark)=>{const{facetName,facetGroupBy,trellisScaleName}=getTrellisGroupProperties(trellisGroupMark);return axes.map((axis=>axis.title?{...axis,encode:{...axis.encode,title:{update:{opacity:[{test:`info(domain('${trellisScaleName}')[0] === data('${facetName}')[0].${facetGroupBy})`,value:1},{value:0}]}}}}:axis))})(newAxes,trellisGroupMark),trellisGroupMark.axes=[...trellisGroupMark.axes??[],...newAxes]}(props,trellisGroupMark,scaleName);getAxisAnnotationsFromChildren(props).forEach((annotationProps=>{((marks,axisAnnotationProps,scaleName)=>{const{format}=axisAnnotationProps;"summary"===format?marks.push(getAxisAnnotationSummaryMarks(axisAnnotationProps)):marks.push(getAxisAnnotationSpanMarks(axisAnnotationProps,scaleName))})(marks,annotationProps,scaleName)}))}));const getStackedBackgroundBar=props=>{const{name}=props;return{name:`${name}_background`,type:"rect",from:{data:barUtils_isDodgedAndStacked(props)?`${name}_facet`:getBaseDataSourceName(props)},interactive:!1,encode:{enter:{...getBaseBarEnterEncodings(props),fill:{signal:constants.b3}},update:{...getStackedDimensionEncodings(props)}}}},getStackedBar=props=>{const{children,name}=props;return{name,type:"rect",from:{data:barUtils_isDodgedAndStacked(props)?`${name}_facet`:getBaseDataSourceName(props)},interactive:getInteractive(children),encode:{enter:{...getBaseBarEnterEncodings(props),...getBarEnterEncodings(props)},update:{...getStackedDimensionEncodings(props),...getBarUpdateEncodings(props)}}}},getStackedDimensionEncodings=props=>{const{dimension,orientation}=props;if(barUtils_isDodgedAndStacked(props))return barUtils_getDodgedDimensionEncodings(props);const{dimensionAxis,rangeScale,dimensionScaleKey}=getOrientationProperties(orientation);return{[dimensionAxis]:{scale:dimensionScaleKey,field:dimension},[rangeScale]:{scale:dimensionScaleKey,band:1}}},getBaseDataSourceName=props=>isTrellised(props)?getTrellisProperties(props).facetName:constants.H5,addBar=(0,immer.jM)(((spec,{children,color={value:"categorical-100"},colorScheme=constants.gb,dimension=constants.w4,index=0,lineType={value:"solid"},lineWidth=0,metric=constants.bA,name,opacity={value:1},orientation="vertical",paddingRatio=constants.WN,trellisOrientation="horizontal",trellisPadding=constants.Om,type="stacked",...props})=>{const barProps={children:sanitizeMarkChildren(children),orientation,color,colorScheme,dimension,index,lineType,lineWidth,metric,name:toCamelCase(name||`bar${index}`),opacity,paddingRatio,trellisOrientation,trellisPadding,type,...props};spec.data=barSpecBuilder_addData(spec.data??[],barProps),spec.signals=barSpecBuilder_addSignals(spec.signals??[],barProps),spec.scales=addScales(spec.scales??[],barProps),spec.marks=addMarks(spec.marks??[],barProps)})),barSpecBuilder_addSignals=(0,immer.jM)(((signals,{children,name,paddingRatio,paddingOuter:barPaddingOuter})=>{const{paddingInner}=getBarPadding(paddingRatio,barPaddingOuter);signals.push(getGenericSignal("paddingInner",paddingInner)),children.length&&addHighlightedItemSignalEvents(signals,name,1,getTooltipProps(children)?.excludeDataKeys)})),barSpecBuilder_addData=(0,immer.jM)(((data,props)=>{const{metric,order,type}=props,index=data.findIndex((d=>d.name===constants.H5));data[index].transform=data[index].transform??[],("stacked"===type||barUtils_isDodgedAndStacked(props))&&(data[index].transform?.push({type:"stack",groupby:getStackFields(props),field:metric,sort:getTransformSort(order),as:[`${metric}0`,`${metric}1`]}),data[index].transform?.push(getStackIdTransform(props)),data.push(getStackAggregateData(props))),("dodged"===type||barUtils_isDodgedAndStacked(props))&&data[index].transform?.push(getDodgeGroupTransform(props))})),getStackAggregateData=props=>{const{metric,name}=props;return{name:`${name}_stacks`,source:constants.H5,transform:[{type:"aggregate",groupby:getStackFields(props),fields:[`${metric}1`,`${metric}1`],ops:["min","max"]},getStackIdTransform(props)]}},getStackIdTransform=props=>({type:"formula",as:constants.Xz,expr:getStackFields(props).map((facet=>`datum.${facet}`)).join(' + "," + ')}),getStackFields=({trellis,color,dimension,lineType,opacity,type})=>{const{facets,secondaryFacets}=getFacetsFromProps({color,lineType,opacity});return[...trellis?[trellis]:[],dimension,..."dodged"===type?facets:[],..."stacked"===type?secondaryFacets:[]]},getDodgeGroupTransform=({color,lineType,name,opacity,type})=>{const{facets,secondaryFacets}=getFacetsFromProps({color,lineType,opacity});return{type:"formula",as:`${name}_dodgeGroup`,expr:("dodged"===type?facets:secondaryFacets).map((facet=>`datum.${facet}`)).join(' + "," + ')}},addScales=(0,immer.jM)(((scales,props)=>{const{color,lineType,opacity,orientation}=props;addMetricScale(scales,getScaleValues(props),"vertical"===orientation?"y":"x"),addDimensionScale(scales,props),((scales,props)=>{if(!props.trellis)return;const{scaleName,rangeScale,paddingInner}=getTrellisProperties(props),trellisScaleIndex=getScaleIndexByName(scales,scaleName,"band");scales[trellisScaleIndex]=addDomainFields(scales[trellisScaleIndex],[props.trellis]),scales[trellisScaleIndex]={...scales[trellisScaleIndex],range:rangeScale,paddingInner}})(scales,props),addFieldToFacetScaleDomain(scales,constants.Tj,color),addFieldToFacetScaleDomain(scales,constants.Ze,lineType),addFieldToFacetScaleDomain(scales,constants.$M,opacity),addSecondaryScales(scales,props)})),addDimensionScale=(scales,{dimension,paddingRatio,paddingOuter:barPaddingOuter,orientation})=>{const index=getScaleIndexByType(scales,"band","vertical"===orientation?"x":"y");scales[index]=addDomainFields(scales[index],[dimension]);const{paddingInner,paddingOuter}=getBarPadding(paddingRatio,barPaddingOuter);scales[index]={...scales[index],paddingInner,paddingOuter}},addSecondaryScales=(scales,props)=>{const{color,lineType,opacity}=props;barUtils_isDodgedAndStacked(props)&&[{value:color,scaleName:"colors",secondaryScaleName:"secondaryColor"},{value:lineType,scaleName:"lineTypes",secondaryScaleName:"secondaryLineType"},{value:opacity,scaleName:"opacities",secondaryScaleName:"secondaryOpacity"}].forEach((({value,scaleName,secondaryScaleName})=>{if(Array.isArray(value)&&2===value.length){const secondaryIndex=getScaleIndexByName(scales,secondaryScaleName,"ordinal");scales[secondaryIndex]=addDomainFields(scales[secondaryIndex],[value[1]]);const primaryIndex=getScaleIndexByName(scales,scaleName,"ordinal"),primaryScale=scales[primaryIndex];primaryScale.range={signal:scaleName},scales[primaryIndex]=addDomainFields(primaryScale,[value[0]])}}))},addMarks=(0,immer.jM)(((marks,props)=>{const barMarks=[];if(barUtils_isDodgedAndStacked(props)?barMarks.push((props=>{const marks=[];return marks.push(getStackedBackgroundBar(props)),marks.push(getStackedBar(props)),marks.push(...getAnnotationMarks(props,`${props.name}_facet`,`${props.name}_position`,`${props.name}_dodgeGroup`)),{...getDodgedGroupMark(props),marks}})(props)):"stacked"===props.type?barMarks.push(...(props=>{const marks=[];return marks.push(getStackedBackgroundBar(props)),marks.push(getStackedBar(props)),marks.push(...getAnnotationMarks(props,getBaseDataSourceName(props),getOrientationProperties(props.orientation).dimensionScaleKey,props.dimension)),marks})(props)):barMarks.push((props=>{const{children,name}=props;return{...getDodgedGroupMark(props),marks:[{name:`${name}_background`,from:{data:`${name}_facet`},type:"rect",interactive:!1,encode:{enter:{...getBaseBarEnterEncodings(props),fill:{signal:constants.b3}},update:{...barUtils_getDodgedDimensionEncodings(props)}}},{name,from:{data:`${name}_facet`},type:"rect",interactive:getInteractive(children),encode:{enter:{...getBaseBarEnterEncodings(props),...getBarEnterEncodings(props)},update:{...barUtils_getDodgedDimensionEncodings(props),...getBarUpdateEncodings(props)}}},...getAnnotationMarks(props,`${name}_facet`,`${name}_position`,`${name}_dodgeGroup`)]}})(props)),isTrellised(props)){const repeatedScale=getRepeatedScale(props);marks.push(((props,marks,repeatedScale)=>{const{trellisOrientation}=props,trellis=props.trellis,{markName,facetName,scaleName,axis:trellisAxis,rangeScale:trellisRangeScale}=getTrellisProperties(props);return{name:markName,type:"group",from:{facet:{data:constants.H5,name:facetName,groupby:trellis}},signals:[{name:trellisRangeScale,update:`bandwidth('${scaleName}')`}],encode:{enter:{[trellisAxis]:{scale:scaleName,field:trellis},height:{signal:"vertical"===trellisOrientation?`bandwidth('${scaleName}')`:"height"},width:{signal:"horizontal"===trellisOrientation?`bandwidth('${scaleName}')`:"width"}}},scales:[repeatedScale],marks}})(props,barMarks,repeatedScale))}else marks.push(...barMarks)})),getRepeatedScale=props=>{const{orientation,trellisOrientation}=props;return orientation===trellisOrientation?((metricKeys,metricAxis,chartOrientation)=>{let scale=getDefaultScale("linear",metricAxis,chartOrientation);return scale=addDomainFields(scale,metricKeys),scale})(getScaleValues(props),"vertical"===orientation?"y":"x",orientation):getDimensionScale(props)},getDimensionScale=({dimension,orientation,paddingRatio,paddingOuter:barPaddingOuter})=>{let scale=getDefaultScale("band","vertical"===orientation?"x":"y",orientation);scale=addDomainFields(scale,[dimension]);const{paddingInner,paddingOuter}=getBarPadding(paddingRatio,barPaddingOuter);return{...scale,paddingInner,paddingOuter}},getOpacityRules=(name,children)=>{const lowOpacity=1/constants.ux,opacityRules=[{test:`${constants.qE} && datum.${constants.i4} !== ${constants.qE}`,value:lowOpacity},{value:1}];return hasPopover(children)&&opacityRules.splice(1,0,{test:`${constants.sk} && datum.${constants.i4} !== ${constants.sk}`,value:lowOpacity}),opacityRules},getMetricNumberEncodeEnter=(metric,radius,holeRatio,showingLabel,isBoolean)=>({enter:{x:{signal:"width / 2"},y:{signal:"height / 2"},text:getMetricNumberText(metric,isBoolean),fontSize:getFontSize(radius,holeRatio,!0),align:{value:"center"},baseline:getAggregateMetricBaseline(radius,holeRatio,showingLabel)}}),getMetricNumberText=(metric,isBoolean)=>isBoolean?{signal:`format(datum['${metric}'], '.0%')`}:{signal:"upper(replace(format(datum.sum, '.3~s'), 'G', 'B'))"},getMetricLabelEncodeEnter=(radius,holeRatio,metricLabel)=>({enter:{x:{signal:"width / 2"},y:getLabelYWithOffset(radius,holeRatio),text:{value:metricLabel},fontSize:getFontSize(radius,holeRatio,!1),align:{value:"center"},baseline:{value:"top"}}}),fontBreakpoints=[76,64,52,40],metricNumberFontSizes=[72,60,48,36],metricLabelFontSizes=[24,18,12,0],getAggregateMetricBaseline=(radius,holeRatio,showingLabel)=>({signal:showingLabel?`${radius} * ${holeRatio} > ${fontBreakpoints[2]} ? 'alphabetic' : 'middle'`:"middle"}),getFontSize=(radius,holeRatio,isPrimaryText)=>[{test:`${radius} * ${holeRatio} > ${fontBreakpoints[0]}`,value:isPrimaryText?metricNumberFontSizes[0]:metricLabelFontSizes[0]},{test:`${radius} * ${holeRatio} > ${fontBreakpoints[1]}`,value:isPrimaryText?metricNumberFontSizes[1]:metricLabelFontSizes[1]},{test:`${radius} * ${holeRatio} > ${fontBreakpoints[2]}`,value:isPrimaryText?metricNumberFontSizes[2]:metricLabelFontSizes[2]},{test:`${radius} * ${holeRatio} > ${fontBreakpoints[3]}`,value:isPrimaryText?metricNumberFontSizes[3]:metricLabelFontSizes[3]},{value:0}],getLabelYWithOffset=(radius,holeRatio)=>{const openSpace=`${radius} * ${holeRatio}`;return{signal:"height / 2",offset:{signal:`${openSpace} > ${fontBreakpoints[0]} ? ${metricLabelFontSizes[0]} : ${openSpace} > ${fontBreakpoints[1]} ? ${metricLabelFontSizes[1]} : ${openSpace} > ${fontBreakpoints[2]} ? ${metricLabelFontSizes[2]} : 0`}}},getDirectLabelTextEntry=(radius,datumProperty,baselinePosition,format=!1)=>({text:getDisplayTextForLargeSlice(radius,datumProperty,format),x:{signal:"width / 2"},y:{signal:"height / 2"},radius:{signal:`${radius} + 15`},theta:{signal:"(datum['startAngle'] + datum['endAngle']) / 2"},fontSize:{value:14},width:{signal:`getLabelWidth(datum['${datumProperty}'], 'bold', '14') + 10`},align:{signal:"(datum['startAngle'] + datum['endAngle']) / 2 <= PI ? 'left' : 'right'"},baseline:{value:baselinePosition}}),getDisplayTextForLargeSlice=(radius,datumProperty,format,minArcLength=40)=>({signal:`if((${radius} * (datum['endAngle'] - datum['startAngle'])) < ${minArcLength}, '', ${format?`format(datum['${datumProperty}'], ',')`:`datum['${datumProperty}']`})`}),addDonut=(0,immer.jM)(((spec,{children,color=constants.OT,colorScheme=constants.gb,index=0,metric=constants.bA,name,startAngle=0,holeRatio=.85,hasDirectLabels=!1,isBoolean=!1,...props})=>{const donutProps={children:sanitizeMarkChildren(children),colorScheme,index,color,metric,name:toCamelCase(name??`donut${index}`),startAngle,holeRatio,hasDirectLabels,isBoolean,...props};spec.data=donutSpecBuilder_addData(spec.data??[],donutProps),spec.scales=donutSpecBuilder_addScales(spec.scales??[],donutProps),spec.marks=donutSpecBuilder_addMarks(spec.marks??[],donutProps),spec.signals=donutSpecBuilder_addSignals(spec.signals??[],donutProps)})),donutSpecBuilder_addData=(0,immer.jM)(((data,props)=>{const{metric,startAngle,name,isBoolean}=props,filteredTableIndex=data.findIndex((d=>d.name===constants.H5));data[filteredTableIndex].transform=data[filteredTableIndex].transform??[],data[filteredTableIndex].transform?.push({type:"pie",field:metric,startAngle,endAngle:{signal:`${startAngle} + 2 * PI`}}),isBoolean?data.push({name:`${name}_booleanData`,source:constants.H5,transform:[{type:"window",ops:["row_number"],as:[`${name}_rscRowIndex`]},{type:"filter",expr:`datum.${name}_rscRowIndex === 1`}]}):data.push({name:`${name}_aggregateData`,source:constants.H5,transform:[{type:"aggregate",fields:[metric],ops:["sum"],as:["sum"]}]})})),donutSpecBuilder_addScales=(0,immer.jM)(((scales,props)=>{const{color}=props;addFieldToFacetScaleDomain(scales,constants.Tj,color)})),donutSpecBuilder_addMarks=(0,immer.jM)(((marks,props)=>{const{holeRatio,name,metricLabel,metric,segment,hasDirectLabels,isBoolean,children}=props,radius="min(width, height) / 2";if(marks.push(((name,holeRatio,radius,children)=>({type:"arc",name,from:{data:constants.H5},encode:{enter:{fill:{scale:constants.Tj,field:"id"},x:{signal:"width / 2"},y:{signal:"height / 2"},tooltip:getTooltip(children,name)},update:{startAngle:{field:"startAngle"},endAngle:{field:"endAngle"},padAngle:{value:.01},innerRadius:{signal:`${holeRatio} * ${radius}`},outerRadius:{signal:radius},fillOpacity:getOpacityRules(name,children)}}}))(name,holeRatio,radius,children)),isBoolean)marks.push(((name,metric,radius,holeRatio,metricLabel)=>{const groupMark={type:"group",name:`${name}_percentText`,marks:[{type:"text",name:`${name}_percentMetricNumber`,from:{data:`${name}_booleanData`},encode:getMetricNumberEncodeEnter(metric,radius,holeRatio,!!metricLabel,!0)}]};return metricLabel&&groupMark.marks.push({type:"text",name:`${name}_percentMetricLabel`,from:{data:`${name}_booleanData`},encode:getMetricLabelEncodeEnter(radius,holeRatio,metricLabel)}),groupMark})(name,metric,radius,holeRatio,metricLabel));else if(marks.push(((name,metric,radius,holeRatio,metricLabel)=>{const groupMark={type:"group",name:`${name}_aggregateText`,marks:[{type:"text",name:`${name}_aggregateMetricNumber`,from:{data:`${name}_aggregateData`},encode:getMetricNumberEncodeEnter(metric,radius,holeRatio,!!metricLabel,!1)}]};return metricLabel&&groupMark.marks.push({type:"text",name:`${name}_aggregateMetricLabel`,from:{data:`${name}_aggregateData`},encode:getMetricLabelEncodeEnter(radius,holeRatio,metricLabel)}),groupMark})(name,metric,radius,holeRatio,metricLabel)),hasDirectLabels){if(!segment)throw new Error("If a Donut chart hasDirectLabels, a segment property name must be supplied.");marks.push(((name,radius,metric,segment)=>({name:`${name}_directLabels`,type:"group",marks:[{type:"text",name:`${name}_directLabelSegment`,from:{data:constants.H5},encode:{enter:getDirectLabelTextEntry(radius,segment,"bottom")}},{type:"text",name:`${name}_directLabelMetric`,from:{data:constants.H5},encode:{enter:getDirectLabelTextEntry(radius,metric,"top",!0)}}]}))(name,radius,metric,segment))}})),donutSpecBuilder_addSignals=(0,immer.jM)(((signals,props)=>{const{name,children}=props;hasInteractiveChildren(children)&&addHighlightedItemSignalEvents(signals,name,1,getTooltipProps(children)?.excludeDataKeys)})),setHoverOpacityForMarks=(marks,keys,name)=>{if(!marks.length)return;flattenMarks(marks).filter(markUsesSeriesColorScale).forEach((mark=>{mark.encode||(mark.encode={update:{}}),mark.encode.update||(mark.encode.update={});const{update}=mark.encode,{opacity}=update;if(void 0!==opacity){const opacityRule=getOpacityRule(opacity),highlightOpacityRule=getHighlightOpacityRule(opacityRule,keys,name);Array.isArray(update.opacity)||(update.opacity=[]);const opacityRuleInsertIndex=Math.max(update.opacity.length-1,0);update.opacity.splice(opacityRuleInsertIndex,0,highlightOpacityRule)}}))},getOpacityRule=opacityRule=>{if(opacityRule){if(!Array.isArray(opacityRule))return opacityRule;if(opacityRule.length>0)return opacityRule[opacityRule.length-1]}return{value:1}},getHighlightOpacityRule=(opacityRule,keys,name)=>{let test=`${constants.gG} && ${constants.gG} !== datum.${constants.y4}`;return keys&&(test=`${name}_highlight && ${name}_highlight !== datum.${keys[0]}`),"scale"in opacityRule&&"field"in opacityRule?{test,signal:`scale('${opacityRule.scale}', datum.${opacityRule.field}) / ${constants.ux}`}:"signal"in opacityRule?{test,signal:`${opacityRule.signal} / ${constants.ux}`}:"value"in opacityRule&&"number"==typeof opacityRule.value?{test,value:opacityRule.value/constants.ux}:{test,value:1/constants.ux}},markUsesSeriesColorScale=mark=>{const enter=mark.encode?.enter;if(!enter)return!1;const{fill,stroke}=enter;return!(!fill||!("scale"in fill)||fill.scale!==constants.Tj)||(!!(fill&&"signal"in fill&&fill.signal.includes("scale('colors',"))||!(!stroke||!("scale"in stroke)||stroke.scale!==constants.Tj))},flattenMarks=marks=>{let result=marks;for(const mark of marks)isGroupMark(mark)&&mark.marks&&(result=[...result,...flattenMarks(mark.marks)]);return result},isGroupMark=mark=>"group"===mark.type,facetScaleNames=[constants.Tj,constants.Ze,constants.VQ,constants.$M,"secondaryColor","secondaryLineType","secondaryOpacity","secondarySymbolShape",constants.SJ,constants.iJ],scaleHasKey=(scale,keys)=>scale.domain.fields.some((field=>keys.includes(field.toString()))),isScaleWithMultiFields=scale=>Boolean("domain"in scale&&scale.domain&&"fields"in scale.domain);var cjs=__webpack_require__("./node_modules/deepmerge/dist/cjs.js"),cjs_default=__webpack_require__.n(cjs);const getColumns=position=>{if(!["left","right"].includes(position))return{signal:"floor(width / 220)"}},getHiddenEntriesFilter=(hiddenEntries,name)=>hiddenEntries.length?[{type:"filter",expr:`indexof(${JSON.stringify(hiddenEntries)}, datum.${name}Entries) === -1`}]:[],getEncodings=(facets,legendProps)=>{const symbolEncodings=getSymbolEncodings(facets,legendProps),hoverEncodings=getHoverEncodings(facets,legendProps),legendLabelsEncodings=getLegendLabelsEncodings(legendProps.legendLabels),showHideEncodings=getShowHideEncodings(legendProps);return mergeLegendEncodings([symbolEncodings,legendLabelsEncodings,hoverEncodings,showHideEncodings])},getLegendLabelsEncodings=legendLabels=>legendLabels?{labels:{update:{text:[{test:"indexof(pluck(legendLabels, 'seriesName'), datum.value) > -1",signal:"legendLabels[indexof(pluck(legendLabels, 'seriesName'), datum.value)].label"},{signal:"datum.value"}]}}}:{},getHoverEncodings=(facets,props)=>{const{highlight,highlightedSeries,name,onMouseOver,onMouseOut,descriptions}=props;return highlight||highlightedSeries||descriptions?{entries:{name:`${name}_legendEntry`,interactive:!0,enter:{tooltip:legendUtils_getTooltip(descriptions,name)},update:{fill:{value:"transparent"}}},labels:{update:{opacity:getOpacityEncoding(props)}},symbols:{update:{opacity:getOpacityEncoding(props)}}}:onMouseOver||onMouseOut?{entries:{name:`${name}_legendEntry`,interactive:!0,enter:{fill:{value:"transparent"}}}}:{}},legendUtils_getTooltip=(descriptions,name)=>{if(descriptions?.length)return{signal:`merge(datum, {'rscComponentName': '${name}'})`}},getOpacityEncoding=({highlight,highlightedSeries,keys,name})=>{const highlightSignalName=keys?`${name}_highlight`:constants.gG;if(highlight||highlightedSeries)return[{test:`${highlightSignalName} && datum.value !== ${highlightSignalName}`,value:1/constants.ux},constants.ZH]},getSymbolEncodings=(facets,props)=>{const{color,lineType,lineWidth,name,opacity,symbolShape,colorScheme}=props,enter={fillOpacity:getSymbolFacetEncoding({facets,facetType:constants.$M,customValue:opacity,name}),shape:getSymbolFacetEncoding({facets,facetType:constants.SJ,customValue:symbolShape,name}),size:getSymbolFacetEncoding({facets,facetType:constants.iJ,name}),strokeDash:getSymbolFacetEncoding({facets,facetType:constants.Ze,customValue:lineType,name}),strokeWidth:getSymbolFacetEncoding({facets,facetType:constants.Bg,customValue:lineWidth,name})},update={fill:[...getHiddenSeriesColorRule(props,"gray-300"),getSymbolFacetEncoding({facets,facetType:constants.Tj,customValue:color,name})??{value:spectrumColors_namespaceObject[colorScheme]["categorical-100"]}],stroke:[...getHiddenSeriesColorRule(props,"gray-300"),getSymbolFacetEncoding({facets,facetType:constants.Tj,customValue:color,name})??{value:spectrumColors_namespaceObject[colorScheme]["categorical-100"]}]};return{entries:{name:`${name}_legendEntry`},symbols:JSON.parse(JSON.stringify({enter,update}))}},getSymbolFacetEncoding=({customValue,facets,facetType,name})=>{if(customValue)return"string"==typeof customValue?{signal:`scale('${facetType}', data('${name}Aggregate')[datum.index].${customValue})`}:{value:customValue.value};if(!facets)return;const secondaryFacetMapping={color:{scale:"secondaryColor",signal:"colors"},linearColor:{scale:"secondaryColor",signal:"colors"},lineType:{scale:"secondaryLineType",signal:"lineTypes"},lineWidth:{scale:"secondaryLineWidth",signal:"lineWidths"},opacity:{scale:"secondaryOpacity",signal:"opacities"},symbolShape:{scale:"secondarySymbolShape",signal:"symbolShapes"},symbolSize:{scale:"secondarySymbolSize",signal:"symbolSizes"},symbolPathWidth:{scale:"secondarySymbolPathWidth",signal:"symbolPathWidths"}},facet=facets.find((f=>f.facetType===facetType));if(!facet)return;const secondaryFacet=facets.find((f=>f.facetType===secondaryFacetMapping[facetType].scale));if(secondaryFacet){const{scale,signal}=secondaryFacetMapping[facetType];return{signal:`scale('${signal}', data('${name}Aggregate')[datum.index].${facet.field})[indexof(domain('${scale}'), data('${name}Aggregate')[datum.index].${secondaryFacet.field})% length(scale('${signal}', data('${name}Aggregate')[datum.index].${facet.field}))]`}}return{signal:`scale('${facetType}', data('${name}Aggregate')[datum.index].${facet.field})`}},getHiddenSeriesColorRule=({colorScheme,hiddenSeries,isToggleable,keys},colorValue)=>!isToggleable&&!hiddenSeries||keys?[]:[{test:"indexof(hiddenSeries, datum.value) !== -1",value:getColorValue(colorValue,colorScheme)}],getShowHideEncodings=props=>{const{colorScheme,hiddenSeries,isToggleable,keys,name,onClick}=props;let hiddenSeriesEncode={};!hiddenSeries&&!isToggleable||keys||(hiddenSeriesEncode={labels:{update:{fill:[...getHiddenSeriesColorRule(props,"gray-500"),{value:getColorValue("gray-700",colorScheme)}]}}});let clickEncode={};return(isToggleable&&!keys||onClick)&&(clickEncode={entries:{name:`${name}_legendEntry`,interactive:!0,enter:{fill:{value:"transparent"},cursor:{value:"pointer"}}}}),mergeLegendEncodings([hiddenSeriesEncode,clickEncode])},mergeLegendEncodings=encodings=>{let mergedEncodings={};for(const encoding of encodings)mergedEncodings=cjs_default()(mergedEncodings,encoding);return mergedEncodings},getSymbolType=symbolShape=>symbolShape&&"object"==typeof symbolShape&&"value"in symbolShape?getPathFromSymbolShape(symbolShape.value):"circle",addLegend=(0,immer.jM)(((spec,{color,hiddenEntries=[],hiddenSeries=[],highlight=!1,highlightedSeries,index=0,isToggleable=!1,lineType,lineWidth,position="bottom",symbolShape,title,colorScheme=constants.gb,...props})=>{const{formattedColor,formattedLineType,formattedLineWidth,formattedSymbolShape}=formatFacetRefsWithPresets(color,lineType,lineWidth,symbolShape,colorScheme),name=`legend${index}`,legendProps={color:formattedColor,hiddenEntries,hiddenSeries,highlight,highlightedSeries,index,isToggleable,lineType:formattedLineType,lineWidth:formattedLineWidth,name,position,symbolShape:formattedSymbolShape,title,colorScheme,...props};spec.scales=legendSpecBuilder_addScales(spec.scales??[],legendProps);const{ordinalFacets,continuousFacets}=props.keys?((keys,scales)=>{const ordinalFacets=[],continuousFacets=[];return scales.forEach((scale=>{isScaleWithMultiFields(scale)&&scaleHasKey(scale,keys)&&("ordinal"===scale.type||"point"===scale.type?ordinalFacets.push({facetType:scale.name,field:scale.domain.fields.find((field=>keys.includes(field.toString())))?.toString()}):continuousFacets.push({facetType:scale.name,field:scale.domain.fields.find((field=>keys.includes(field.toString())))?.toString()}))})),{ordinalFacets,continuousFacets}})(props.keys,spec.scales??[]):(scales=>{const ordinalFacets=[],continuousFacets=[];return scales.forEach((scale=>{facetScaleNames.includes(scale.name)&&isScaleWithMultiFields(scale)&&scale.domain.fields.length&&("ordinal"===scale.type||"point"===scale.type?ordinalFacets.push({facetType:scale.name,field:scale.domain.fields[0].toString()}):continuousFacets.push({facetType:scale.name,field:scale.domain.fields[0].toString()}))})),{ordinalFacets,continuousFacets}})(spec.scales??[]),legends=[];if(ordinalFacets.length){spec.scales.push({name:`${name}Entries`,type:"ordinal",domain:{data:`${name}Aggregate`,field:`${name}Entries`}});const uniqueFacetFields=[...new Set(ordinalFacets.map((facet=>facet.field)))];spec.data=legendSpecBuilder_addData(spec.data??[],{...legendProps,facets:uniqueFacetFields}),spec.signals=legendSpecBuilder_addSignals(spec.signals??[],legendProps),spec.marks=legendSpecBuilder_addMarks(spec.marks??[],legendProps),legends.push(getCategoricalLegend(ordinalFacets,legendProps))}continuousFacets.forEach((facet=>{legends.push(getContinuousLegend(facet,legendProps))})),void 0===spec.legends&&(spec.legends=[]),spec.legends.push(...legends)})),formatFacetRefsWithPresets=(color,lineType,lineWidth,symbolShape,colorScheme)=>{let formattedColor,formattedLineType,formattedLineWidth,formattedSymbolShape;return formattedColor=color&&"object"==typeof color?{value:getColorValue(color.value,colorScheme)}:color,formattedLineType=lineType&&"object"==typeof lineType?{value:getStrokeDashFromLineType(lineType.value)}:lineType,formattedLineWidth=lineWidth&&"object"==typeof lineWidth?{value:getLineWidthPixelsFromLineWidth(lineWidth.value)}:lineWidth,formattedSymbolShape=symbolShape&&"object"==typeof symbolShape?{value:getPathFromSymbolShape(symbolShape.value)}:symbolShape,{formattedColor,formattedLineType,formattedLineWidth,formattedSymbolShape}},getCategoricalLegend=(facets,props)=>{const{name,position,title,labelLimit}=props;return{fill:`${name}Entries`,direction:["top","bottom"].includes(position)?"horizontal":"vertical",orient:position,title,encode:getEncodings(facets,props),columns:getColumns(position),labelLimit}},getContinuousLegend=(facet,props)=>{const{symbolShape}=props;return facet.facetType===constants.iJ?{size:constants.iJ,...getLegendLayout(props),symbolType:getSymbolType(symbolShape)}:{fill:constants.VQ,gradientThickness:10,...getLegendLayout(props)}},getLegendLayout=({position,title})=>({direction:["top","bottom"].includes(position)?"horizontal":"vertical",orient:position,title}),legendSpecBuilder_addScales=(0,immer.jM)(((scales,{color,lineType,opacity,symbolShape})=>{addFieldToFacetScaleDomain(scales,constants.Tj,color),addFieldToFacetScaleDomain(scales,constants.Ze,lineType),addFieldToFacetScaleDomain(scales,constants.$M,opacity),addFieldToFacetScaleDomain(scales,constants.SJ,symbolShape)})),legendSpecBuilder_addMarks=(0,immer.jM)(((marks,{highlight,keys,name})=>{highlight&&setHoverOpacityForMarks(marks,keys,name)})),legendSpecBuilder_addData=(0,immer.jM)(((data,{facets,hiddenEntries,name})=>{const expr=facets.map((facet=>`datum.${facet}`)).join(' + " | " + ');data.push({name:`${name}Aggregate`,source:"table",transform:[{type:"aggregate",groupby:facets},{type:"formula",as:`${name}Entries`,expr},...getHiddenEntriesFilter(hiddenEntries,name)]})})),legendSpecBuilder_addSignals=(0,immer.jM)(((signals,{hiddenSeries,highlight,isToggleable,legendLabels,name})=>{highlight&&((signals,legendName,includeHiddenSeries)=>{const highlightedItemSignal=signals.find((signal=>signal.name===constants.gG));if(highlightedItemSignal){void 0===highlightedItemSignal.on&&(highlightedItemSignal.on=[]);const hoveredSeries=`domain("${legendName}Entries")[datum.index]`,update=includeHiddenSeries?`indexof(hiddenSeries, ${hoveredSeries}) === -1 ? ${hoveredSeries} : null`:hoveredSeries;highlightedItemSignal.on.push({events:`@${legendName}_legendEntry:mouseover`,update},{events:`@${legendName}_legendEntry:mouseout`,update:"null"})}})(signals,name,Boolean(isToggleable||hiddenSeries)),legendLabels&&(hasSignalByName(signals,"legendLabels")||signals.push(((value=null)=>({name:"legendLabels",value}))(legendLabels)))})),staticPointTest=staticPoint=>`datum.${staticPoint} && datum.${staticPoint} === true`,selectedTest=`${constants.sk} && ${constants.sk} === datum.${constants.i4}`,getHighlightBackgroundPoint=lineProps=>{const{dimension,metric,name,scaleType}=lineProps;return{name:`${name}_pointBackground`,type:"symbol",from:{data:`${name}_highlightedData`},interactive:!1,encode:{enter:{y:{scale:"yLinear",field:metric},fill:{signal:constants.b3},stroke:{signal:constants.b3}},update:{size:getHighlightPointSize(lineProps),strokeWidth:getHighlightPointStrokeWidth(lineProps),x:getXProductionRule(scaleType,dimension)}}}},getHighlightPoint=lineProps=>{const{color,colorScheme,dimension,metric,name,scaleType}=lineProps;return{name:`${name}_point`,type:"symbol",from:{data:`${name}_highlightedData`},interactive:!1,encode:{enter:{y:{scale:"yLinear",field:metric},stroke:getColorProductionRule(color,colorScheme)},update:{fill:getHighlightPointFill(lineProps),size:getHighlightPointSize(lineProps),stroke:getHighlightPointStroke(lineProps),strokeOpacity:getHighlightPointStrokeOpacity(lineProps),strokeWidth:getHighlightPointStrokeWidth(lineProps),x:getXProductionRule(scaleType,dimension)}}}},getSecondaryHighlightPoint=(lineProps,secondaryHighlightedMetric)=>{const{color,colorScheme,dimension,name,scaleType}=lineProps;return{name:`${name}_secondaryPoint`,type:"symbol",from:{data:`${name}_highlightedData`},interactive:!1,encode:{enter:{y:{scale:"yLinear",field:secondaryHighlightedMetric},fill:{signal:constants.b3},stroke:getColorProductionRule(color,colorScheme)},update:{x:getXProductionRule(scaleType,dimension)}}}},getHighlightPointFill=({children,color,colorScheme,staticPoint})=>{const fillRules=[];return staticPoint&&fillRules.push({test:staticPointTest(staticPoint),...getColorProductionRule(color,colorScheme)}),hasPopover(children)&&fillRules.push({test:selectedTest,...getColorProductionRule(color,colorScheme)}),[...fillRules,{signal:constants.b3}]},getHighlightPointStroke=({children,color,colorScheme,staticPoint})=>{const strokeRules=[];return staticPoint&&strokeRules.push({test:staticPointTest(staticPoint),...getColorProductionRule(color,colorScheme)}),hasPopover(children)&&strokeRules.push({test:selectedTest,signal:constants.b3}),[...strokeRules,getColorProductionRule(color,colorScheme)]},getHighlightPointStrokeOpacity=({opacity,staticPoint})=>{const baseOpacityRule=getOpacityProductionRule(opacity),strokeOpacityRules=[];return staticPoint&&strokeOpacityRules.push({test:staticPointTest(staticPoint),...getHighlightOpacityValue(baseOpacityRule)}),[...strokeOpacityRules,baseOpacityRule]},getHighlightPointSize=({staticPoint})=>{const sizeRules=[];return staticPoint&&sizeRules.push({test:staticPointTest(staticPoint),value:64}),[...sizeRules,{value:constants.Nq}]},getHighlightPointStrokeWidth=({staticPoint})=>{const strokeWidthRules=[];return staticPoint&&strokeWidthRules.push({test:staticPointTest(staticPoint),value:6}),[...strokeWidthRules,{value:constants.Zx}]},getSelectRingPoint=lineProps=>{const{colorScheme,dimension,metric,name,scaleType}=lineProps;return{name:`${name}_pointSelectRing`,type:"symbol",from:{data:`${name}_highlightedData`},interactive:!1,encode:{enter:{y:{scale:"yLinear",field:metric},fill:{signal:constants.b3},stroke:{value:getColorValue("static-blue",colorScheme)}},update:{size:[{test:selectedTest,value:196},{value:0}],strokeWidth:[{test:selectedTest,value:constants.Zx},{value:0}],x:getXProductionRule(scaleType,dimension)}}}},getLineMark=(lineMarkProps,dataSource)=>{const{color,colorScheme,dimension,lineType,lineWidth,metric,name,opacity,scaleType}=lineMarkProps;return{name,type:"line",from:{data:dataSource},interactive:!1,encode:{enter:{y:{scale:"yLinear",field:metric},stroke:getColorProductionRule(color,colorScheme),strokeDash:getStrokeDashProductionRule(lineType),strokeOpacity:getOpacityProductionRule(opacity),strokeWidth:getLineWidthProductionRule(lineWidth)},update:{x:getXProductionRule(scaleType,dimension),opacity:getLineOpacity(lineMarkProps)}}}},getLineOpacity=({displayOnHover,interactiveMarkName,popoverMarkName})=>{if(!interactiveMarkName||displayOnHover)return[constants.ZH];const strokeOpacityRules=[];return strokeOpacityRules.push({test:`${constants.gG} && ${constants.gG} !== datum.${constants.y4}`,...getHighlightOpacityValue(constants.ZH)}),popoverMarkName&&strokeOpacityRules.push({test:`${constants.uW} && ${constants.uW} !== datum.${constants.y4}`,...getHighlightOpacityValue(constants.ZH)}),strokeOpacityRules.push(constants.ZH),strokeOpacityRules},getLineHoverMarks=(lineProps,dataSource,secondaryHighlightedMetric)=>{const{children,dimension,metric,name,scaleType}=lineProps;return[getHoverRule(dimension,name,scaleType),getHighlightBackgroundPoint(lineProps),...hasPopover(children)?[getSelectRingPoint(lineProps)]:[],getHighlightPoint(lineProps),...secondaryHighlightedMetric?[getSecondaryHighlightPoint(lineProps,secondaryHighlightedMetric)]:[],getPointsForVoronoi(dataSource,dimension,metric,name,scaleType),getVoronoiPath(children,`${name}_pointsForVoronoi`,name)]},getHoverRule=(dimension,name,scaleType)=>({name:`${name}_hoverRule`,type:"rule",from:{data:`${name}_highlightedData`},interactive:!1,encode:{enter:{y:{value:0},y2:{signal:"height"},strokeWidth:{value:1}},update:{x:getXProductionRule(scaleType,dimension)}}}),getMetricRanges=(children,markName)=>children.filter((child=>child.type===MetricRange_MetricRange)).map(((metricRange,index)=>applyMetricRangePropDefaults(metricRange.props,markName,index))),applyMetricRangePropDefaults=({lineType="dashed",lineWidth="S",rangeOpacity=.2,metric=constants.bA,displayOnHover=!1,...props},markName,index)=>({children:{},lineType,lineWidth,name:`${markName}MetricRange${index}`,rangeOpacity,metric,displayOnHover,...props}),getMetricRangeMark=(lineMarkProps,metricRangeProps)=>{const areaProps={name:`${metricRangeProps.name}_area`,color:lineMarkProps.color,colorScheme:lineMarkProps.colorScheme,opacity:metricRangeProps.rangeOpacity,children:[],metricStart:metricRangeProps.metricStart,metricEnd:metricRangeProps.metricEnd,isStacked:!1,scaleType:"time",dimension:lineMarkProps.dimension,isMetricRange:!0,parentName:lineMarkProps.name,displayOnHover:metricRangeProps.displayOnHover},lineProps={...lineMarkProps,name:`${metricRangeProps.name}_line`,color:metricRangeProps.color?{value:metricRangeProps.color}:lineMarkProps.color,metric:metricRangeProps.metric,lineType:{value:metricRangeProps.lineType},lineWidth:{value:metricRangeProps.lineWidth},displayOnHover:metricRangeProps.displayOnHover},dataSource=`${metricRangeProps.name}_facet`;return[getLineMark(lineProps,dataSource),getAreaMark(areaProps,dataSource)]},getTrendlines=markProps=>markProps.children.filter((child=>child.type===Trendline)).map(((trendline,index)=>applyTrendlinePropDefaults(markProps,trendline.props,index))),applyTrendlinePropDefaults=(markProps,{children,color,dimensionExtent,dimensionRange=[null,null],displayOnHover=!1,highlightRawPoint=!1,lineType="dashed",lineWidth="M",method="linear",opacity=1,orientation="horizontal",...props},index)=>{const dimensionScaleType=getTrendlineScaleType(markProps,orientation),isDimensionNormalized="time"===dimensionScaleType&&isRegressionMethod(method)&&"horizontal"===orientation,{trendlineDimension,trendlineMetric}=getTrendlineDimensionMetric(markProps.dimension,markProps.metric,orientation,isDimensionNormalized),trendlineColor=color?{value:color}:markProps.color;return{children:sanitizeTrendlineChildren(children),colorScheme:markProps.colorScheme,displayOnHover,dimensionExtent:dimensionExtent??dimensionRange,dimensionRange,dimensionScaleType,highlightRawPoint,isDimensionNormalized,lineType,lineWidth,method,metric:constants.AZ,name:`${markProps.name}Trendline${index}`,opacity,orientation,trendlineColor,trendlineDimension,trendlineMetric,...props}},getTrendlineDimensionMetric=(dimension,metric,orientation,isDimensionNormalized)=>"horizontal"===orientation?{trendlineDimension:normalizeTrendlineDimensionName(dimension,isDimensionNormalized),trendlineMetric:metric}:{trendlineDimension:metric,trendlineMetric:dimension},normalizeTrendlineDimensionName=(dimension,isDimensionNormalized)=>isDimensionNormalized?`${dimension}Normalized`:dimension,isAggregateMethod=method=>["average","median"].includes(method),isRegressionMethod=method=>isPolynomialMethod(method)||["exponential","logarithmic","power"].includes(method),isWindowMethod=method=>method.startsWith("movingAverage-"),isPolynomialMethod=method=>method.startsWith("polynomial-")||["linear","quadratic"].includes(method),getPolynomialOrder=method=>{switch(method){case"linear":return 1;case"quadratic":return 2}const order=parseInt(method.split("-")[1]);if(order<1)throw new Error(`Invalid polynomial order: ${order}, order must be an interger greater than 0`);return order},getRegressionExtent=(dimensionExtent,name,isNormalized)=>{const extentName=`${name}_extent`;return{signal:`[${dimensionExtent.map(((value,i)=>{switch(value){case null:return`${extentName}[${i}]`;case"domain":return`${extentName}[${i}] ${0===i?"-":"+"} (${extentName}[1] - ${extentName}[0]) * 0.3`;default:return isNormalized?`(${value} - data('${constants.H5}')[0].datetimeMin + ${constants.ec}) / ${constants.ec}`:value}})).join(", ")}]`}},getTrendlineScaleType=(markProps,trendlineOrientation)=>"vertical"===trendlineOrientation?"linear":"scaleType"in markProps?markProps.scaleType:markProps.dimensionScaleType,getAggregateTransform=(markProps,{method,trendlineDimension,trendlineMetric},isHighResolutionData)=>{const{color,lineType}=markProps,{facets}=getFacetsFromProps({color,lineType}),operations={average:"mean",median:"median"};return isHighResolutionData?{type:"aggregate",groupby:facets,ops:[operations[method],"min","max"],fields:[trendlineMetric,trendlineDimension,trendlineDimension],as:[constants.AZ,`${trendlineDimension}Min`,`${trendlineDimension}Max`]}:{type:"joinaggregate",groupby:facets,ops:[operations[method]],fields:[trendlineMetric],as:[constants.AZ]}},getRegressionTransform=(markProps,trendlineProps,isHighResolutionData)=>{const{color,lineType}=markProps,{dimensionExtent,isDimensionNormalized,method,name,trendlineDimension,trendlineMetric}=trendlineProps,{facets}=getFacetsFromProps({color,lineType});let regressionMethod,order;switch(method){case"exponential":regressionMethod="exp";break;case"logarithmic":regressionMethod="log";break;case"power":regressionMethod="pow";break;default:order=getPolynomialOrder(method),regressionMethod="poly"}return{type:"regression",method:regressionMethod,order,groupby:facets,x:trendlineDimension,y:trendlineMetric,as:isHighResolutionData?[trendlineDimension,constants.AZ]:void 0,params:!isHighResolutionData,extent:isHighResolutionData?getRegressionExtent(dimensionExtent,name,isDimensionNormalized):void 0}},getWindowTransform=(markProps,{method,trendlineMetric})=>{const frameWidth=parseInt(method.split("-")[1]),{color,lineType}=markProps,{facets}=getFacetsFromProps({color,lineType});if(isNaN(frameWidth)||frameWidth<1)throw new Error(`Invalid moving average frame width: ${frameWidth}, frame width must be an integer greater than 0`);return{type:"window",ops:["mean"],groupby:facets,fields:[trendlineMetric],as:[constants.AZ],frame:[frameWidth-1,0]}},getNormalizedDimensionTransform=dimension=>[{type:"joinaggregate",fields:[dimension],as:[`${dimension}Min`],ops:["min"]},{type:"formula",expr:`(datum.${dimension} - datum.${dimension}Min + ${constants.ec}) / ${constants.ec}`,as:`${dimension}Normalized`}],getRegressionExtentTransform=(dimension,name)=>({type:"extent",field:dimension,signal:`${name}_extent`}),getTrendlineDimensionRangeTransforms=(dimension,dimensionRange)=>{const filterExpressions=[];return null!==dimensionRange[0]&&filterExpressions.push(`datum.${dimension} >= ${dimensionRange[0]}`),null!==dimensionRange[1]&&filterExpressions.push(`datum.${dimension} <= ${dimensionRange[1]}`),filterExpressions.length?[{type:"filter",expr:filterExpressions.join(" && ")}]:[]},getTrendlineParamFormulaTransforms=(trendlineDimension,method)=>{let expr="";if(isPolynomialMethod(method)){const order=getPolynomialOrder(method);expr=["datum.coef[0]",...Array(order).fill(0).map(((_e,i)=>`datum.coef[${i+1}] * pow(datum.${trendlineDimension}, ${i+1})`))].join(" + ")}else"exponential"===method?expr=`datum.coef[0] + exp(datum.coef[1] * datum.${trendlineDimension})`:"logarithmic"===method?expr=`datum.coef[0] + datum.coef[1] * log(datum.${trendlineDimension})`:"power"===method&&(expr=`datum.coef[0] * pow(datum.${trendlineDimension}, datum.coef[1])`);return expr?[{type:"formula",expr,as:constants.AZ}]:[]},getTrendlineParamLookupTransform=({color,lineType},{name})=>{const{facets}=getFacetsFromProps({color,lineType});return{type:"lookup",from:`${name}_params`,key:"keys",fields:facets,values:["coef"]}},addTrendlineData=(data,markProps)=>{data.push(...getTrendlineData(markProps));const tableData=getTableData(data);tableData.transform=addTableDataTransforms(tableData.transform??[],markProps)},getTrendlineData=markProps=>{const data=[],{color,lineType,name:markName}=markProps,trendlines=getTrendlines(markProps),concatenatedTrendlineData={name:`${markName}_allTrendlineData`,source:[]};for(const trendlineProps of trendlines){const{displayOnHover,method,name,children:trendlineChildren}=trendlineProps,{facets}=getFacetsFromProps({color,lineType});isRegressionMethod(method)?data.push(...getRegressionTrendlineData(markProps,trendlineProps,facets)):isAggregateMethod(method)?data.push(...getAggregateTrendlineData(markProps,trendlineProps,facets)):isWindowMethod(method)&&data.push(getWindowTrendlineData(markProps,trendlineProps)),displayOnHover&&data.push(getTrendlineDisplayOnHoverData(name,method)),hasInteractiveChildren(trendlineChildren)&&concatenatedTrendlineData.source.push(`${name}_data`)}return trendlines.some((trendline=>hasInteractiveChildren(trendline.children)))&&(data.push(concatenatedTrendlineData),data.push(getHighlightTrendlineData(markName))),data},getAggregateTrendlineData=(markProps,trendlineProps,facets)=>{const data=[],{dimensionRange,name,children:trendlineChildren,trendlineDimension}=trendlineProps,dimensionRangeTransforms=getTrendlineDimensionRangeTransforms(trendlineDimension,dimensionRange);return data.push({name:`${name}_highResolutionData`,source:constants.H5,transform:[...getExcludeDataKeyTransforms(trendlineProps.excludeDataKeys),...dimensionRangeTransforms,...getTrendlineStatisticalTransforms(markProps,trendlineProps,!0),getSeriesIdTransform(facets)]}),hasInteractiveChildren(trendlineChildren)&&data.push({name:`${name}_data`,source:constants.H5,transform:[...dimensionRangeTransforms,...getTrendlineStatisticalTransforms(markProps,trendlineProps,!1)]}),data},getRegressionTrendlineData=(markProps,trendlineProps,facets)=>{const data=[],{dimension,metric}=markProps,{dimensionRange,method,name,orientation,children:trendlineChildren,trendlineDimension}=trendlineProps,{trendlineDimension:standardTrendlineDimension}=getTrendlineDimensionMetric(dimension,metric,orientation,!1),dimensionRangeTransforms=getTrendlineDimensionRangeTransforms(standardTrendlineDimension,dimensionRange);return data.push({name:`${name}_highResolutionData`,source:constants.H5,transform:[...getExcludeDataKeyTransforms(trendlineProps.excludeDataKeys),...dimensionRangeTransforms,...getTrendlineStatisticalTransforms(markProps,trendlineProps,!0),getSeriesIdTransform(facets)]}),hasInteractiveChildren(trendlineChildren)&&data.push({name:`${name}_params`,source:constants.H5,transform:[...dimensionRangeTransforms,...getTrendlineStatisticalTransforms(markProps,trendlineProps,!1)]},{name:`${name}_data`,source:constants.H5,transform:[...dimensionRangeTransforms,getTrendlineParamLookupTransform(markProps,trendlineProps),...getTrendlineParamFormulaTransforms(trendlineDimension,method)]}),data},getWindowTrendlineData=(markProps,trendlineProps)=>({name:`${trendlineProps.name}_data`,source:constants.H5,transform:[...getExcludeDataKeyTransforms(trendlineProps.excludeDataKeys),...getTrendlineStatisticalTransforms(markProps,trendlineProps,!1),...getTrendlineDimensionRangeTransforms(markProps.dimension,trendlineProps.dimensionRange)]}),getHighlightTrendlineData=markName=>({name:`${markName}Trendline_highlightedData`,source:`${markName}_allTrendlineData`,transform:[{type:"filter",expr:`${constants.sk} === datum.${constants.i4} || !${constants.sk} && ${constants.qE} === datum.${constants.i4}`}]}),getTrendlineStatisticalTransforms=(markProps,trendlineProps,isHighResolutionData)=>{const{method,trendlineDimension}=trendlineProps;return isAggregateMethod(method)?[getAggregateTransform(markProps,trendlineProps,isHighResolutionData)]:isRegressionMethod(method)?[getRegressionTransform(markProps,trendlineProps,isHighResolutionData)]:isWindowMethod(method)?[(dimension=trendlineDimension,{type:"collect",sort:{field:dimension}}),getWindowTransform(markProps,trendlineProps)]:[];var dimension},addTableDataTransforms=(0,immer.jM)(((transforms,markProps)=>{const{dimension,metric}=markProps,trendlines=getTrendlines(markProps);for(const{isDimensionNormalized,method,name,orientation,trendlineDimension}of trendlines)if(isRegressionMethod(method)){const{trendlineDimension:standardTrendlinDimension}=getTrendlineDimensionMetric(dimension,metric,orientation,!1);isDimensionNormalized&&(transforms.some((transform=>"as"in transform&&transform.as===`${standardTrendlinDimension}Normalized`))||transforms.push(...getNormalizedDimensionTransform(standardTrendlinDimension))),transforms.push(getRegressionExtentTransform(trendlineDimension,name))}})),getTrendlineDisplayOnHoverData=(trendlineName,method)=>({name:`${trendlineName}_highlightedData`,source:isWindowMethod(method)?`${trendlineName}_data`:`${trendlineName}_highResolutionData`,transform:[{type:"filter",expr:`datum.${constants.y4} === ${constants.gG} || datum.${constants.y4} === ${constants.uW}`}]}),getExcludeDataKeyTransforms=excludeDataKeys=>excludeDataKeys?.map((excludeDataKey=>({type:"filter",expr:`!datum.${excludeDataKey}`})))??[],getTrendlineAnnotations=(trendlineProps,markName)=>trendlineProps.children.filter((child=>child.type===TrendlineAnnotation)).map(((annotation,index)=>(({badge=!1,dimensionValue="end",numberFormat="",prefix=""},index,{colorScheme,dimensionExtent,dimensionScaleType,displayOnHover,lineWidth,orientation,trendlineColor,trendlineDimension,name:trendlineName},markName)=>({badge,colorScheme,dimensionValue,displayOnHover,markName,name:`${trendlineName}Annotation${index}`,numberFormat,prefix,trendlineColor,trendlineDimension,trendlineDimensionExtent:dimensionExtent,trendlineDimensionScaleType:dimensionScaleType,trendlineName,trendlineOrientation:orientation,trendlineWidth:getLineWidthPixelsFromLineWidth(lineWidth)}))(annotation.props,index,trendlineProps,markName))),getTrendlineAnnotationMarks=(trendlineProps,markName)=>{const marks=[];return getTrendlineAnnotations(trendlineProps,markName).forEach((annotation=>{marks.push({name:`${annotation.name}_group`,type:"group",interactive:!1,marks:[getTrendlineAnnotationPoints(annotation),getTrendlineAnnotationTextMark(annotation),...getTrendlineAnnotationBadgeMark(annotation)]})})),marks},getTrendlineAnnotationPoints=annotationProps=>{const{name,trendlineName,trendlineWidth,displayOnHover}=annotationProps;return{name:`${name}_points`,type:"symbol",from:{data:displayOnHover?`${trendlineName}_highlightedData`:`${trendlineName}_highResolutionData`},encode:{enter:{opacity:{value:0},size:{value:Math.pow(trendlineWidth,2)},x:getTrendlineAnnotationPointX(annotationProps),y:getTrendlineAnnotationPointY(annotationProps)}}}},getTrendlineAnnotationPointX=({dimensionValue,trendlineDimension,trendlineDimensionExtent,trendlineDimensionScaleType,trendlineOrientation})=>{const scale=getScaleName("x",trendlineDimensionScaleType);if("vertical"===trendlineOrientation)return{scale,field:constants.AZ};switch(dimensionValue){case"start":return getStartDimensionExtentProductionRule(trendlineDimensionExtent[0],trendlineDimension,scale,"x");case"end":return getEndDimensionExtentProductionRule(trendlineDimensionExtent[1],trendlineDimension,scale,"x");default:return{scale,value:dimensionValue}}},getTrendlineAnnotationPointY=({dimensionValue,trendlineDimension,trendlineDimensionExtent,trendlineOrientation})=>{if("horizontal"===trendlineOrientation)return{scale:"yLinear",field:constants.AZ};switch(dimensionValue){case"start":return getStartDimensionExtentProductionRule(trendlineDimensionExtent[0],trendlineDimension,"yLinear","y");case"end":return getEndDimensionExtentProductionRule(trendlineDimensionExtent[1],trendlineDimension,"yLinear","y");default:return{scale:"yLinear",value:dimensionValue}}},getTrendlineAnnotationTextMark=annotation=>{const{name,numberFormat,prefix,trendlineName,markName}=annotation,textPrefix=prefix?`'${prefix} ' + `:"",fill=getTextFill({...annotation});return{name,type:"text",from:{data:`${name}_points`},zindex:1,encode:{enter:{text:{signal:`${textPrefix}format(datum.datum.${constants.AZ}, '${numberFormat}')`},fill}},transform:[{type:"label",size:{signal:"[width, height]"},avoidMarks:[trendlineName,`${markName}_group`],offset:[6,6,6,6,8.49,8.49,8.49,8.49],anchor:["top","bottom","right","left","top-right","top-left","bottom-right","bottom-left"]}]}},getTextFill=({badge,colorScheme,trendlineColor})=>{if(!badge)return;const colorString=((color,colorScheme,colorScaleType="ordinal")=>{const colorRule=getColorProductionRule(color,colorScheme,colorScaleType);return"signal"in colorRule?colorRule.signal:"scale"in colorRule&&"field"in colorRule?`scale('${colorRule.scale}', datum.${colorRule.field})`:"value"in colorRule&&colorRule.value?`'${colorRule.value}'`:""})(getColorKey(trendlineColor),colorScheme),textColors=[getColorValue("gray-50",colorScheme),getColorValue("gray-900",colorScheme)];return[{test:`contrast(${colorString}, '${textColors[0]}') >= 4.5`,value:textColors[0]},{value:textColors[1]}]},getTrendlineAnnotationBadgeMark=({badge,colorScheme,name,trendlineColor})=>{if(!badge)return[];const color=getColorKey(trendlineColor,2);return[{name:`${name}_badge`,type:"rect",from:{data:`${name}`},encode:{enter:{cornerRadius:{value:2},fill:getColorProductionRule(color,colorScheme),opacity:{field:"opacity"},x:{signal:"datum.bounds.x1 - 3"},x2:{signal:"datum.bounds.x2 + 3"},y:{signal:"datum.bounds.y1 - 3"},y2:{signal:"datum.bounds.y2 + 3"}}}}]},getColorKey=(trendlineColor,datumOrder=1)=>"string"==typeof trendlineColor?`${new Array(datumOrder).fill("datum.").join("")}${trendlineColor}`:trendlineColor,getTrendlineMarks=markProps=>{const{color,lineType}=markProps,{facets}=getFacetsFromProps({color,lineType}),marks=[],trendlines=getTrendlines(markProps);for(const trendlineProps of trendlines){const{displayOnHover,method,name}=trendlineProps;if(isAggregateMethod(method))marks.push(getTrendlineRuleMark(markProps,trendlineProps));else{const data=getDataSourceName(name,method,displayOnHover);marks.push({name:`${name}_group`,type:"group",clip:!0,from:{facet:{name:`${name}_facet`,data,groupby:facets}},marks:[getTrendlineLineMark(markProps,trendlineProps)]})}marks.push(...getTrendlineAnnotationMarks(trendlineProps,markProps.name))}return trendlines.some((trendline=>hasTooltip(trendline.children)))&&marks.push(getTrendlineHoverMarks(markProps,trendlines.some((trendlineProps=>trendlineProps.highlightRawPoint)))),marks},getDataSourceName=(trendlineName,method,displayOnHover)=>displayOnHover?`${trendlineName}_highlightedData`:isRegressionMethod(method)?`${trendlineName}_highResolutionData`:`${trendlineName}_data`,getTrendlineRuleMark=(markProps,trendlineProps)=>{const{colorScheme}=markProps,{dimensionExtent,dimensionScaleType,displayOnHover,lineType,lineWidth,name,orientation,trendlineColor,trendlineDimension}=trendlineProps;return{name,type:"rule",clip:!0,from:{data:displayOnHover?`${name}_highlightedData`:`${name}_highResolutionData`},interactive:!1,encode:{enter:{...getRuleYEncodings(dimensionExtent,trendlineDimension,orientation),stroke:getColorProductionRule(trendlineColor,colorScheme),strokeDash:getStrokeDashProductionRule({value:lineType}),strokeOpacity:getOpacityProductionRule({value:trendlineProps.opacity}),strokeWidth:getLineWidthProductionRule({value:lineWidth})},update:{...getRuleXEncodings(dimensionExtent,trendlineDimension,dimensionScaleType,orientation),opacity:getLineOpacity(getLineMarkProps(markProps,trendlineProps))}}}},getRuleYEncodings=(dimensionExtent,dimension,orientation)=>"horizontal"===orientation?{y:{scale:"yLinear",field:constants.AZ}}:{y:getStartDimensionExtentProductionRule(dimensionExtent[0],dimension,"yLinear","y"),y2:getEndDimensionExtentProductionRule(dimensionExtent[1],dimension,"yLinear","y")},getRuleXEncodings=(dimensionExtent,dimension,scaleType,orientation)=>{const scale=getScaleName("x",scaleType);return"vertical"===orientation?{x:{scale,field:constants.AZ}}:{x:getStartDimensionExtentProductionRule(dimensionExtent[0],dimension,scale,"x"),x2:getEndDimensionExtentProductionRule(dimensionExtent[1],dimension,scale,"x")}},getStartDimensionExtentProductionRule=(startDimensionExtent,dimension,scale,axis)=>{switch(startDimensionExtent){case null:return{scale,field:`${dimension}Min`};case"domain":return"x"===axis?{value:0}:{signal:"height"};default:return{scale,value:startDimensionExtent}}},getEndDimensionExtentProductionRule=(endDimensionExtent,dimension,scale,axis)=>{switch(endDimensionExtent){case null:return{scale,field:`${dimension}Max`};case"domain":return"x"===axis?{signal:"width"}:{value:0};default:return{scale,value:endDimensionExtent}}},getTrendlineLineMark=(markProps,trendlineProps)=>{const{colorScheme}=markProps,{dimensionScaleType,isDimensionNormalized,lineType,lineWidth,name,orientation,trendlineColor,trendlineDimension}=trendlineProps;return{name,type:"line",from:{data:`${name}_facet`},interactive:!1,encode:{enter:{y:getLineYProductionRule(trendlineDimension,orientation),stroke:getColorProductionRule(trendlineColor,colorScheme),strokeDash:getStrokeDashProductionRule({value:lineType}),strokeOpacity:getOpacityProductionRule({value:trendlineProps.opacity}),strokeWidth:getLineWidthProductionRule({value:lineWidth})},update:{x:getLineXProductionRule(trendlineDimension,dimensionScaleType,orientation,isDimensionNormalized),opacity:getLineOpacity(getLineMarkProps(markProps,trendlineProps))}}}},getLineYProductionRule=(trendlineDimension,orientation)=>"horizontal"===orientation?{scale:"yLinear",field:constants.AZ}:{scale:"yLinear",field:trendlineDimension},getLineXProductionRule=(trendlineDimension,scaleType,orientation,isDimensionNormalized)=>{const scale=getScaleName("x",scaleType);return"vertical"===orientation?{scale,field:constants.AZ}:isDimensionNormalized?{scale:"xTrendline",field:trendlineDimension}:{scale,field:trendlineDimension}},getTrendlineHoverMarks=(markProps,highlightRawPoint)=>{const{metric,name}=markProps,trendlines=getTrendlines(markProps),trendlineHoverProps=getLineMarkProps(markProps,trendlines[0],{name:`${name}Trendline`,children:trendlines.map((trendline=>trendline.children)).flat().filter((child=>child.type===ChartTooltip.I)),metric:constants.AZ});return{name:`${name}Trendline_hoverGroup`,type:"group",clip:!0,marks:getLineHoverMarks(trendlineHoverProps,`${name}_allTrendlineData`,highlightRawPoint?metric:void 0)}},getLineMarkProps=(markProps,{dimensionScaleType,displayOnHover,lineWidth,metric,name,opacity},override)=>{const{children,color,colorScheme,dimension,interactiveMarkName,lineType}=markProps;return{children,color,colorScheme,dimension,displayOnHover,interactiveMarkName,lineType,lineWidth:{value:lineWidth},metric,name,opacity:{value:opacity},popoverMarkName:"popoverMarkName"in markProps?markProps.popoverMarkName:void 0,scaleType:dimensionScaleType,staticPoint:"staticPoint"in markProps?markProps.staticPoint:void 0,...override}},getTrendlineScales=props=>{const{dimension}=props;return getTrendlines(props).some((({dimensionScaleType,method})=>isRegressionMethod(method)&&"time"===dimensionScaleType))?[{name:"xTrendline",type:"linear",range:"width",domain:{data:constants.H5,fields:[`${dimension}Normalized`]},padding:constants.uP,zero:!1,nice:!1}]:[]},setTrendlineSignals=(signals,markProps)=>{const{name:markName}=markProps,trendlines=getTrendlines(markProps);trendlines.some((trendline=>hasTooltip(trendline.children)))&&(addHighlightedItemSignalEvents(signals,`${markName}Trendline_voronoi`,2),addHighlightedSeriesSignalEvents(signals,`${markName}Trendline_voronoi`,2)),trendlines.some((trendline=>trendline.displayOnHover))&&addHighlightedSeriesSignalEvents(signals,`${markName}_voronoi`,2)},getInteractiveMarkName=(children,name)=>hasInteractiveChildren(children)?name:children.some((child=>child.type===Trendline&&"children"in child.props&&hasInteractiveChildren(sanitizeMarkChildren(child.props.children))))?`${name}Trendline`:void 0,getPopoverMarkName=(children,name)=>hasPopover(children)?name:children.some((child=>child.type===Trendline&&"children"in child.props&&hasPopover(sanitizeMarkChildren(child.props.children))))?`${name}Trendline`:void 0,addLine=(0,immer.jM)(((spec,{children,color={value:"categorical-100"},colorScheme=constants.gb,dimension=constants.Lr,index=0,lineType={value:"solid"},metric=constants.bA,name,opacity={value:1},scaleType="time",...props})=>{const sanitizedChildren=sanitizeMarkChildren(children),lineName=toCamelCase(name||`line${index}`),lineProps={children:sanitizedChildren,color,colorScheme,dimension,index,interactiveMarkName:getInteractiveMarkName(sanitizedChildren,lineName),lineType,metric,name:lineName,opacity,popoverMarkName:getPopoverMarkName(sanitizedChildren,lineName),scaleType,...props};return spec.data=lineSpecBuilder_addData(spec.data??[],lineProps),spec.signals=lineSpecBuilder_addSignals(spec.signals??[],lineProps),spec.scales=lineSpecBuilder_setScales(spec.scales??[],lineProps),spec.marks=addLineMarks(spec.marks??[],lineProps),spec})),lineSpecBuilder_addData=(0,immer.jM)(((data,props)=>{const{dimension,scaleType,children,name,staticPoint}=props;if("time"===scaleType){const tableData=getTableData(data);tableData.transform=addTimeTransform(tableData.transform??[],dimension)}hasInteractiveChildren(children)&&(data.push(((name,source,hasPopover)=>({name:`${name}_highlightedData`,source,transform:[{type:"filter",expr:hasPopover?`${constants.sk} && ${constants.sk} === datum.${constants.i4} || !${constants.sk} && ${constants.qE} && ${constants.qE} === datum.${constants.i4}`:`${constants.qE} && ${constants.qE} === datum.${constants.i4}`}]}))(name,constants.H5,hasPopover(children))),data.push(getFilteredTooltipData(children))),staticPoint&&data.push(((name,staticPoint,source)=>({name:`${name}_staticPointData`,source,transform:[{type:"filter",expr:`datum.${staticPoint} === true`}]}))(name,staticPoint,constants.H5)),addTrendlineData(data,props),data.push(...(markProps=>{const data=[],{children,name:markName}=markProps,metricRanges=getMetricRanges(children,markName);for(const metricRangeProps of metricRanges){const{displayOnHover,name}=metricRangeProps;displayOnHover&&data.push({name:`${name}_highlightedData`,source:constants.H5,transform:[{type:"filter",expr:`${constants.gG} && ${constants.gG} === datum.${constants.y4} || ${constants.uW} && ${constants.uW} === datum.${constants.y4}`}]})}return data})(props))})),lineSpecBuilder_addSignals=(0,immer.jM)(((signals,props)=>{const{children,name}=props;setTrendlineSignals(signals,props),signals.push(...(markProps=>{const signals=[],{children,name:markName}=markProps;return getMetricRanges(children,markName).length&&addHighlightedSeriesSignalEvents(signals,`${markName}_voronoi`,2),signals})(props)),hasInteractiveChildren(children)&&(addHighlightedItemSignalEvents(signals,`${name}_voronoi`,2),addHighlightedSeriesSignalEvents(signals,`${name}_voronoi`,2))})),lineSpecBuilder_setScales=(0,immer.jM)(((scales,props)=>{const{metric,dimension,color,lineType,opacity,padding,scaleType,children,name}=props;return addContinuousDimensionScale(scales,{scaleType,dimension,padding}),addFieldToFacetScaleDomain(scales,constants.Tj,color),addFieldToFacetScaleDomain(scales,constants.Ze,lineType),addFieldToFacetScaleDomain(scales,constants.$M,opacity),addMetricScale(scales,getMetricKeys(metric,children,name)),scales.push(...getTrendlineScales(props)),scales})),addLineMarks=(0,immer.jM)(((marks,props)=>{const{name,children,color,lineType,opacity,staticPoint}=props,{facets}=getFacetsFromProps({color,lineType,opacity});marks.push({name:`${name}_group`,type:"group",from:{facet:{name:`${name}_facet`,data:constants.H5,groupby:facets}},marks:[getLineMark(props,`${name}_facet`)]}),staticPoint&&marks.push((({name,metric,color,colorScheme,scaleType,dimension})=>({name:`${name}_staticPoints`,type:"symbol",from:{data:`${name}_staticPointData`},interactive:!1,encode:{enter:{y:{scale:"yLinear",field:metric},fill:getColorProductionRule(color,colorScheme),stroke:{signal:constants.b3}},update:{x:getXProductionRule(scaleType,dimension)}}}))(props)),marks.push(...(lineMarkProps=>{const{children,color,lineType,name:lineName}=lineMarkProps,{facets}=getFacetsFromProps({color,lineType}),marks=[],metricRanges=getMetricRanges(children,lineName);for(const metricRangeProps of metricRanges){const{displayOnHover,name}=metricRangeProps,data=displayOnHover?`${name}_highlightedData`:constants.H5;marks.push({name:`${name}_group`,type:"group",clip:!0,from:{facet:{name:`${name}_facet`,data,groupby:facets}},marks:getMetricRangeMark(lineMarkProps,metricRangeProps)})}return marks})(props)),hasInteractiveChildren(children)&&marks.push(...getLineHoverMarks(props,`${constants.H5}ForTooltip`)),marks.push(...getTrendlineMarks(props))})),getMetricKeys=(lineMetric,lineChildren,lineName)=>{const metricKeys=[lineMetric];return getMetricRanges(lineChildren,lineName).forEach((metricRange=>{metricRange.scaleAxisToFit&&metricKeys.push(metricRange.metricStart,metricRange.metricEnd)})),metricKeys},getScatterPaths=scatterProps=>scatterProps.children.filter((child=>child.type===ScatterPath)).map(((path,index)=>(({color="gray-500",groupBy,pathWidth={value:"M"},opacity=.5,...scatterPathProps},index,{color:scatterColor,colorScheme,dimension,dimensionScaleType,lineType,metric,name:scatterName,opacity:scatterOpacity,size})=>{const{facets}=getFacetsFromProps({color:scatterColor,lineType,size,opacity:scatterOpacity});return{color,colorScheme,dimension,dimensionScaleType,groupBy:groupBy??facets,metric,index,pathWidth,name:`${scatterName}Path${index}`,opacity,...scatterPathProps}})(path.props,index,scatterProps))),getScatterPathTrailMark=({color,colorScheme,dimension,dimensionScaleType,pathWidth,metric,name,opacity})=>({name,type:"trail",from:{data:`${name}_facet`},encode:{enter:{fill:{value:getColorValue(color,colorScheme)},fillOpacity:{value:opacity},size:getPathWidth(pathWidth)},update:{opacity:getOpacity(),x:getXProductionRule(dimensionScaleType,dimension),y:{scale:"yLinear",field:metric}}}}),getOpacity=()=>{const fadedValue=1/constants.ux;return[{test:`${constants.gG} || ${constants.qE} || ${constants.uW} || ${constants.sk}`,value:fadedValue},constants.ZH]},getPathWidth=pathWidth=>"string"==typeof pathWidth?{scale:constants.SR,field:pathWidth}:{value:getLineWidthPixelsFromLineWidth(pathWidth.value)},addScatterMarks=(0,immer.jM)(((marks,props)=>{const{name}=props,scatterGroup={name:`${name}_group`,type:"group",marks:[getScatterMark(props),...getScatterHoverMarks(props),...getScatterSelectMarks(props)]};marks.push(...(scatterProps=>{const marks=[];return getScatterPaths(scatterProps).forEach((path=>{const{groupBy,name}=path;marks.push({name:`${name}_group`,type:"group",from:{facet:{name:`${name}_facet`,data:constants.H5,groupby:groupBy}},marks:[getScatterPathTrailMark(path)]})})),marks})(props)),marks.push(scatterGroup),marks.push(...getTrendlineMarks(props))})),getScatterMark=props=>{const{color,colorScaleType,colorScheme,dimension,dimensionScaleType,lineType,lineWidth,metric,name,opacity,size}=props;return{name,type:"symbol",from:{data:constants.H5},encode:{enter:{blend:{value:"light"===colorScheme?"multiply":"screen"},fill:getColorProductionRule(color,colorScheme,colorScaleType),fillOpacity:getOpacityProductionRule(opacity),shape:{value:"circle"},size:getSymbolSizeProductionRule(size),strokeDash:getStrokeDashProductionRule(lineType),strokeWidth:getLineWidthProductionRule(lineWidth),stroke:getColorProductionRule(color,colorScheme,colorScaleType)},update:{opacity:scatterMarkUtils_getOpacity(props),x:getXProductionRule(dimensionScaleType,dimension),y:{scale:"yLinear",field:metric}}}}},scatterMarkUtils_getOpacity=({children})=>{if(!hasInteractiveChildren(children))return[constants.ZH];const fadedValue=1/constants.ux,rules=[{test:`${constants.qE} && ${constants.qE} !== datum.${constants.i4}`,value:fadedValue}];return hasPopover(children)&&rules.push({test:`${constants.sk} && ${constants.sk} !== datum.${constants.i4}`,value:fadedValue}),[...rules,constants.ZH]},getScatterHoverMarks=({children,name,metric,dimension,dimensionScaleType})=>hasInteractiveChildren(children)?[getPointsForVoronoi(`${constants.H5}ForTooltip`,dimension,metric,name,dimensionScaleType),getVoronoiPath(children,`${name}_pointsForVoronoi`,name)]:[],getScatterSelectMarks=({children,dimension,dimensionScaleType,metric,name,size})=>hasPopover(children)?[{name:`${name}_selectRing`,type:"symbol",from:{data:`${name}_selectedData`},encode:{enter:{fill:{value:"transparent"},shape:{value:"circle"},size:getSelectRingSize(size),strokeWidth:{value:2},stroke:{value:spectrumColors_namespaceObject.light["static-blue"]}},update:{x:getXProductionRule(dimensionScaleType,dimension),y:{scale:"yLinear",field:metric}}}}]:[],getSelectRingSize=size=>{const baseSize=getSymbolSizeProductionRule(size);return"value"in baseSize&&"number"==typeof baseSize.value?{value:Math.pow(Math.sqrt(baseSize.value)+4,2)}:"scale"in baseSize&&"field"in baseSize?{signal:`pow(sqrt(scale('${baseSize.scale}', datum.${baseSize.field})) + 4, 2)`}:baseSize},addScatter=(0,immer.jM)(((spec,{children,color={value:"categorical-100"},colorScaleType="ordinal",colorScheme=constants.gb,dimension=constants.tc,dimensionScaleType=constants.hA,index=0,lineType={value:"solid"},lineWidth={value:0},metric=constants.bA,name,opacity={value:1},size={value:"M"},...props})=>{const sanitizedChildren=sanitizeMarkChildren(children),scatterName=toCamelCase(name||`scatter${index}`),scatterProps={children:sanitizedChildren,color,colorScaleType,colorScheme,dimension,dimensionScaleType,index,interactiveMarkName:getInteractiveMarkName(sanitizedChildren,scatterName),lineType,lineWidth,metric,name:scatterName,opacity,size,...props};spec.data=scatterSpecBuilder_addData(spec.data??[],scatterProps),spec.signals=scatterSpecBuilder_addSignals(spec.signals??[],scatterProps),spec.scales=scatterSpecBuilder_setScales(spec.scales??[],scatterProps),spec.marks=addScatterMarks(spec.marks??[],scatterProps)})),scatterSpecBuilder_addData=(0,immer.jM)(((data,props)=>{const{children,dimension,dimensionScaleType,name}=props;if("time"===dimensionScaleType){const tableData=getTableData(data);tableData.transform=addTimeTransform(tableData.transform??[],dimension)}hasInteractiveChildren(children)&&data.push(getFilteredTooltipData(children)),hasPopover(children)&&data.push({name:`${name}_selectedData`,source:constants.H5,transform:[{type:"filter",expr:`${constants.sk} === datum.${constants.i4}`}]}),addTrendlineData(data,props)})),scatterSpecBuilder_addSignals=(0,immer.jM)(((signals,props)=>{const{children,name}=props;setTrendlineSignals(signals,props),hasInteractiveChildren(children)&&addHighlightedItemSignalEvents(signals,`${name}_voronoi`,2)})),scatterSpecBuilder_setScales=(0,immer.jM)(((scales,props)=>{const{color,colorScaleType,dimension,dimensionScaleType,lineType,lineWidth,metric,opacity,size}=props;addContinuousDimensionScale(scales,{scaleType:dimensionScaleType,dimension}),addMetricScale(scales,[metric]),addFieldToFacetScaleDomain(scales,"linear"===colorScaleType?constants.VQ:constants.Tj,color),addFieldToFacetScaleDomain(scales,constants.Ze,lineType),addFieldToFacetScaleDomain(scales,constants.Bg,lineWidth),addFieldToFacetScaleDomain(scales,constants.$M,opacity),addFieldToFacetScaleDomain(scales,constants.iJ,size),((scales,scatterProps)=>{getScatterPaths(scatterProps).forEach((path=>{addFieldToFacetScaleDomain(scales,constants.SR,path.pathWidth)}))})(scales,props),scales.push(...getTrendlineScales(props))})),addTitle=(0,immer.jM)(((spec,{text,fontWeight=constants.gO,position="middle",orient="top"})=>(spec.title={text,fontWeight,anchor:position,frame:"group",baseline:"top"===orient?"bottom":"top",orient},spec)));const removeUnusedScales=(0,immer.jM)((spec=>{spec.scales=spec.scales?.filter((scale=>!("domain"in scale&&scale.domain&&"fields"in scale.domain&&0===scale.domain.fields.length)))})),initializeComponentCounts=()=>({areaCount:-1,axisCount:-1,barCount:-1,donutCount:-1,legendCount:-1,lineCount:-1,scatterCount:-1}),getDefaultSignals=(backgroundColor,colors,colorScheme,lineTypes,opacities,hiddenSeries,highlightedSeries)=>{const signalBackgroundColor="transparent"===backgroundColor?"gray-50":backgroundColor;return[getGenericSignal(constants.b3,getColorValue(signalBackgroundColor,colorScheme)),getGenericSignal("colors",getTwoDimensionalColorScheme(colors,colorScheme)),getGenericSignal("lineTypes",getTwoDimensionalLineTypes(lineTypes)),getGenericSignal("opacities",getTwoDimensionalOpacities(opacities)),getGenericSignal("hiddenSeries",hiddenSeries??[]),getGenericSignal(constants.qE),getGenericSignal(constants.gG,highlightedSeries),getGenericSignal(constants.sk),getGenericSignal(constants.uW)]},getTwoDimensionalColorScheme=(colors,colorScheme)=>isColors(colors)?getColors(colors,colorScheme).map((color=>[color])):colors.map((color=>getColors(color,colorScheme))),getTwoDimensionalLineTypes=lineTypes=>isLineTypeArray(lineTypes)?getStrokeDashesFromLineTypes(lineTypes).map((strokeDash=>[strokeDash])):lineTypes.map((lineTypeArray=>getStrokeDashesFromLineTypes(lineTypeArray))),getTwoDimensionalOpacities=opacities=>opacities?isNumberArray(opacities)?opacities.map((opacity=>[opacity])):opacities:[[1]],getDefaultScales=(colors,colorScheme,lineTypes,lineWidths,opacities,symbolShapes,symbolSizes)=>[getColorScale(colors,colorScheme),getLinearColorScale(colors,colorScheme),getLineTypeScale(lineTypes),getLineWidthScale(lineWidths),getOpacityScale(opacities),getSymbolShapeScale(symbolShapes),getSymbolSizeScale(symbolSizes),getSymbolPathWidthScale(symbolSizes)],getColorScale=(colors,colorScheme)=>{const range=isColors(colors)?getColors(colors,colorScheme):colors.map((c=>getColors(c,colorScheme)[0]));return getOrdinalScale("color",range)},getLinearColorScale=(colors,colorScheme)=>{const range=isColors(colors)?getColors(colors,colorScheme):colors.map((c=>getColors(c,colorScheme)[0]));return{name:constants.VQ,type:"linear",range,domain:{data:constants.Bt,fields:[]}}},getLineTypeScale=lineTypes=>{const range=isLineTypeArray(lineTypes)?getStrokeDashesFromLineTypes(lineTypes):lineTypes.map((lineTypesArray=>getStrokeDashFromLineType(lineTypesArray[0])));return getOrdinalScale(constants.Ze,range)},getSymbolShapeScale=symbolShapes=>{const range=isSymbolShapeArray(symbolShapes)?function getPathsFromSymbolShapes(symbolShapes){return symbolShapes.map((symbolShape=>getPathFromSymbolShape(symbolShape)))}(symbolShapes):symbolShapes.map((symbolShape=>getPathFromSymbolShape(symbolShape[0])));return getOrdinalScale(constants.SJ,range)},getSymbolSizeScale=symbolSizes=>({name:constants.iJ,type:"linear",zero:!1,range:symbolSizes.map((symbolSize=>getVegaSymbolSizeFromRscSymbolSize(symbolSize))),domain:{data:constants.Bt,fields:[]}}),getSymbolPathWidthScale=symbolSizes=>({name:constants.SR,type:"linear",zero:!1,range:symbolSizes.map((symbolSize=>getSymbolWidthFromRscSymbolSize(symbolSize))),domain:{data:constants.Bt,fields:[]}}),getLineWidthScale=lineWidths=>{const range=lineWidths.map((lineWidth=>getLineWidthPixelsFromLineWidth(lineWidth)));return getOrdinalScale(constants.Bg,range)},getOpacityScale=opacities=>{if(opacities?.length){const range=isNumberArray(opacities)?opacities:opacities.map((opacityArray=>opacityArray[0]));return getOrdinalScale(constants.$M,range)}return{name:constants.$M,type:"point",range:[1,0],padding:1,align:1,domain:{data:constants.Bt,fields:[]}}};function getColors(colors,colorScheme){return Array.isArray(colors)?colors.map((color=>getColorValue(color,colorScheme))):colorSchemes[colors]}function getStrokeDashesFromLineTypes(lineTypes){return lineTypes.map((lineType=>getStrokeDashFromLineType(lineType)))}const chartSpecBuilder_addData=(0,immer.jM)(((data,{facets})=>{if(0===facets.length)return;data[0]?.transform?.push(getSeriesIdTransform(facets));const index=data.findIndex((datum=>datum.name===constants.H5));-1!==index&&(data[index].transform=[{type:"filter",expr:`indexof(hiddenSeries, datum.${constants.y4}) === -1`},...data[index].transform??[]])})),isColorScale=colors=>Boolean(!Array.isArray(colors)&&colors in colorSchemes),isColors=colors=>isColorScale(colors)||colors.some((color=>!isColorScale(color)&&"string"==typeof color)),isLineTypeArray=lineTypes=>lineTypes.some((lineType=>"string"==typeof lineType||isStrokeDashArray(lineType))),isStrokeDashArray=lineType=>Array.isArray(lineType)&&!lineType.some((value=>"number"!=typeof value)),isNumberArray=opacities=>!opacities.some((opacity=>Array.isArray(opacity))),isSymbolShapeArray=symbolShapes=>!symbolShapes.some((symbolShape=>Array.isArray(symbolShape)));function useSpec({backgroundColor,children,colors,colorScheme,data,description,hiddenSeries,highlightedSeries,lineTypes,lineWidths,opacities,symbolShapes,symbolSizes,title,UNSAFE_vegaSpec}){return(0,react.useMemo)((()=>{if(UNSAFE_vegaSpec){const vegaSpecWithDefaults=initializeSpec(UNSAFE_vegaSpec,{backgroundColor,colorScheme,data,description,title});return JSON.parse(JSON.stringify(vegaSpecWithDefaults))}return JSON.parse(JSON.stringify(function buildSpec({backgroundColor=constants.z6,children,colors="categorical12",description,hiddenSeries,highlightedSeries,lineTypes=constants.R9,lineWidths=["M"],opacities,symbolShapes=["rounded-square"],symbolSizes=["XS","XL"],colorScheme=constants.gb,title}){let spec=initializeSpec(null,{backgroundColor,colorScheme,description,title});spec.signals=getDefaultSignals(backgroundColor,colors,colorScheme,lineTypes,opacities,hiddenSeries,highlightedSeries),spec.scales=getDefaultScales(colors,colorScheme,lineTypes,lineWidths,opacities,symbolShapes,symbolSizes);const buildOrder=new Map;buildOrder.set(Area,0),buildOrder.set(Bar.y,0),buildOrder.set(Line,0),buildOrder.set(alpha.R,0),buildOrder.set(Scatter,0),buildOrder.set(Legend,1),buildOrder.set(Axis._,2),buildOrder.set(Title,3);let{areaCount,axisCount,barCount,donutCount,legendCount,lineCount,scatterCount}=initializeComponentCounts();return spec=[...children].sort(((a,b)=>buildOrder.get(a.type)-buildOrder.get(b.type))).reduce(((acc,cur)=>{if(!("displayName"in cur.type))return console.error("Invalid component type. Component is missing display name."),acc;switch(cur.type.displayName){case Area.displayName:return areaCount++,addArea(acc,{...cur.props,colorScheme,index:areaCount});case Axis._.displayName:return axisCount++,addAxis(acc,{...cur.props,colorScheme,index:axisCount});case Bar.y.displayName:return barCount++,addBar(acc,{...cur.props,colorScheme,index:barCount});case alpha.R.displayName:return donutCount++,addDonut(acc,{...cur.props,colorScheme,index:donutCount});case Legend.displayName:return legendCount++,addLegend(acc,{...cur.props,colorScheme,index:legendCount,hiddenSeries,highlightedSeries});case Line.displayName:return lineCount++,addLine(acc,{...cur.props,colorScheme,index:lineCount});case Scatter.displayName:return scatterCount++,addScatter(acc,{...cur.props,colorScheme,index:scatterCount});case Title.displayName:return addTitle(acc,{...cur.props});default:return console.error(`Invalid component type: ${cur.type.displayName} is not a supported <Chart> child`),acc}}),spec),spec=JSON.parse(JSON.stringify(spec)),spec.data=chartSpecBuilder_addData(spec.data??[],{facets:getFacetsFromScales(spec.scales)}),highlightedSeries&&setHoverOpacityForMarks(spec.marks??[]),spec=removeUnusedScales(spec),spec}({backgroundColor,children,colors,colorScheme,description,hiddenSeries,highlightedSeries,lineTypes,lineWidths,opacities,symbolShapes,symbolSizes,title})))}),[backgroundColor,children,colors,colorScheme,data,description,hiddenSeries,highlightedSeries,lineTypes,lineWidths,opacities,symbolShapes,symbolSizes,title,UNSAFE_vegaSpec])}var vega_module=__webpack_require__("./node_modules/vega/build/vega.module.js");const ADOBE_CLEAN_FONT="adobe-clean, 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Ubuntu, 'Trebuchet MS', 'Lucida Grande', sans-serif",FONT_SIZE=14;function getChartConfig(config,colorScheme){const defaultConfig=function getSpectrumVegaConfig(colorScheme){const{"blue-400":blue400,"gray-200":gray200,"gray-300":gray300,"gray-700":gray700,"gray-800":gray800,"gray-900":gray900}=spectrumColors_namespaceObject[colorScheme],horizontalLegendLayout={anchor:"middle",direction:"horizontal",center:!0,offset:24,bounds:"full",margin:48},verticalLegendLayout={anchor:"middle",direction:"vertical",center:!1,offset:24,bounds:"full",margin:24},defaultColor=spectrumColors_namespaceObject[colorScheme]["categorical-100"];return{axis:{bandPosition:.5,domain:!1,domainWidth:2,domainColor:gray900,gridColor:gray200,labelFont:ADOBE_CLEAN_FONT,labelFontSize:FONT_SIZE,labelFontWeight:"normal",labelPadding:8,labelOverlap:!0,labelColor:gray800,ticks:!1,tickColor:gray300,tickRound:!0,tickSize:8,tickCap:"round",tickWidth:1,titleAnchor:"middle",titleColor:gray800,titleFont:ADOBE_CLEAN_FONT,titleFontSize:FONT_SIZE,titleFontWeight:"bold",titlePadding:16},axisY:{labelLimit:180},range:{category:categorical16,diverging:divergentOrangeYellowSeafoam15,ordinal:categorical16,ramp:sequentialViridis16},background:constants.z6,legend:{columnPadding:20,labelColor:gray700,labelFont:ADOBE_CLEAN_FONT,labelFontSize:FONT_SIZE,labelFontWeight:"normal",labelLimit:184,layout:{bottom:horizontalLegendLayout,top:horizontalLegendLayout,left:verticalLegendLayout,right:verticalLegendLayout},rowPadding:8,symbolSize:250,symbolType:svgPaths.UU,symbolStrokeColor:gray700,titleColor:gray800,titleFont:ADOBE_CLEAN_FONT,titleFontSize:FONT_SIZE,titlePadding:8},arc:{fill:defaultColor},area:{fill:defaultColor,opacity:.8},line:{strokeWidth:2,stroke:defaultColor},path:{stroke:defaultColor},rect:{strokeWidth:0,stroke:blue400,fill:defaultColor},rule:{stroke:gray900,strokeWidth:2},shape:{stroke:defaultColor},symbol:{strokeWidth:constants.Zx,size:constants.Nq,fill:defaultColor},text:{fill:gray800,font:ADOBE_CLEAN_FONT,fontSize:FONT_SIZE},title:{offset:10,font:ADOBE_CLEAN_FONT,fontSize:18,color:gray800}}}(colorScheme);return config?(0,vega_module.mergeConfig)(defaultConfig,config):defaultConfig}const numberLocales={"ar-AE":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," د.إ."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-BH":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," د.ب."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-DJ":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":["‏Fdj ",""],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-DZ":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":["د.ج. ",""]}'),"ar-EG":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," ج.م."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-IL":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":["₪ ",""],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-IQ":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," د.ع."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-JO":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," د.أ."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-KM":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," ف.ج.ق."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-KW":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," د.ك."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-LB":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," ل.ل."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-LY":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":["د.ل. ",""]}'),"ar-MA":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":["د.م. ",""]}'),"ar-OM":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," ر.ع."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-PS":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":["₪ ",""],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-QA":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," ر.ق."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-SA":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," ر.س."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-SD":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," ج.س."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-SO":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":["‏S ",""],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-SS":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":["£ ",""],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-SY":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," ل.س."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-TD":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":["‏FCFA ",""],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-TN":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":["د.ت. ",""]}'),"ar-YE":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," ر.ى."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ca-ES":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":[""," €"]}'),"cs-CZ":JSON.parse('{"decimal":",","thousands":" ","grouping":[3],"currency":[""," Kč"]}'),"da-DK":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":[""," kr"]}'),"de-CH":JSON.parse('{"decimal":",","thousands":"\'","grouping":[3],"currency":[""," CHF"]}'),"de-DE":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":[""," €"]}'),"en-CA":JSON.parse('{"decimal":".","thousands":",","grouping":[3],"currency":["$",""]}'),"en-GB":JSON.parse('{"decimal":".","thousands":",","grouping":[3],"currency":["£",""]}'),"en-IE":JSON.parse('{"decimal":".","thousands":",","grouping":[3],"currency":["€",""]}'),"en-IN":JSON.parse('{"decimal":".","thousands":",","grouping":[3,2,2,2,2,2,2,2,2,2],"currency":["₹",""]}'),"en-US":JSON.parse('{"decimal":".","thousands":",","grouping":[3],"currency":["$",""]}'),"es-BO":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":["Bs ",""],"percent":" %"}'),"es-ES":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":[""," €"]}'),"es-MX":JSON.parse('{"decimal":".","thousands":",","grouping":[3],"currency":["$",""]}'),"fi-FI":JSON.parse('{"decimal":",","thousands":" ","grouping":[3],"currency":[""," €"]}'),"fr-CA":JSON.parse('{"decimal":",","thousands":" ","grouping":[3],"currency":["","$"]}'),"fr-FR":JSON.parse('{"decimal":",","thousands":" ","grouping":[3],"currency":[""," €"],"percent":" %"}'),"he-IL":JSON.parse('{"decimal":".","thousands":",","grouping":[3],"currency":["₪",""]}'),"hu-HU":JSON.parse('{"decimal":",","thousands":" ","grouping":[3],"currency":[""," Ft"]}'),"it-IT":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":["€",""]}'),"ja-JP":JSON.parse('{"decimal":".","thousands":",","grouping":[3],"currency":["","円"]}'),"ko-KR":JSON.parse('{"decimal":".","thousands":",","grouping":[3],"currency":["₩",""]}'),"mk-MK":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":[""," ден."]}'),"nl-NL":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":["€ ",""]}'),"pl-PL":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":["","zł"]}'),"pt-BR":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":["R$",""]}'),"pt-PT":JSON.parse('{"decimal":",","thousands":" ","grouping":[3],"currency":[""," €"]}'),"ru-RU":JSON.parse('{"decimal":",","thousands":" ","grouping":[3],"currency":[""," ₽"]}'),"sl-SI":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":[""," €"]}'),"sv-SE":JSON.parse('{"decimal":",","thousands":" ","grouping":[3],"currency":[""," kr"]}'),"uk-UA":JSON.parse('{"decimal":",","thousands":" ","grouping":[3],"currency":[""," ₴."]}'),"zh-CN":JSON.parse('{"decimal":".","thousands":",","grouping":[3],"currency":["¥",""]}')},timeLocales={"ar-EG":JSON.parse('{"dateTime":"%x, %X","date":"%-d/%-m/%Y","time":"%-I:%M:%S %p","periods":["ص","م"],"days":["الأحد","الإثنين","الثلاثاء","الأربعاء","الخميس","الجمعة","السبت"],"shortDays":["أحد","إثنين","ثلاثاء","أربعاء","خميس","جمعة","سبت"],"months":["يناير","فبراير","مارس","أبريل","مايو","يونيو","يوليو","أغسطس","سبتمبر","أكتوبر","نوفمبر","ديسمبر"],"shortMonths":["يناير","فبراير","مارس","أبريل","مايو","يونيو","يوليو","أغسطس","سبتمبر","أكتوبر","نوفمبر","ديسمبر"]}'),"ar-SY":JSON.parse('{"dateTime":"%x, %X","date":"%-d/%-m/%Y","time":"%-I:%M:%S %p","periods":["ص","م"],"days":["الأحد","الإثنين","الثلاثاء","الأربعاء","الخميس","الجمعة","السبت"],"shortDays":["أحد","إثنين","ثلاثاء","أربعاء","خميس","جمعة","سبت"],"months":["كانون الثاني","شباط","آذار","نيسان","أيار","حزيران","تموز","آب","أيلول","تشرين الأول","تشرين الثاني","كانون الأول"],"shortMonths":["ك٢","شباط","آذار","نيسان","أيار","حزيران","تموز","آب","أيلول","ت١","ت٢","ك١"]}'),"ca-ES":JSON.parse('{"dateTime":"%A, %e de %B de %Y, %X","date":"%d/%m/%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"],"shortDays":["dg.","dl.","dt.","dc.","dj.","dv.","ds."],"months":["gener","febrer","març","abril","maig","juny","juliol","agost","setembre","octubre","novembre","desembre"],"shortMonths":["gen.","febr.","març","abr.","maig","juny","jul.","ag.","set.","oct.","nov.","des."]}'),"cs-CZ":JSON.parse('{"dateTime":"%A,%e.%B %Y, %X","date":"%-d.%-m.%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["neděle","pondělí","úterý","středa","čvrtek","pátek","sobota"],"shortDays":["ne.","po.","út.","st.","čt.","pá.","so."],"months":["leden","únor","březen","duben","květen","červen","červenec","srpen","září","říjen","listopad","prosinec"],"shortMonths":["led","úno","břez","dub","kvě","čer","červ","srp","zář","říj","list","pros"]}'),"da-DK":JSON.parse('{"dateTime":"%A den %d %B %Y %X","date":"%d-%m-%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["søndag","mandag","tirsdag","onsdag","torsdag","fredag","lørdag"],"shortDays":["søn","man","tir","ons","tor","fre","lør"],"months":["januar","februar","marts","april","maj","juni","juli","august","september","oktober","november","december"],"shortMonths":["jan","feb","mar","apr","maj","jun","jul","aug","sep","okt","nov","dec"]}'),"de-CH":JSON.parse('{"dateTime":"%A, der %e. %B %Y, %X","date":"%d.%m.%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],"shortDays":["So","Mo","Di","Mi","Do","Fr","Sa"],"months":["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],"shortMonths":["Jan","Feb","Mrz","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"]}'),"de-DE":JSON.parse('{"dateTime":"%A, der %e. %B %Y, %X","date":"%d.%m.%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],"shortDays":["So","Mo","Di","Mi","Do","Fr","Sa"],"months":["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],"shortMonths":["Jan","Feb","Mrz","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"]}'),"en-CA":JSON.parse('{"dateTime":"%a %b %e %X %Y","date":"%Y-%m-%d","time":"%H:%M:%S","periods":["AM","PM"],"days":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"shortDays":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"shortMonths":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}'),"en-GB":JSON.parse('{"dateTime":"%a %e %b %X %Y","date":"%d/%m/%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"shortDays":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"shortMonths":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}'),"en-US":JSON.parse('{"dateTime":"%x, %X","date":"%-m/%-d/%Y","time":"%-I:%M:%S %p","periods":["AM","PM"],"days":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"shortDays":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"shortMonths":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}'),"es-ES":JSON.parse('{"dateTime":"%A, %e de %B de %Y, %X","date":"%d/%m/%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["domingo","lunes","martes","miércoles","jueves","viernes","sábado"],"shortDays":["dom","lun","mar","mié","jue","vie","sáb"],"months":["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],"shortMonths":["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"]}'),"es-MX":JSON.parse('{"dateTime":"%x, %X","date":"%d/%m/%Y","time":"%-I:%M:%S %p","periods":["AM","PM"],"days":["domingo","lunes","martes","miércoles","jueves","viernes","sábado"],"shortDays":["dom","lun","mar","mié","jue","vie","sáb"],"months":["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],"shortMonths":["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"]}'),"fa-IR":JSON.parse('{"dateTime":"%x, %X","date":"%-d/%-m/%Y","time":"%-I:%M:%S %p","periods":["صبح","عصر"],"days":["یکشنبه","دوشنبه","سه شنبه","چهارشنبه","پنجشنبه","جمعه","شنبه"],"shortDays":["یکشنبه","دوشنبه","سه شنبه","چهارشنبه","پنجشنبه","جمعه","شنبه"],"months":["ژانویه","فوریه","مارس","آوریل","مه","ژوئن","ژوئیه","اوت","سپتامبر","اکتبر","نوامبر","دسامبر"],"shortMonths":["ژانویه","فوریه","مارس","آوریل","مه","ژوئن","ژوئیه","اوت","سپتامبر","اکتبر","نوامبر","دسامبر"]}'),"fi-FI":JSON.parse('{"dateTime":"%A, %-d. %Bta %Y klo %X","date":"%-d.%-m.%Y","time":"%H:%M:%S","periods":["a.m.","p.m."],"days":["sunnuntai","maanantai","tiistai","keskiviikko","torstai","perjantai","lauantai"],"shortDays":["Su","Ma","Ti","Ke","To","Pe","La"],"months":["tammikuu","helmikuu","maaliskuu","huhtikuu","toukokuu","kesäkuu","heinäkuu","elokuu","syyskuu","lokakuu","marraskuu","joulukuu"],"shortMonths":["Tammi","Helmi","Maalis","Huhti","Touko","Kesä","Heinä","Elo","Syys","Loka","Marras","Joulu"]}'),"fr-CA":JSON.parse('{"dateTime":"%a %e %b %Y %X","date":"%Y-%m-%d","time":"%H:%M:%S","periods":["",""],"days":["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"],"shortDays":["dim","lun","mar","mer","jeu","ven","sam"],"months":["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"],"shortMonths":["jan","fév","mar","avr","mai","jui","jul","aoû","sep","oct","nov","déc"]}'),"fr-FR":JSON.parse('{"dateTime":"%A %e %B %Y à %X","date":"%d/%m/%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"],"shortDays":["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],"months":["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"],"shortMonths":["janv.","févr.","mars","avr.","mai","juin","juil.","août","sept.","oct.","nov.","déc."]}'),"he-IL":JSON.parse('{"dateTime":"%A, %e ב%B %Y %X","date":"%d.%m.%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["ראשון","שני","שלישי","רביעי","חמישי","שישי","שבת"],"shortDays":["א׳","ב׳","ג׳","ד׳","ה׳","ו׳","ש׳"],"months":["ינואר","פברואר","מרץ","אפריל","מאי","יוני","יולי","אוגוסט","ספטמבר","אוקטובר","נובמבר","דצמבר"],"shortMonths":["ינו׳","פבר׳","מרץ","אפר׳","מאי","יוני","יולי","אוג׳","ספט׳","אוק׳","נוב׳","דצמ׳"]}'),"hr-HR":JSON.parse('{"dateTime":"%A, %e. %B %Y., %X","date":"%d. %m. %Y.","time":"%H:%M:%S","periods":["AM","PM"],"days":["Nedjelja","Ponedjeljak","Utorak","Srijeda","Četvtrak","Petak","Subota"],"shortDays":["Ne","Po","Ut","Sr","Če","Pe","Su"],"months":["Siječanj","Veljača","Ožujak","Travanj","Svibanj","Lipanj","Srpanj","Kolovoz","Rujan","Listopad","Studeni","Prosinac"],"shortMonths":["Sij","Velj","Ožu","Tra","Svi","Lip","Srp","Kol","Ruj","Lis","Stu","Pro"]}'),"hu-HU":JSON.parse('{"dateTime":"%Y. %B %-e., %A %X","date":"%Y. %m. %d.","time":"%H:%M:%S","periods":["de.","du."],"days":["vasárnap","hétfő","kedd","szerda","csütörtök","péntek","szombat"],"shortDays":["V","H","K","Sze","Cs","P","Szo"],"months":["január","február","március","április","május","június","július","augusztus","szeptember","október","november","december"],"shortMonths":["jan.","feb.","már.","ápr.","máj.","jún.","júl.","aug.","szept.","okt.","nov.","dec."]}'),"it-IT":JSON.parse('{"dateTime":"%A %e %B %Y, %X","date":"%d/%m/%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["Domenica","Lunedì","Martedì","Mercoledì","Giovedì","Venerdì","Sabato"],"shortDays":["Dom","Lun","Mar","Mer","Gio","Ven","Sab"],"months":["Gennaio","Febbraio","Marzo","Aprile","Maggio","Giugno","Luglio","Agosto","Settembre","Ottobre","Novembre","Dicembre"],"shortMonths":["Gen","Feb","Mar","Apr","Mag","Giu","Lug","Ago","Set","Ott","Nov","Dic"]}'),"ja-JP":JSON.parse('{"dateTime":"%x %a %X","date":"%Y/%m/%d","time":"%H:%M:%S","periods":["AM","PM"],"days":["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"],"shortDays":["日","月","火","水","木","金","土"],"months":["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],"shortMonths":["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"]}'),"ko-KR":JSON.parse('{"dateTime":"%Y/%m/%d %a %X","date":"%Y/%m/%d","time":"%H:%M:%S","periods":["오전","오후"],"days":["일요일","월요일","화요일","수요일","목요일","금요일","토요일"],"shortDays":["일","월","화","수","목","금","토"],"months":["1월","2월","3월","4월","5월","6월","7월","8월","9월","10월","11월","12월"],"shortMonths":["1월","2월","3월","4월","5월","6월","7월","8월","9월","10월","11월","12월"]}'),"mk-MK":JSON.parse('{"dateTime":"%A, %e %B %Y г. %X","date":"%d.%m.%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["недела","понеделник","вторник","среда","четврток","петок","сабота"],"shortDays":["нед","пон","вто","сре","чет","пет","саб"],"months":["јануари","февруари","март","април","мај","јуни","јули","август","септември","октомври","ноември","декември"],"shortMonths":["јан","фев","мар","апр","мај","јун","јул","авг","сеп","окт","ное","дек"]}'),"nb-NO":JSON.parse('{"dateTime":"%A den %d. %B %Y %X","date":"%d.%m.%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["søndag","mandag","tirsdag","onsdag","torsdag","fredag","lørdag"],"shortDays":["søn","man","tir","ons","tor","fre","lør"],"months":["januar","februar","mars","april","mai","juni","juli","august","september","oktober","november","desember"],"shortMonths":["jan","feb","mars","apr","mai","juni","juli","aug","sep","okt","nov","des"]}'),"nl-BE":JSON.parse('{"dateTime":"%a %e %B %Y %X","date":"%d/%m/%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"],"shortDays":["zo","ma","di","wo","do","vr","za"],"months":["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"],"shortMonths":["jan","feb","mrt","apr","mei","jun","jul","aug","sep","okt","nov","dec"]}'),"nl-NL":JSON.parse('{"dateTime":"%a %e %B %Y %X","date":"%d-%m-%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"],"shortDays":["zo","ma","di","wo","do","vr","za"],"months":["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"],"shortMonths":["jan","feb","mrt","apr","mei","jun","jul","aug","sep","okt","nov","dec"]}'),"pl-PL":JSON.parse('{"dateTime":"%A, %e %B %Y, %X","date":"%d/%m/%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["Niedziela","Poniedziałek","Wtorek","Środa","Czwartek","Piątek","Sobota"],"shortDays":["Niedz.","Pon.","Wt.","Śr.","Czw.","Pt.","Sob."],"months":["Styczeń","Luty","Marzec","Kwiecień","Maj","Czerwiec","Lipiec","Sierpień","Wrzesień","Październik","Listopad","Grudzień"],"shortMonths":["Stycz.","Luty","Marz.","Kwie.","Maj","Czerw.","Lipc.","Sierp.","Wrz.","Paźdz.","Listop.","Grudz."]}'),"pt-BR":JSON.parse('{"dateTime":"%A, %e de %B de %Y. %X","date":"%d/%m/%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["Domingo","Segunda","Terça","Quarta","Quinta","Sexta","Sábado"],"shortDays":["Dom","Seg","Ter","Qua","Qui","Sex","Sáb"],"months":["Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro"],"shortMonths":["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Set","Out","Nov","Dez"]}'),"ru-RU":JSON.parse('{"dateTime":"%A, %e %B %Y г. %X","date":"%d.%m.%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["воскресенье","понедельник","вторник","среда","четверг","пятница","суббота"],"shortDays":["вс","пн","вт","ср","чт","пт","сб"],"months":["января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"],"shortMonths":["янв","фев","мар","апр","май","июн","июл","авг","сен","окт","ноя","дек"]}'),"sv-SE":JSON.parse('{"dateTime":"%A den %d %B %Y %X","date":"%Y-%m-%d","time":"%H:%M:%S","periods":["fm","em"],"days":["Söndag","Måndag","Tisdag","Onsdag","Torsdag","Fredag","Lördag"],"shortDays":["Sön","Mån","Tis","Ons","Tor","Fre","Lör"],"months":["Januari","Februari","Mars","April","Maj","Juni","Juli","Augusti","September","Oktober","November","December"],"shortMonths":["Jan","Feb","Mar","Apr","Maj","Jun","Jul","Aug","Sep","Okt","Nov","Dec"]}'),"tr-TR":JSON.parse('{"dateTime":"%a %e %b %X %Y","date":"%d/%m/%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["Pazar","Pazartesi","Salı","Çarşamba","Perşembe","Cuma","Cumartesi"],"shortDays":["Paz","Pzt","Sal","Çar","Per","Cum","Cmt"],"months":["Ocak","Şubat","Mart","Nisan","Mayıs","Haziran","Temmuz","Ağustos","Eylül","Ekim","Kasım","Aralık"],"shortMonths":["Oca","Şub","Mar","Nis","May","Haz","Tem","Ağu","Eyl","Eki","Kas","Ara"]}'),"uk-UA":JSON.parse('{"dateTime":"%A, %e %B %Y р. %X","date":"%d.%m.%Y","time":"%H:%M:%S","periods":["дп","пп"],"days":["неділя","понеділок","вівторок","середа","четвер","п\'ятниця","субота"],"shortDays":["нд","пн","вт","ср","чт","пт","сб"],"months":["січня","лютого","березня","квітня","травня","червня","липня","серпня","вересня","жовтня","листопада","грудня"],"shortMonths":["січ.","лют.","бер.","квіт.","трав.","черв.","лип.","серп.","вер.","жовт.","лист.","груд."]}'),"zh-CN":JSON.parse('{"dateTime":"%x %A %X","date":"%Y年%-m月%-d日","time":"%H:%M:%S","periods":["上午","下午"],"days":["星期日","星期一","星期二","星期三","星期四","星期五","星期六"],"shortDays":["周日","周一","周二","周三","周四","周五","周六"],"months":["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],"shortMonths":["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]}'),"zh-TW":JSON.parse('{"dateTime":"%x %A %X","date":"%Y年%-m月%-d日","time":"%H:%M:%S","periods":["上午","下午"],"days":["星期日","星期一","星期二","星期三","星期四","星期五","星期六"],"shortDays":["日","一","二","三","四","五","六"],"months":["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],"shortMonths":["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"]}')};var locale=__webpack_require__("./node_modules/d3-format/src/locale.js");const formatTimeDurationLabels=(numberLocale=numberLocales["en-US"])=>{const formatDuration=(0,locale.A)(numberLocale).format("02,d");return({value})=>{if("string"==typeof value)return value;const seconds=formatDuration(Math.floor(value%60)),minutes=formatDuration(Math.floor(value/60%60));return`${formatDuration(Math.floor(value/60/60))}:${minutes}:${seconds}`}},getLabelWidth=(text,fontWeight="bold",fontSize=12)=>{const context=document.createElement("canvas").getContext("2d");return null===context?0:(context.font=`${fontWeight} ${fontSize}px ${ADOBE_CLEAN_FONT}`,context.measureText(text).width)},expressionFunctions={consoleLog:value=>(console.log(value),value),formatPrimaryTimeLabels:(()=>{let prevLabel;return datum=>{const showLabel=0===datum.index||prevLabel!==datum.label;return prevLabel=datum.label,showLabel?datum.label:""}})(),getLabelWidth,truncateText:(text,maxWidth,fontWeight="normal",fontSize=12)=>{maxWidth-=4;const textWidth=getLabelWidth(text,fontWeight,fontSize),elipsisWidth=getLabelWidth("…",fontWeight,fontSize);if(textWidth<=maxWidth)return text;let truncatedText=text.slice(0,text.length-1).trim();for(let i=truncatedText.length;i>0&&(truncatedText=truncatedText.slice(0,truncatedText.length-1).trim(),!(getLabelWidth(truncatedText,fontWeight,fontSize)+elipsisWidth<=maxWidth));i--);return 0===truncatedText.length?text:truncatedText+"…"}},getNumberLocale=locale=>"string"==typeof locale?numberLocales[locale]??numberLocales["en-US"]:locale,getTimeLocale=locale=>"string"==typeof locale?timeLocales[locale]??timeLocales["en-US"]:locale;var vega_embed_module=__webpack_require__("./node_modules/vega-embed/build/vega-embed.module.js");const VegaChart=({config,data,debug,height,locale,onNewView,padding,renderer="svg",signals,spec,tooltip,width})=>{const containerRef=(0,react.useRef)(null),chartView=(0,react.useRef)(),{number:numberLocale,time:timeLocale}=(0,react.useMemo)((()=>((locale="en-US")=>"string"==typeof locale?{number:numberLocales[locale]??numberLocales["en-US"],time:timeLocales[locale]??timeLocales["en-US"]}:{number:getNumberLocale(locale.number),time:getTimeLocale(locale.time)})(locale)),[locale]),chartData=(0,react.useMemo)((()=>{const clonedData=JSON.parse(JSON.stringify(data));return isVegaData(clonedData)?(data=>data.reduce(((memo,dataset)=>{if(isVegaValuesDataset(dataset)){const{name,values}=dataset;memo[name]=values}return memo}),{}))(clonedData):{[constants.Bt]:clonedData}}),[data]);return((debug,spec,chartData,chartWidth,height,config)=>{(0,react.useEffect)((()=>{if(debug){const combinedData=((data,values)=>data.map((dataset=>{const datasetValues=values[dataset.name];return datasetValues&&(dataset.values=datasetValues),dataset})))(JSON.parse(JSON.stringify(spec.data)),chartData);debugLog(debug,{title:"react-spectrum-charts Vega Spec",contents:{width:chartWidth,height,config,...spec,data:combinedData}})}}),[debug,spec,chartData,chartWidth,height,config])})(debug,spec,chartData,width,height,config),(0,react.useEffect)((()=>{if(width&&height&&containerRef.current){const specCopy=JSON.parse(JSON.stringify(spec)),tableData=specCopy.data?.find((d=>d.name===constants.Bt));tableData&&"values"in tableData&&(tableData.values=chartData.table),signals&&(specCopy.signals=specCopy.signals?.map((signal=>(signal.name in signals&&void 0!==signals[signal.name]&&"value"in signal&&(signal.value=signals[signal.name]),signal)))),(0,vega_embed_module.Ay)(containerRef.current,specCopy,{actions:!1,config,expressionFunctions:{...expressionFunctions,formatTimeDurationLabels:formatTimeDurationLabels(numberLocale)},formatLocale:numberLocale,height,padding,renderer,timeFormatLocale:timeLocale,tooltip,width}).then((({view})=>{chartView.current=view,onNewView(view),view.resize(),view.runAsync()}))}return()=>{chartView.current&&(chartView.current.finalize(),chartView.current=void 0)}}),[chartData.table,config,data,height,numberLocale,timeLocale,onNewView,padding,renderer,signals,spec,tooltip,width]),(0,jsx_runtime.jsx)("div",{ref:containerRef,className:"rsc"})};VegaChart.__docgenInfo={description:"",methods:[],displayName:"VegaChart",props:{config:{required:!0,tsType:{name:"Config"},description:""},data:{required:!0,tsType:{name:"Array",elements:[{name:"union",raw:"SimpleData | Data",elements:[{name:"signature",type:"object",raw:"{ [key: string]: unknown }",signature:{properties:[{key:{name:"string"},value:{name:"unknown",required:!0}}]}},{name:"Data"}]}],raw:"ChartData[]"},description:""},debug:{required:!0,tsType:{name:"boolean"},description:""},height:{required:!0,tsType:{name:"number"},description:""},locale:{required:!0,tsType:{name:"ChartProps['locale']",raw:"ChartProps['locale']"},description:""},onNewView:{required:!0,tsType:{name:"signature",type:"function",raw:"(view: View) => void",signature:{arguments:[{type:{name:"View"},name:"view"}],return:{name:"void"}}},description:""},padding:{required:!0,tsType:{name:"Padding"},description:""},renderer:{required:!1,tsType:{name:"Renderers"},description:"",defaultValue:{value:"'svg'",computed:!1}},signals:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"unknown"}],raw:"Record<string, unknown>"},description:""},spec:{required:!0,tsType:{name:"Spec"},description:""},tooltip:{required:!0,tsType:{name:"TooltipOptions"},description:""},width:{required:!0,tsType:{name:"number"},description:""}}};var server_browser=__webpack_require__("./node_modules/react-dom/server.browser.js"),vega_tooltip_module=__webpack_require__("./node_modules/vega-tooltip/build/vega-tooltip.module.js"),dialog_dist_import=__webpack_require__("./node_modules/@react-spectrum/dialog/dist/import.mjs"),button_dist_import=__webpack_require__("./node_modules/@react-spectrum/button/dist/import.mjs"),view_dist_import=__webpack_require__("./node_modules/@react-spectrum/view/dist/import.mjs"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),Chart=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./src/Chart.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(Chart.A,options);Chart.A&&Chart.A.locals&&Chart.A.locals;const RscChart=(0,react.forwardRef)((({chartView,backgroundColor=constants.z6,data,colors="categorical12",colorScheme=constants.gb,config,description,debug=!1,hiddenSeries=[],highlightedSeries,lineTypes=constants.R9,lineWidths=["M"],locale=constants.Xn,opacities,padding=0,renderer="svg",symbolShapes,symbolSizes,title,chartHeight=300,chartWidth,UNSAFE_vegaSpec,chartId,...props},forwardedRef)=>{const selectedData=(0,react.useRef)(null),selectedDataName=(0,react.useRef)(),selectedDataBounds=(0,react.useRef)(),popoverAnchorRef=(0,react.useRef)(null),[popoverIsOpen,setPopoverIsOpen]=(0,react.useState)(!1),sanitizedChildren=toArray(props.children).flat().filter((child=>isChartChildElement(child)));const spec=useSpec({backgroundColor,children:sanitizedChildren,colors,data,description,hiddenSeries,highlightedSeries,symbolShapes,symbolSizes,lineTypes,lineWidths,opacities,colorScheme,title,UNSAFE_vegaSpec}),{controlledHoverSignal}=function useSpecProps(spec){return(0,react.useMemo)((()=>{const controlledHoverSignal=spec.signals?.find((signal=>signal.name.includes("controlledHoveredId")));return{controlledHoverSignal}}),[spec])}(spec),chartConfig=(0,react.useMemo)((()=>getChartConfig(config,colorScheme)),[config,colorScheme]);(0,react.useEffect)((()=>{const tooltipElement=document.getElementById("vg-tooltip-element");tooltipElement&&(tooltipElement.hidden=popoverIsOpen,popoverIsOpen||(selectedData.current=null))}),[popoverIsOpen]),useChartImperativeHandle(forwardedRef,{chartView,title});const{hiddenSeriesState,setHiddenSeries,descriptions:legendDescriptions,isToggleable:legendIsToggleable,onClick:onLegendClick,onMouseOut:onLegendMouseOut,onMouseOver:onLegendMouseOver}=useLegend(sanitizedChildren),tooltips=function useTooltips(children){const tooltipElements=(0,react.useMemo)((()=>getAllElements((0,react.createElement)(Chart_Chart,{data:[]},children),ChartTooltip.I,[])),[children]);return(0,react.useMemo)((()=>tooltipElements.filter((tooltip=>tooltip.element.props.children)).map((tooltip=>({name:tooltip.name,callback:tooltip.element.props.children})))),[tooltipElements])}(sanitizedChildren),popovers=function usePopovers(children){const popoverElements=(0,react.useMemo)((()=>getAllElements((0,react.createElement)(Chart_Chart,{data:[]},children),ChartPopover,[])),[children]);return(0,react.useMemo)((()=>popoverElements.filter((popover=>popover.element.props.children)).map((popover=>({name:popover.name,callback:popover.element.props.children,width:popover.element.props.width})))),[popoverElements])}(sanitizedChildren),targetStyle=function usePopoverAnchorStyle(popoverIsOpen,view,bounds,padding){return(0,react.useMemo)((()=>{if(popoverIsOpen&&bounds&&view){const{x1,x2,y1,y2}=bounds,leftPadding=("number"==typeof padding?padding:padding.left)??0,topPadding=("number"==typeof padding?padding:padding.top)??0;return{position:"absolute",width:x2-x1,height:y2-y1,left:x1+leftPadding+view.origin()[0],top:y1+topPadding+view.origin()[1]}}return{display:"none"}}),[popoverIsOpen,view,bounds,padding])}(popoverIsOpen,chartView.current,selectedDataBounds.current,padding),tooltipConfig={theme:colorScheme};(tooltips.length||legendDescriptions)&&(tooltipConfig.formatTooltip=value=>{if(debugLog(debug,{title:"Tooltip datum",contents:value}),value.rscComponentName?.startsWith("legend")&&legendDescriptions&&"index"in value)return debugLog(debug,{title:"Legend descriptions",contents:legendDescriptions}),(0,server_browser.renderToStaticMarkup)((0,jsx_runtime.jsx)(LegendTooltip,{value,descriptions:legendDescriptions,domain:chartView.current?.scale("legend0Entries").domain()}));const tooltip=tooltips.find((t=>t.name===value.rscComponentName))?.callback;return tooltip&&!("index"in value)?(controlledHoverSignal&&chartView.current?.signal(controlledHoverSignal.name,value?.[constants.i4]??null),(0,server_browser.renderToStaticMarkup)((0,jsx_runtime.jsx)("div",{className:"rsc-tooltip","data-testid":"rsc-tooltip",children:tooltip(value)}))):""});const signals=(0,react.useMemo)((()=>{const signals={backgroundColor:getColorValue("gray-50",colorScheme)};return legendIsToggleable&&(signals.hiddenSeries=hiddenSeriesState),signals[constants.sk]=selectedData?.[constants.i4]??null,signals[constants.uW]=selectedData?.[constants.y4]??null,signals}),[colorScheme,hiddenSeriesState,legendIsToggleable]);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("div",{id:`${chartId.current}-popover-anchor`,"data-testid":"rsc-popover-anchor",ref:popoverAnchorRef,style:targetStyle}),(0,jsx_runtime.jsx)(VegaChart,{spec,config:chartConfig,data,debug,renderer,width:chartWidth,height:chartHeight,locale,padding,signals,tooltip:tooltipConfig,onNewView:view=>{let tooltipTimeout;chartView.current=view,view.tooltip(((_,event,item,value)=>{const tooltipHandler=new vega_tooltip_module.hR(tooltipConfig);tooltipTimeout&&(clearTimeout(tooltipTimeout),tooltipTimeout=void 0),event&&"pointermove"===event.type&&itemIsLegendItem(item)&&"tooltip"in item?tooltipTimeout=setTimeout((()=>{tooltipHandler.call(void 0,event,item,value),tooltipTimeout=void 0}),constants.mm):tooltipHandler.call(void 0,event,item,value)})),(popovers.length||legendIsToggleable||onLegendClick)&&(legendIsToggleable&&view.signal("hiddenSeries",hiddenSeriesState),(({selectedData,view})=>{view.signal(constants.sk,selectedData?.[constants.i4]??null),view.signal(constants.uW,selectedData?.[constants.y4]??null)})({selectedData:selectedData.current,view}),view.addEventListener("click",((chartView,hiddenSeries,chartId,selectedData,selectedDataBounds,selectedDataName,setHiddenSeries,legendIsToggleable,onLegendClick)=>(_event,item)=>{item&&(isLegendItem(item)?handleLegendItemClick(item,hiddenSeries,setHiddenSeries,legendIsToggleable,onLegendClick):(isGroupMarkItem(item)&&(item=item.datum),isAreaMarkItem(item)&&(item=getItemForAreaMark(item)),isItemSceneItem(item)&&"group"!==item.mark.marktype&&chartView.current&&(selectedData.current=item.datum,selectedDataBounds.current=getItemBounds(item),selectedDataName.current=getItemName(item),document.querySelector(`#${chartId.current} > button`)?.click())))})(chartView,hiddenSeriesState,chartId,selectedData,selectedDataBounds,selectedDataName,setHiddenSeries,legendIsToggleable,onLegendClick))),view.addEventListener("mouseover",getOnMouseInputCallback(onLegendMouseOver)),view.addEventListener("mouseout",getOnMouseInputCallback(onLegendMouseOut))}}),(0,jsx_runtime.jsx)(ChartDialog,{datum:selectedData.current,targetElement:popoverAnchorRef,setPopoverState:setPopoverIsOpen,popovers,itemName:selectedDataName.current})]})}));RscChart.displayName="RscChart";const ChartDialog=({datum,itemName,targetElement,setPopoverState,popovers})=>{if(!popovers.length)return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{});const popoverDetail=popovers.find((p=>p.name===itemName)),popover=popoverDetail?.callback,width=popoverDetail?.width;return(0,jsx_runtime.jsxs)(dialog_dist_import.zM,{type:"popover",mobileType:"tray",targetRef:targetElement,onOpenChange:setPopoverState,placement:"top",hideArrow:!0,children:[(0,jsx_runtime.jsx)(button_dist_import.rA,{UNSAFE_style:{display:"none"},children:"launch chart popover"}),close=>(0,jsx_runtime.jsx)(dialog_dist_import.lG,{"data-testid":"rsc-popover",UNSAFE_className:"rsc-popover",minWidth:"size-1000",width,children:(0,jsx_runtime.jsx)(view_dist_import.Ss,{gridColumn:"1/-1",gridRow:"1/-1",margin:12,children:popover&&datum&&popover(datum,close)})})]})},LegendTooltip=({value,descriptions,domain})=>{const series=domain[value.index],description=descriptions.find((d=>d.seriesName===series));return description?(0,jsx_runtime.jsxs)("div",{className:"rsc-tooltip legend-tooltip","data-testid":"rsc-tooltip",children:[(0,jsx_runtime.jsx)("div",{className:"series",children:description.title??series}),(0,jsx_runtime.jsx)("p",{className:"series-description",children:description.description})]}):(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{})},itemIsLegendItem=item=>"name"in item.mark&&"string"==typeof item.mark.name&&item.mark.name.includes("legend");RscChart.__docgenInfo={description:"",methods:[],displayName:"RscChart",props:{backgroundColor:{defaultValue:{value:"'transparent'",computed:!1},required:!1},colors:{defaultValue:{value:"'categorical12'",computed:!1},required:!1},colorScheme:{defaultValue:{value:"'light'",computed:!1},required:!1},debug:{defaultValue:{value:"false",computed:!1},required:!1},hiddenSeries:{defaultValue:{value:"[]",computed:!1},required:!1},lineTypes:{defaultValue:{value:"['solid', 'dashed', 'dotted', 'dotDash', 'longDash', 'twoDash']",computed:!1},required:!1},lineWidths:{defaultValue:{value:"['M']",computed:!1},required:!1},locale:{defaultValue:{value:"'en-US'",computed:!1},required:!1},padding:{defaultValue:{value:"0",computed:!1},required:!1},renderer:{defaultValue:{value:"'svg'",computed:!1},required:!1},chartHeight:{defaultValue:{value:"300",computed:!1},required:!1}}};var v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),theme_default_dist_import=__webpack_require__("./node_modules/@react-spectrum/theme-default/dist/import.mjs"),provider_dist_import=__webpack_require__("./node_modules/@react-spectrum/provider/dist/import.mjs");const Chart_Chart=(0,react.forwardRef)((({backgroundColor=constants.z6,data,colors="categorical12",colorScheme=constants.gb,config,dataTestId,description,debug=!1,emptyStateText="No data found",height=300,hiddenSeries=[],highlightedSeries,lineTypes=constants.R9,lineWidths=["M"],loading,locale=constants.Xn,minHeight=100,maxHeight=1/0,minWidth=100,maxWidth=1/0,opacities,padding=0,renderer="svg",symbolShapes,symbolSizes,theme=theme_default_dist_import.w,title,width="auto",UNSAFE_vegaSpec,...props},forwardedRef)=>{const chartId=(0,react.useRef)(`rsc-${(0,v4.A)()}`),chartView=(0,react.useRef)(),[containerWidth,setContainerWidth]=(0,react.useState)(0),[containerHeight,setContainerHeight]=(0,react.useState)(0);useChartImperativeHandle(forwardedRef,{chartView,title});const containerRef=(callback=>{const ref=(0,react.useRef)(null);return(0,react.useLayoutEffect)((()=>{const element=ref?.current;if(!element)return;if("undefined"==typeof ResizeObserver)return void callback(element,{contentRect:{width:500,height:500}});const observer=new ResizeObserver((entries=>{callback(element,entries[0])}));return observer.observe(element),()=>{observer.disconnect()}}),[callback,ref]),ref})(((_target,entry)=>{"number"!=typeof width&&setContainerWidth(entry.contentRect.width),"number"!=typeof height&&setContainerHeight(entry.contentRect.height)})),chartWidth=function useChartWidth(containerWidth,maxWidth,minWidth,width){return(0,react.useMemo)((()=>{let targetWidth=minWidth;return"number"==typeof width?targetWidth=width:"auto"===width?targetWidth=containerWidth:width.match(/^\d+%$/)?targetWidth=containerWidth*Number(width.slice(0,-1))/100:console.error(`width of ${width} is not a valid width. Please provide a valid number, 'auto' or percentage ex. 75%`),0===targetWidth?0:Math.min(maxWidth,Math.max(minWidth,targetWidth))}),[containerWidth,maxWidth,minWidth,width])}(containerWidth,maxWidth,minWidth,width),chartHeight=function useChartHeight(containerHeight,maxHeight,minHeight,height){return(0,react.useMemo)((()=>{let targetHeight=minHeight;return"number"==typeof height?targetHeight=height:height.match(/^\d+%$/)?targetHeight=containerHeight*Number(height.slice(0,-1))/100:console.error(`height of ${height} is not a valid height. Please provide a valid number or percentage ex. 75%`),0===targetHeight?0:Math.min(maxHeight,Math.max(minHeight,targetHeight))}),[containerHeight,maxHeight,minHeight,height])}(containerHeight,maxHeight,minHeight,height),showPlaceholderContent=(0,react.useMemo)((()=>Boolean(loading??!data.length)),[loading,data]);if((0,react.useEffect)((()=>{showPlaceholderContent&&(chartView.current=void 0)}),[showPlaceholderContent]),props.children&&UNSAFE_vegaSpec)throw new Error("Chart cannot accept both children and `UNSAFE_vegaSpec` prop. Please choose one or the other.");if(!props.children&&!UNSAFE_vegaSpec)throw new Error("No children in the <Chart/> component. Chart is a collection components and requires children to draw correctly.");return(0,jsx_runtime.jsx)(provider_dist_import.Kq,{colorScheme,theme:isValidTheme(theme)?theme:theme_default_dist_import.w,UNSAFE_style:{backgroundColor:"transparent"},height:"100%",children:(0,jsx_runtime.jsx)("div",{ref:containerRef,id:chartId.current,"data-testid":dataTestId,className:"rsc-container",style:{backgroundColor:getColorValue(backgroundColor,colorScheme),height:"100%"},children:showPlaceholderContent?(0,jsx_runtime.jsx)(PlaceholderContent,{loading,data,height:chartHeight,emptyStateText}):(0,jsx_runtime.jsx)(RscChart,{chartView,chartId,data,backgroundColor,colors,colorScheme,config,description,debug,hiddenSeries,highlightedSeries,lineTypes,lineWidths,locale,opacities,padding,renderer,symbolShapes,symbolSizes,title,chartHeight,chartWidth,UNSAFE_vegaSpec,children:props.children})})})}));Chart_Chart.displayName="Chart";const PlaceholderContent=({data,emptyStateText,loading,...layoutProps})=>loading?(0,jsx_runtime.jsx)(LoadingState,{...layoutProps}):data.length?(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{}):(0,jsx_runtime.jsx)(EmptyState.p,{...layoutProps,text:emptyStateText}),isValidTheme=theme=>"object"==typeof theme&&null!==theme&&"light"in theme&&"dark"in theme;Chart_Chart.__docgenInfo={description:"",methods:[],displayName:"Chart",props:{backgroundColor:{defaultValue:{value:"'transparent'",computed:!1},required:!1},colors:{defaultValue:{value:"'categorical12'",computed:!1},required:!1},colorScheme:{defaultValue:{value:"'light'",computed:!1},required:!1},debug:{defaultValue:{value:"false",computed:!1},required:!1},emptyStateText:{defaultValue:{value:"'No data found'",computed:!1},required:!1},height:{defaultValue:{value:"300",computed:!1},required:!1},hiddenSeries:{defaultValue:{value:"[]",computed:!1},required:!1},lineTypes:{defaultValue:{value:"['solid', 'dashed', 'dotted', 'dotDash', 'longDash', 'twoDash']",computed:!1},required:!1},lineWidths:{defaultValue:{value:"['M']",computed:!1},required:!1},locale:{defaultValue:{value:"'en-US'",computed:!1},required:!1},minHeight:{defaultValue:{value:"100",computed:!1},required:!1},maxHeight:{defaultValue:{value:"Infinity",computed:!0},required:!1},minWidth:{defaultValue:{value:"100",computed:!1},required:!1},maxWidth:{defaultValue:{value:"Infinity",computed:!0},required:!1},padding:{defaultValue:{value:"0",computed:!1},required:!1},renderer:{defaultValue:{value:"'svg'",computed:!1},required:!1},theme:{defaultValue:{value:"defaultTheme",computed:!0},required:!1},width:{defaultValue:{value:"'auto'",computed:!1},required:!1}}}},"./src/svgPaths.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{DX:()=>DATE_PATH,UU:()=>ROUNDED_SQUARE_PATH,gM:()=>ANNOTATION_SINGLE_ICON_SVG,jc:()=>ANNOTATION_RANGED_ICON_SVG});const ROUNDED_SQUARE_PATH="M -0.55 -1 h 1.1 a 0.45 0.45 0 0 1 0.45 0.45 v 1.1 a 0.45 0.45 0 0 1 -0.45 0.45 h -1.1 a 0.45 0.45 0 0 1 -0.45 -0.45 v -1.1 a 0.45 0.45 0 0 1 0.45 -0.45 z",DATE_PATH="M 0.88 -0.66 H 0.605 V -0.825 a 0.055 0.055 90 0 0 -0.055 -0.055 h -0.11 a 0.055 0.055 90 0 0 -0.055 0.055 V -0.66 H -0.385 V -0.825 A 0.055 0.055 90 0 0 -0.44 -0.88 h -0.11 a 0.055 0.055 90 0 0 -0.055 0.055 V -0.66 H -0.88 a 0.055 0.055 90 0 0 -0.055 0.055 v 1.43 a 0.055 0.055 90 0 0 0.055 0.055 h 1.76 a 0.055 0.055 90 0 0 0.055 -0.055 V -0.605 A 0.055 0.055 90 0 0 0.88 -0.66 Z M 0.825 0.77 H -0.825 V -0.55 H -0.605 v 0.055 a 0.055 0.055 90 0 0 0.055 0.055 h 0.11 A 0.055 0.055 90 0 0 -0.385 -0.495 V -0.55 h 0.77 v 0.055 a 0.055 0.055 90 0 0 0.055 0.055 h 0.11 a 0.055 0.055 90 0 0 0.055 -0.055 V -0.55 h 0.22 Z M 0.165 0.165 v 0.33 a 0.055 0.055 90 0 0 0.055 0.055 h 0.33 a 0.055 0.055 90 0 0 0.055 -0.055 v -0.33 a 0.055 0.055 90 0 0 -0.055 -0.055 h -0.33 a 0.055 0.055 90 0 0 -0.055 0.055",ANNOTATION_SINGLE_ICON_SVG="M 6.86 -8.32 H -7.79 a 0.53 0.53 90 0 0 -0.53 0.53 v 14.65 a 0.53 0.53 90 0 0 0.53 0.53 H 1.72 V 2.9 a 1.06 1.06 90 0 1 1.06 -1.06 h 4.49 V -7.79 A 0.53 0.53 90 0 0 6.86 -8.32 Z M -0.4 2.9 H -5.02 V 1.72 H -0.4 Z m 4.49 -3.3 H -5.02 V -1.58 h 8.98 Z m 0 -3.3 H -5.02 V -5.02 h 8.98 Z M 2.9 7.39 V 3.43 a 0.53 0.53 90 0 1 0.53 -0.53 H 7.39 a 0.66 0.66 90 0 1 -0.13 0.53 l -3.83 3.83 A 0.66 0.66 90 0 1 2.9 7.39 Z",ANNOTATION_RANGED_ICON_SVG="M 3.8 7.6 V 4.3 A 0.5 0.5 90 0 1 4.3 3.8 h 3.3 a 0.6 0.6 90 0 1 -0.1 0.4 L 4.2 7.5 a 0.6 0.6 90 0 1 -0.4 0.1 Z m 3.7 -15.1 a 0.5 0.5 90 0 0 -0.4 -0.2 H -7.1 a 0.5 0.5 90 0 0 -0.5 0.5 v 14.2 a 0.5 0.5 90 0 0 0.5 0.5 H 2.5 V 3.6 a 1.1 1.1 90 0 1 1.1 -1.1 H 7.6 V -7.1 A 0.5 0.5 90 0 0 7.5 -7.5 Z M 5.7 -3.3 l -1.9 1.9 a 0.2 0.2 90 0 1 -0.1 0 a 0.2 0.2 90 0 1 -0.1 0 a 0.2 0.2 90 0 1 -0.1 -0 a 0.2 0.2 90 0 1 -0.1 -0 a 0.2 0.2 90 0 1 -0 -0.1 a 0.2 0.2 90 0 1 -0 -0.1 v -1 L -3.4 -2.6 l -0 1 a 0.2 0.2 90 0 1 -0.1 0.2 a 0.2 0.2 90 0 1 -0.2 0.1 a 0.2 0.2 90 0 1 -0.1 -0 a 0.2 0.2 90 0 1 -0.1 -0 L -5.7 -3.3 a 0.2 0.2 90 0 1 0 -0.2 L -3.8 -5.4 a 0.2 0.2 90 0 1 0.2 -0.1 a 0.2 0.2 90 0 1 0.2 0.1 a 0.2 0.2 90 0 1 0 0.1 a 0.2 0.2 90 0 1 0 0.1 l 0 1 l 6.8 0 V -5.3 a 0.2 0.2 90 0 1 0 -0.1 a 0.2 0.2 90 0 1 0 -0.1 a 0.2 0.2 90 0 1 0.3 -0 l 1.9 1.9 a 0.2 0.2 90 0 1 0 0.2 Z"},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./src/Chart.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,'/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/* \nthe vega tooltip won\'t pick up spectrum variables\nset all the default styling\n*/\n#vg-tooltip-element.vg-tooltip {\n\tborder-radius: 4px;\n\tfont-family: adobe-clean-ux, adobe-clean, Source Sans Pro, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,\n\t\tsans-serif;\n\tfont-size: 14px;\n\tfont-style: normal;\n\tfont-weight: 400;\n\tline-height: 21px;\n\tpadding: 12px;\n\tmax-width: 300px;\n}\n/*\nsections sometimes add a 500ms transition but vega tooltips close instantly\nthis removes transitions in the vega tooltip\n*/\n#vg-tooltip-element.vg-tooltip section {\n\ttransition: none;\n}\n/* double scope light-theme so that it has higher precedence */\n#vg-tooltip-element.vg-tooltip.light-theme.light-theme {\n\tcolor-scheme: light;\n\tborder: 1px solid #cacaca;\n\tbackground-color: #fff;\n\tcolor: #4b4b4b;\n}\n/* double scope dark-theme so that it has higher precedence */\n#vg-tooltip-element.vg-tooltip.dark-theme.dark-theme {\n\tcolor-scheme: dark;\n\tborder: 1px solid #494949;\n\tbackground-color: #000;\n\tcolor: #c8c8c8;\n}\n#vg-tooltip-element.vg-tooltip .legend-tooltip .series {\n\tfont-weight: 700;\n}\n#vg-tooltip-element.vg-tooltip .legend-tooltip .series-description {\n\tmargin: 0px;\n\tmax-width: 150px;\n}\n.rsc-container {\n\tposition: relative;\n\twidth: auto;\n\theight: auto;\n}\n',"",{version:3,sources:["webpack://./src/Chart.css"],names:[],mappings:"AAAA;;;;;;;;;;EAUE;;AAEF;;;CAGC;AACD;CACC,kBAAkB;CAClB;YACW;CACX,eAAe;CACf,kBAAkB;CAClB,gBAAgB;CAChB,iBAAiB;CACjB,aAAa;CACb,gBAAgB;AACjB;AACA;;;CAGC;AACD;CACC,gBAAgB;AACjB;AACA,8DAA8D;AAC9D;CACC,mBAAmB;CACnB,yBAAyB;CACzB,sBAAsB;CACtB,cAAc;AACf;AACA,6DAA6D;AAC7D;CACC,kBAAkB;CAClB,yBAAyB;CACzB,sBAAsB;CACtB,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,WAAW;CACX,gBAAgB;AACjB;AACA;CACC,kBAAkB;CAClB,WAAW;CACX,YAAY;AACb",sourcesContent:['/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/* \nthe vega tooltip won\'t pick up spectrum variables\nset all the default styling\n*/\n#vg-tooltip-element.vg-tooltip {\n\tborder-radius: 4px;\n\tfont-family: adobe-clean-ux, adobe-clean, Source Sans Pro, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,\n\t\tsans-serif;\n\tfont-size: 14px;\n\tfont-style: normal;\n\tfont-weight: 400;\n\tline-height: 21px;\n\tpadding: 12px;\n\tmax-width: 300px;\n}\n/*\nsections sometimes add a 500ms transition but vega tooltips close instantly\nthis removes transitions in the vega tooltip\n*/\n#vg-tooltip-element.vg-tooltip section {\n\ttransition: none;\n}\n/* double scope light-theme so that it has higher precedence */\n#vg-tooltip-element.vg-tooltip.light-theme.light-theme {\n\tcolor-scheme: light;\n\tborder: 1px solid #cacaca;\n\tbackground-color: #fff;\n\tcolor: #4b4b4b;\n}\n/* double scope dark-theme so that it has higher precedence */\n#vg-tooltip-element.vg-tooltip.dark-theme.dark-theme {\n\tcolor-scheme: dark;\n\tborder: 1px solid #494949;\n\tbackground-color: #000;\n\tcolor: #c8c8c8;\n}\n#vg-tooltip-element.vg-tooltip .legend-tooltip .series {\n\tfont-weight: 700;\n}\n#vg-tooltip-element.vg-tooltip .legend-tooltip .series-description {\n\tmargin: 0px;\n\tmax-width: 150px;\n}\n.rsc-container {\n\tposition: relative;\n\twidth: auto;\n\theight: auto;\n}\n'],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./src/components/EmptyState/EmptyState.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,'/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n.EmptyState-icon.EmptyState-icon {\n\tfill: lightgray;\n}\n.EmptyState-text {\n\tcolor: lightgray;\n}\n',"",{version:3,sources:["webpack://./src/components/EmptyState/EmptyState.css"],names:[],mappings:"AAAA;;;;;;;;;;EAUE;;AAEF;CACC,eAAe;AAChB;AACA;CACC,gBAAgB;AACjB",sourcesContent:['/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n.EmptyState-icon.EmptyState-icon {\n\tfill: lightgray;\n}\n.EmptyState-text {\n\tcolor: lightgray;\n}\n'],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);